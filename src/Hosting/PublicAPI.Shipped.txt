Rocket.Surgery.Hosting.RocketBooster
Rocket.Surgery.Hosting.RocketHostExtensions
Rocket.Surgery.Hosting.ServicesBuilderServiceProviderFactory
Rocket.Surgery.Hosting.ServicesBuilderServiceProviderFactory.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection services) -> Rocket.Surgery.Extensions.DependencyInjection.IServicesBuilder
Rocket.Surgery.Hosting.ServicesBuilderServiceProviderFactory.CreateServiceProvider(Rocket.Surgery.Extensions.DependencyInjection.IServicesBuilder containerBuilder) -> System.IServiceProvider
Rocket.Surgery.Hosting.ServicesBuilderServiceProviderFactory.ServicesBuilderServiceProviderFactory(System.Func<Microsoft.Extensions.DependencyInjection.IServiceCollection, Rocket.Surgery.Extensions.DependencyInjection.IServicesBuilder> func) -> void
static Rocket.Surgery.Hosting.RocketBooster.For(Microsoft.Extensions.DependencyModel.DependencyContext dependencyContext, System.Diagnostics.DiagnosticSource diagnosticSource = null) -> System.Func<Microsoft.Extensions.Hosting.IHostBuilder, Rocket.Surgery.Hosting.IRocketHostBuilder>
static Rocket.Surgery.Hosting.RocketBooster.For(System.AppDomain appDomain, System.Diagnostics.DiagnosticSource diagnosticSource = null) -> System.Func<Microsoft.Extensions.Hosting.IHostBuilder, Rocket.Surgery.Hosting.IRocketHostBuilder>
static Rocket.Surgery.Hosting.RocketBooster.For(System.Collections.Generic.IEnumerable<System.Reflection.Assembly> assemblies, System.Diagnostics.DiagnosticSource diagnosticSource = null) -> System.Func<Microsoft.Extensions.Hosting.IHostBuilder, Rocket.Surgery.Hosting.IRocketHostBuilder>
static Rocket.Surgery.Hosting.RocketBooster.ForAppDomain(System.AppDomain appDomain, System.Diagnostics.DiagnosticSource diagnosticSource = null) -> System.Func<Microsoft.Extensions.Hosting.IHostBuilder, Rocket.Surgery.Hosting.IRocketHostBuilder>
static Rocket.Surgery.Hosting.RocketBooster.ForAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly> assemblies, System.Diagnostics.DiagnosticSource diagnosticSource = null) -> System.Func<Microsoft.Extensions.Hosting.IHostBuilder, Rocket.Surgery.Hosting.IRocketHostBuilder>
static Rocket.Surgery.Hosting.RocketBooster.ForDependencyContext(Microsoft.Extensions.DependencyModel.DependencyContext dependencyContext, System.Diagnostics.DiagnosticSource diagnosticSource = null) -> System.Func<Microsoft.Extensions.Hosting.IHostBuilder, Rocket.Surgery.Hosting.IRocketHostBuilder>
static Rocket.Surgery.Hosting.RocketHostExtensions.ConfigureRocketSurgery(this Microsoft.Extensions.Hosting.IHostBuilder builder, System.Action<Rocket.Surgery.Hosting.IRocketHostBuilder> action) -> Microsoft.Extensions.Hosting.IHostBuilder
static Rocket.Surgery.Hosting.RocketHostExtensions.LaunchWith(this Microsoft.Extensions.Hosting.IHostBuilder builder, System.Func<Microsoft.Extensions.Hosting.IHostBuilder, Rocket.Surgery.Hosting.IRocketHostBuilder> func, System.Action<Rocket.Surgery.Hosting.IRocketHostBuilder> action = null) -> Microsoft.Extensions.Hosting.IHostBuilder
static Rocket.Surgery.Hosting.RocketHostExtensions.RunCli(this Microsoft.Extensions.Hosting.IHostBuilder builder) -> System.Threading.Tasks.Task<int>
static Rocket.Surgery.Hosting.RocketHostExtensions.UseAppDomain(this Rocket.Surgery.Hosting.IRocketHostBuilder builder, System.AppDomain appDomain, System.Diagnostics.DiagnosticSource diagnosticSource = null) -> Rocket.Surgery.Hosting.IRocketHostBuilder
static Rocket.Surgery.Hosting.RocketHostExtensions.UseAssemblies(this Rocket.Surgery.Hosting.IRocketHostBuilder builder, System.Collections.Generic.IEnumerable<System.Reflection.Assembly> assemblies, System.Diagnostics.DiagnosticSource diagnosticSource = null) -> Rocket.Surgery.Hosting.IRocketHostBuilder
static Rocket.Surgery.Hosting.RocketHostExtensions.UseAssemblyCandidateFinder(this Rocket.Surgery.Hosting.IRocketHostBuilder builder, Rocket.Surgery.Conventions.Reflection.IAssemblyCandidateFinder assemblyCandidateFinder) -> Rocket.Surgery.Hosting.IRocketHostBuilder
static Rocket.Surgery.Hosting.RocketHostExtensions.UseAssemblyProvider(this Rocket.Surgery.Hosting.IRocketHostBuilder builder, Rocket.Surgery.Conventions.Reflection.IAssemblyProvider assemblyProvider) -> Rocket.Surgery.Hosting.IRocketHostBuilder
static Rocket.Surgery.Hosting.RocketHostExtensions.UseCommandLine(this Rocket.Surgery.Hosting.IRocketHostBuilder builder) -> Rocket.Surgery.Hosting.IRocketHostBuilder
static Rocket.Surgery.Hosting.RocketHostExtensions.UseCommandLine(this Rocket.Surgery.Hosting.IRocketHostBuilder builder, System.Action<Microsoft.Extensions.Hosting.ConsoleLifetimeOptions> configureOptions) -> Rocket.Surgery.Hosting.IRocketHostBuilder
static Rocket.Surgery.Hosting.RocketHostExtensions.UseDependencyContext(this Rocket.Surgery.Hosting.IRocketHostBuilder builder, Microsoft.Extensions.DependencyModel.DependencyContext dependencyContext, System.Diagnostics.DiagnosticSource diagnosticSource = null) -> Rocket.Surgery.Hosting.IRocketHostBuilder
static Rocket.Surgery.Hosting.RocketHostExtensions.UseDiagnosticLogging(this Rocket.Surgery.Hosting.IRocketHostBuilder builder, System.Action<Microsoft.Extensions.Logging.ILoggingBuilder> action) -> Rocket.Surgery.Hosting.IRocketHostBuilder
static Rocket.Surgery.Hosting.RocketHostExtensions.UseDiagnosticSource(this Rocket.Surgery.Hosting.IRocketHostBuilder builder, System.Diagnostics.DiagnosticSource diagnosticSource) -> Rocket.Surgery.Hosting.IRocketHostBuilder
static Rocket.Surgery.Hosting.RocketHostExtensions.UseRocketBooster(this Microsoft.Extensions.Hosting.IHostBuilder builder, System.Func<Microsoft.Extensions.Hosting.IHostBuilder, Rocket.Surgery.Hosting.IRocketHostBuilder> func, System.Action<Rocket.Surgery.Hosting.IRocketHostBuilder> action = null) -> Microsoft.Extensions.Hosting.IHostBuilder
static Rocket.Surgery.Hosting.RocketHostExtensions.UseScanner(this Rocket.Surgery.Hosting.IRocketHostBuilder builder, Rocket.Surgery.Conventions.Scanners.IConventionScanner scanner) -> Rocket.Surgery.Hosting.IRocketHostBuilder