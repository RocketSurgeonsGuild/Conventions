<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFrameworks>netcoreapp3.1;net5.0;net6.0</TargetFrameworks>
        <PackageDescription
        >Adds helpers to easily bootstrap an application using conventions by just using the correct extension method. This adds command line operations, additional configuration, logging and service injections by convention.</PackageDescription>
        <PackageTags>$(PackageTags);hosting;generic host</PackageTags>
        <RootNamespace>Rocket.Surgery.Hosting</RootNamespace>
    </PropertyGroup>
    <ItemGroup>
         <ProjectReference
            Include="..\Conventions.Analyzers\Rocket.Surgery.Conventions.Analyzers.csproj"
            IncludeAssets="all"
            OutputItemType="Analyzer"
            ReferenceOutputAssembly="false"
        />
        <ProjectReference Include="..\Conventions.DependencyModel\Rocket.Surgery.Conventions.DependencyModel.csproj" />
        <ProjectReference Include="..\Conventions\Rocket.Surgery.Conventions.csproj" />
    </ItemGroup>
    <ItemGroup Condition="'$(TargetFramework)'=='net6.0'">
        <FrameworkReference Include="Microsoft.AspNetCore.App" />
<!--        <ProjectReference Include="..\Hosting.Abstractions\Rocket.Surgery.Hosting.Abstractions.csproj" />-->
        <ProjectReference Include="..\Hosting\Rocket.Surgery.Hosting.csproj" />
    </ItemGroup>
    <ItemGroup Condition="'$(TargetFramework)'!='net6.0'">
        <FrameworkReference Include="Microsoft.AspNetCore.App" />
        <ProjectReference Include="..\Hosting\Rocket.Surgery.Hosting.csproj" />
    </ItemGroup>
    <ItemGroup>
        <PackageReference Include="Microsoft.Extensions.Hosting" />
        <PackageReference Include="Microsoft.Extensions.Configuration.CommandLine" />
        <PackageReference Include="Microsoft.Extensions.Configuration.EnvironmentVariables" />
        <PackageReference Include="Microsoft.Extensions.Configuration.UserSecrets" />
        <PackageReference Include="Rocket.Surgery.Extensions.Configuration" />
    </ItemGroup>
</Project>
