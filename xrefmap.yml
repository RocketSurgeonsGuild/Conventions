### YamlMime:XRefMap
sorted: true
references:
- uid: Rocket.Surgery.Aspire.Hosting
  name: Rocket.Surgery.Aspire.Hosting
  href: api/Rocket.Surgery.Aspire.Hosting.html
  commentId: N:Rocket.Surgery.Aspire.Hosting
  fullName: Rocket.Surgery.Aspire.Hosting
  nameWithType: Rocket.Surgery.Aspire.Hosting
- uid: Rocket.Surgery.Aspire.Hosting.DistributedApplicationAsyncConvention
  name: DistributedApplicationAsyncConvention
  href: api/Rocket.Surgery.Aspire.Hosting.DistributedApplicationAsyncConvention.html
  commentId: T:Rocket.Surgery.Aspire.Hosting.DistributedApplicationAsyncConvention
  fullName: Rocket.Surgery.Aspire.Hosting.DistributedApplicationAsyncConvention
  nameWithType: DistributedApplicationAsyncConvention
- uid: Rocket.Surgery.Aspire.Hosting.DistributedApplicationConvention
  name: DistributedApplicationConvention
  href: api/Rocket.Surgery.Aspire.Hosting.DistributedApplicationConvention.html
  commentId: T:Rocket.Surgery.Aspire.Hosting.DistributedApplicationConvention
  fullName: Rocket.Surgery.Aspire.Hosting.DistributedApplicationConvention
  nameWithType: DistributedApplicationConvention
- uid: Rocket.Surgery.Aspire.Hosting.IDistributedApplicationAsyncConvention
  name: IDistributedApplicationAsyncConvention
  href: api/Rocket.Surgery.Aspire.Hosting.IDistributedApplicationAsyncConvention.html
  commentId: T:Rocket.Surgery.Aspire.Hosting.IDistributedApplicationAsyncConvention
  fullName: Rocket.Surgery.Aspire.Hosting.IDistributedApplicationAsyncConvention
  nameWithType: IDistributedApplicationAsyncConvention
- uid: Rocket.Surgery.Aspire.Hosting.IDistributedApplicationAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Aspire.Hosting.IDistributedApplicationBuilder,System.Threading.CancellationToken)
  name: Register(IConventionContext, IDistributedApplicationBuilder, CancellationToken)
  href: api/Rocket.Surgery.Aspire.Hosting.IDistributedApplicationAsyncConvention.html#Rocket_Surgery_Aspire_Hosting_IDistributedApplicationAsyncConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Aspire_Hosting_IDistributedApplicationBuilder_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Aspire.Hosting.IDistributedApplicationAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Aspire.Hosting.IDistributedApplicationBuilder,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Aspire.Hosting.IDistributedApplicationAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Aspire.Hosting.IDistributedApplicationBuilder, System.Threading.CancellationToken)
  nameWithType: IDistributedApplicationAsyncConvention.Register(IConventionContext, IDistributedApplicationBuilder, CancellationToken)
- uid: Rocket.Surgery.Aspire.Hosting.IDistributedApplicationAsyncConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Aspire.Hosting.IDistributedApplicationAsyncConvention.html#Rocket_Surgery_Aspire_Hosting_IDistributedApplicationAsyncConvention_Register_
  commentId: Overload:Rocket.Surgery.Aspire.Hosting.IDistributedApplicationAsyncConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Aspire.Hosting.IDistributedApplicationAsyncConvention.Register
  nameWithType: IDistributedApplicationAsyncConvention.Register
- uid: Rocket.Surgery.Aspire.Hosting.IDistributedApplicationConvention
  name: IDistributedApplicationConvention
  href: api/Rocket.Surgery.Aspire.Hosting.IDistributedApplicationConvention.html
  commentId: T:Rocket.Surgery.Aspire.Hosting.IDistributedApplicationConvention
  fullName: Rocket.Surgery.Aspire.Hosting.IDistributedApplicationConvention
  nameWithType: IDistributedApplicationConvention
- uid: Rocket.Surgery.Aspire.Hosting.IDistributedApplicationConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Aspire.Hosting.IDistributedApplicationBuilder)
  name: Register(IConventionContext, IDistributedApplicationBuilder)
  href: api/Rocket.Surgery.Aspire.Hosting.IDistributedApplicationConvention.html#Rocket_Surgery_Aspire_Hosting_IDistributedApplicationConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Aspire_Hosting_IDistributedApplicationBuilder_
  commentId: M:Rocket.Surgery.Aspire.Hosting.IDistributedApplicationConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Aspire.Hosting.IDistributedApplicationBuilder)
  fullName: Rocket.Surgery.Aspire.Hosting.IDistributedApplicationConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Aspire.Hosting.IDistributedApplicationBuilder)
  nameWithType: IDistributedApplicationConvention.Register(IConventionContext, IDistributedApplicationBuilder)
- uid: Rocket.Surgery.Aspire.Hosting.IDistributedApplicationConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Aspire.Hosting.IDistributedApplicationConvention.html#Rocket_Surgery_Aspire_Hosting_IDistributedApplicationConvention_Register_
  commentId: Overload:Rocket.Surgery.Aspire.Hosting.IDistributedApplicationConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Aspire.Hosting.IDistributedApplicationConvention.Register
  nameWithType: IDistributedApplicationConvention.Register
- uid: Rocket.Surgery.Aspire.Hosting.RocketBooster
  name: RocketBooster
  href: api/Rocket.Surgery.Aspire.Hosting.RocketBooster.html
  commentId: T:Rocket.Surgery.Aspire.Hosting.RocketBooster
  fullName: Rocket.Surgery.Aspire.Hosting.RocketBooster
  nameWithType: RocketBooster
- uid: Rocket.Surgery.Aspire.Hosting.RocketBooster.For(Microsoft.Extensions.DependencyModel.DependencyContext)
  name: For(DependencyContext)
  href: api/Rocket.Surgery.Aspire.Hosting.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_RocketBooster_For_Microsoft_Extensions_DependencyModel_DependencyContext_
  commentId: M:Rocket.Surgery.Aspire.Hosting.RocketBooster.For(Microsoft.Extensions.DependencyModel.DependencyContext)
  fullName: Rocket.Surgery.Aspire.Hosting.RocketBooster.For(Microsoft.Extensions.DependencyModel.DependencyContext)
  nameWithType: RocketBooster.For(DependencyContext)
- uid: Rocket.Surgery.Aspire.Hosting.RocketBooster.For(Rocket.Surgery.Conventions.IConventionFactory)
  name: For(IConventionFactory)
  href: api/Rocket.Surgery.Aspire.Hosting.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_RocketBooster_For_Rocket_Surgery_Conventions_IConventionFactory_
  commentId: M:Rocket.Surgery.Aspire.Hosting.RocketBooster.For(Rocket.Surgery.Conventions.IConventionFactory)
  fullName: Rocket.Surgery.Aspire.Hosting.RocketBooster.For(Rocket.Surgery.Conventions.IConventionFactory)
  nameWithType: RocketBooster.For(IConventionFactory)
- uid: Rocket.Surgery.Aspire.Hosting.RocketBooster.For(System.AppDomain)
  name: For(AppDomain)
  href: api/Rocket.Surgery.Aspire.Hosting.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_RocketBooster_For_System_AppDomain_
  commentId: M:Rocket.Surgery.Aspire.Hosting.RocketBooster.For(System.AppDomain)
  fullName: Rocket.Surgery.Aspire.Hosting.RocketBooster.For(System.AppDomain)
  nameWithType: RocketBooster.For(AppDomain)
- uid: Rocket.Surgery.Aspire.Hosting.RocketBooster.For(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name: For(IEnumerable<Assembly>)
  href: api/Rocket.Surgery.Aspire.Hosting.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_RocketBooster_For_System_Collections_Generic_IEnumerable_System_Reflection_Assembly__
  commentId: M:Rocket.Surgery.Aspire.Hosting.RocketBooster.For(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name.vb: For(IEnumerable(Of Assembly))
  fullName: Rocket.Surgery.Aspire.Hosting.RocketBooster.For(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)
  fullName.vb: Rocket.Surgery.Aspire.Hosting.RocketBooster.For(System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly))
  nameWithType: RocketBooster.For(IEnumerable<Assembly>)
  nameWithType.vb: RocketBooster.For(IEnumerable(Of Assembly))
- uid: Rocket.Surgery.Aspire.Hosting.RocketBooster.For*
  name: For
  href: api/Rocket.Surgery.Aspire.Hosting.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_RocketBooster_For_
  commentId: Overload:Rocket.Surgery.Aspire.Hosting.RocketBooster.For
  isSpec: "True"
  fullName: Rocket.Surgery.Aspire.Hosting.RocketBooster.For
  nameWithType: RocketBooster.For
- uid: Rocket.Surgery.Aspire.Hosting.RocketBooster.ForAppDomain(System.AppDomain)
  name: ForAppDomain(AppDomain)
  href: api/Rocket.Surgery.Aspire.Hosting.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_RocketBooster_ForAppDomain_System_AppDomain_
  commentId: M:Rocket.Surgery.Aspire.Hosting.RocketBooster.ForAppDomain(System.AppDomain)
  fullName: Rocket.Surgery.Aspire.Hosting.RocketBooster.ForAppDomain(System.AppDomain)
  nameWithType: RocketBooster.ForAppDomain(AppDomain)
- uid: Rocket.Surgery.Aspire.Hosting.RocketBooster.ForAppDomain*
  name: ForAppDomain
  href: api/Rocket.Surgery.Aspire.Hosting.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_RocketBooster_ForAppDomain_
  commentId: Overload:Rocket.Surgery.Aspire.Hosting.RocketBooster.ForAppDomain
  isSpec: "True"
  fullName: Rocket.Surgery.Aspire.Hosting.RocketBooster.ForAppDomain
  nameWithType: RocketBooster.ForAppDomain
- uid: Rocket.Surgery.Aspire.Hosting.RocketBooster.ForAssemblies(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name: ForAssemblies(IEnumerable<Assembly>)
  href: api/Rocket.Surgery.Aspire.Hosting.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_RocketBooster_ForAssemblies_System_Collections_Generic_IEnumerable_System_Reflection_Assembly__
  commentId: M:Rocket.Surgery.Aspire.Hosting.RocketBooster.ForAssemblies(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name.vb: ForAssemblies(IEnumerable(Of Assembly))
  fullName: Rocket.Surgery.Aspire.Hosting.RocketBooster.ForAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)
  fullName.vb: Rocket.Surgery.Aspire.Hosting.RocketBooster.ForAssemblies(System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly))
  nameWithType: RocketBooster.ForAssemblies(IEnumerable<Assembly>)
  nameWithType.vb: RocketBooster.ForAssemblies(IEnumerable(Of Assembly))
- uid: Rocket.Surgery.Aspire.Hosting.RocketBooster.ForAssemblies*
  name: ForAssemblies
  href: api/Rocket.Surgery.Aspire.Hosting.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_RocketBooster_ForAssemblies_
  commentId: Overload:Rocket.Surgery.Aspire.Hosting.RocketBooster.ForAssemblies
  isSpec: "True"
  fullName: Rocket.Surgery.Aspire.Hosting.RocketBooster.ForAssemblies
  nameWithType: RocketBooster.ForAssemblies
- uid: Rocket.Surgery.Aspire.Hosting.RocketBooster.ForConventions(Rocket.Surgery.Conventions.IConventionFactory)
  name: ForConventions(IConventionFactory)
  href: api/Rocket.Surgery.Aspire.Hosting.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_RocketBooster_ForConventions_Rocket_Surgery_Conventions_IConventionFactory_
  commentId: M:Rocket.Surgery.Aspire.Hosting.RocketBooster.ForConventions(Rocket.Surgery.Conventions.IConventionFactory)
  fullName: Rocket.Surgery.Aspire.Hosting.RocketBooster.ForConventions(Rocket.Surgery.Conventions.IConventionFactory)
  nameWithType: RocketBooster.ForConventions(IConventionFactory)
- uid: Rocket.Surgery.Aspire.Hosting.RocketBooster.ForConventions*
  name: ForConventions
  href: api/Rocket.Surgery.Aspire.Hosting.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_RocketBooster_ForConventions_
  commentId: Overload:Rocket.Surgery.Aspire.Hosting.RocketBooster.ForConventions
  isSpec: "True"
  fullName: Rocket.Surgery.Aspire.Hosting.RocketBooster.ForConventions
  nameWithType: RocketBooster.ForConventions
- uid: Rocket.Surgery.Aspire.Hosting.RocketBooster.ForDependencyContext(Microsoft.Extensions.DependencyModel.DependencyContext)
  name: ForDependencyContext(DependencyContext)
  href: api/Rocket.Surgery.Aspire.Hosting.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_RocketBooster_ForDependencyContext_Microsoft_Extensions_DependencyModel_DependencyContext_
  commentId: M:Rocket.Surgery.Aspire.Hosting.RocketBooster.ForDependencyContext(Microsoft.Extensions.DependencyModel.DependencyContext)
  fullName: Rocket.Surgery.Aspire.Hosting.RocketBooster.ForDependencyContext(Microsoft.Extensions.DependencyModel.DependencyContext)
  nameWithType: RocketBooster.ForDependencyContext(DependencyContext)
- uid: Rocket.Surgery.Aspire.Hosting.RocketBooster.ForDependencyContext*
  name: ForDependencyContext
  href: api/Rocket.Surgery.Aspire.Hosting.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_RocketBooster_ForDependencyContext_
  commentId: Overload:Rocket.Surgery.Aspire.Hosting.RocketBooster.ForDependencyContext
  isSpec: "True"
  fullName: Rocket.Surgery.Aspire.Hosting.RocketBooster.ForDependencyContext
  nameWithType: RocketBooster.ForDependencyContext
- uid: Rocket.Surgery.Aspire.Hosting.Testing
  name: Rocket.Surgery.Aspire.Hosting.Testing
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.html
  commentId: N:Rocket.Surgery.Aspire.Hosting.Testing
  fullName: Rocket.Surgery.Aspire.Hosting.Testing
  nameWithType: Rocket.Surgery.Aspire.Hosting.Testing
- uid: Rocket.Surgery.Aspire.Hosting.Testing.DistributedApplicationTestingAsyncConvention
  name: DistributedApplicationTestingAsyncConvention
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.DistributedApplicationTestingAsyncConvention.html
  commentId: T:Rocket.Surgery.Aspire.Hosting.Testing.DistributedApplicationTestingAsyncConvention
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.DistributedApplicationTestingAsyncConvention
  nameWithType: DistributedApplicationTestingAsyncConvention
- uid: Rocket.Surgery.Aspire.Hosting.Testing.DistributedApplicationTestingConvention
  name: DistributedApplicationTestingConvention
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.DistributedApplicationTestingConvention.html
  commentId: T:Rocket.Surgery.Aspire.Hosting.Testing.DistributedApplicationTestingConvention
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.DistributedApplicationTestingConvention
  nameWithType: DistributedApplicationTestingConvention
- uid: Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingAsyncConvention
  name: IDistributedApplicationTestingAsyncConvention
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingAsyncConvention.html
  commentId: T:Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingAsyncConvention
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingAsyncConvention
  nameWithType: IDistributedApplicationTestingAsyncConvention
- uid: Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder,System.Threading.CancellationToken)
  name: Register(IConventionContext, IDistributedApplicationTestingBuilder, CancellationToken)
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingAsyncConvention.html#Rocket_Surgery_Aspire_Hosting_Testing_IDistributedApplicationTestingAsyncConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Aspire_Hosting_Testing_IDistributedApplicationTestingBuilder_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder, System.Threading.CancellationToken)
  nameWithType: IDistributedApplicationTestingAsyncConvention.Register(IConventionContext, IDistributedApplicationTestingBuilder, CancellationToken)
- uid: Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingAsyncConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingAsyncConvention.html#Rocket_Surgery_Aspire_Hosting_Testing_IDistributedApplicationTestingAsyncConvention_Register_
  commentId: Overload:Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingAsyncConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingAsyncConvention.Register
  nameWithType: IDistributedApplicationTestingAsyncConvention.Register
- uid: Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingConvention
  name: IDistributedApplicationTestingConvention
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingConvention.html
  commentId: T:Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingConvention
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingConvention
  nameWithType: IDistributedApplicationTestingConvention
- uid: Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder)
  name: Register(IConventionContext, IDistributedApplicationTestingBuilder)
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingConvention.html#Rocket_Surgery_Aspire_Hosting_Testing_IDistributedApplicationTestingConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Aspire_Hosting_Testing_IDistributedApplicationTestingBuilder_
  commentId: M:Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder)
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder)
  nameWithType: IDistributedApplicationTestingConvention.Register(IConventionContext, IDistributedApplicationTestingBuilder)
- uid: Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingConvention.html#Rocket_Surgery_Aspire_Hosting_Testing_IDistributedApplicationTestingConvention_Register_
  commentId: Overload:Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.IDistributedApplicationTestingConvention.Register
  nameWithType: IDistributedApplicationTestingConvention.Register
- uid: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster
  name: RocketBooster
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.html
  commentId: T:Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster
  nameWithType: RocketBooster
- uid: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.For(Microsoft.Extensions.DependencyModel.DependencyContext)
  name: For(DependencyContext)
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_Testing_RocketBooster_For_Microsoft_Extensions_DependencyModel_DependencyContext_
  commentId: M:Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.For(Microsoft.Extensions.DependencyModel.DependencyContext)
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.For(Microsoft.Extensions.DependencyModel.DependencyContext)
  nameWithType: RocketBooster.For(DependencyContext)
- uid: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.For(Rocket.Surgery.Conventions.IConventionFactory)
  name: For(IConventionFactory)
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_Testing_RocketBooster_For_Rocket_Surgery_Conventions_IConventionFactory_
  commentId: M:Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.For(Rocket.Surgery.Conventions.IConventionFactory)
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.For(Rocket.Surgery.Conventions.IConventionFactory)
  nameWithType: RocketBooster.For(IConventionFactory)
- uid: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.For(System.AppDomain)
  name: For(AppDomain)
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_Testing_RocketBooster_For_System_AppDomain_
  commentId: M:Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.For(System.AppDomain)
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.For(System.AppDomain)
  nameWithType: RocketBooster.For(AppDomain)
- uid: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.For(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name: For(IEnumerable<Assembly>)
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_Testing_RocketBooster_For_System_Collections_Generic_IEnumerable_System_Reflection_Assembly__
  commentId: M:Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.For(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name.vb: For(IEnumerable(Of Assembly))
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.For(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)
  fullName.vb: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.For(System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly))
  nameWithType: RocketBooster.For(IEnumerable<Assembly>)
  nameWithType.vb: RocketBooster.For(IEnumerable(Of Assembly))
- uid: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.For*
  name: For
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_Testing_RocketBooster_For_
  commentId: Overload:Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.For
  isSpec: "True"
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.For
  nameWithType: RocketBooster.For
- uid: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForAppDomain(System.AppDomain)
  name: ForAppDomain(AppDomain)
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_Testing_RocketBooster_ForAppDomain_System_AppDomain_
  commentId: M:Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForAppDomain(System.AppDomain)
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForAppDomain(System.AppDomain)
  nameWithType: RocketBooster.ForAppDomain(AppDomain)
- uid: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForAppDomain*
  name: ForAppDomain
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_Testing_RocketBooster_ForAppDomain_
  commentId: Overload:Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForAppDomain
  isSpec: "True"
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForAppDomain
  nameWithType: RocketBooster.ForAppDomain
- uid: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForAssemblies(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name: ForAssemblies(IEnumerable<Assembly>)
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_Testing_RocketBooster_ForAssemblies_System_Collections_Generic_IEnumerable_System_Reflection_Assembly__
  commentId: M:Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForAssemblies(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name.vb: ForAssemblies(IEnumerable(Of Assembly))
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)
  fullName.vb: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForAssemblies(System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly))
  nameWithType: RocketBooster.ForAssemblies(IEnumerable<Assembly>)
  nameWithType.vb: RocketBooster.ForAssemblies(IEnumerable(Of Assembly))
- uid: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForAssemblies*
  name: ForAssemblies
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_Testing_RocketBooster_ForAssemblies_
  commentId: Overload:Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForAssemblies
  isSpec: "True"
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForAssemblies
  nameWithType: RocketBooster.ForAssemblies
- uid: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForConventions(Rocket.Surgery.Conventions.IConventionFactory)
  name: ForConventions(IConventionFactory)
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_Testing_RocketBooster_ForConventions_Rocket_Surgery_Conventions_IConventionFactory_
  commentId: M:Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForConventions(Rocket.Surgery.Conventions.IConventionFactory)
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForConventions(Rocket.Surgery.Conventions.IConventionFactory)
  nameWithType: RocketBooster.ForConventions(IConventionFactory)
- uid: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForConventions*
  name: ForConventions
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_Testing_RocketBooster_ForConventions_
  commentId: Overload:Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForConventions
  isSpec: "True"
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForConventions
  nameWithType: RocketBooster.ForConventions
- uid: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForDependencyContext(Microsoft.Extensions.DependencyModel.DependencyContext)
  name: ForDependencyContext(DependencyContext)
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_Testing_RocketBooster_ForDependencyContext_Microsoft_Extensions_DependencyModel_DependencyContext_
  commentId: M:Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForDependencyContext(Microsoft.Extensions.DependencyModel.DependencyContext)
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForDependencyContext(Microsoft.Extensions.DependencyModel.DependencyContext)
  nameWithType: RocketBooster.ForDependencyContext(DependencyContext)
- uid: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForDependencyContext*
  name: ForDependencyContext
  href: api/Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.html#Rocket_Surgery_Aspire_Hosting_Testing_RocketBooster_ForDependencyContext_
  commentId: Overload:Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForDependencyContext
  isSpec: "True"
  fullName: Rocket.Surgery.Aspire.Hosting.Testing.RocketBooster.ForDependencyContext
  nameWithType: RocketBooster.ForDependencyContext
- uid: Rocket.Surgery.CommandLine
  name: Rocket.Surgery.CommandLine
  href: api/Rocket.Surgery.CommandLine.html
  commentId: N:Rocket.Surgery.CommandLine
  fullName: Rocket.Surgery.CommandLine
  nameWithType: Rocket.Surgery.CommandLine
- uid: Rocket.Surgery.CommandLine.AppSettings
  name: AppSettings
  href: api/Rocket.Surgery.CommandLine.AppSettings.html
  commentId: T:Rocket.Surgery.CommandLine.AppSettings
  fullName: Rocket.Surgery.CommandLine.AppSettings
  nameWithType: AppSettings
- uid: Rocket.Surgery.CommandLine.AppSettings.LogLevel
  name: LogLevel
  href: api/Rocket.Surgery.CommandLine.AppSettings.html#Rocket_Surgery_CommandLine_AppSettings_LogLevel
  commentId: P:Rocket.Surgery.CommandLine.AppSettings.LogLevel
  fullName: Rocket.Surgery.CommandLine.AppSettings.LogLevel
  nameWithType: AppSettings.LogLevel
- uid: Rocket.Surgery.CommandLine.AppSettings.LogLevel*
  name: LogLevel
  href: api/Rocket.Surgery.CommandLine.AppSettings.html#Rocket_Surgery_CommandLine_AppSettings_LogLevel_
  commentId: Overload:Rocket.Surgery.CommandLine.AppSettings.LogLevel
  isSpec: "True"
  fullName: Rocket.Surgery.CommandLine.AppSettings.LogLevel
  nameWithType: AppSettings.LogLevel
- uid: Rocket.Surgery.CommandLine.AppSettings.Trace
  name: Trace
  href: api/Rocket.Surgery.CommandLine.AppSettings.html#Rocket_Surgery_CommandLine_AppSettings_Trace
  commentId: P:Rocket.Surgery.CommandLine.AppSettings.Trace
  fullName: Rocket.Surgery.CommandLine.AppSettings.Trace
  nameWithType: AppSettings.Trace
- uid: Rocket.Surgery.CommandLine.AppSettings.Trace*
  name: Trace
  href: api/Rocket.Surgery.CommandLine.AppSettings.html#Rocket_Surgery_CommandLine_AppSettings_Trace_
  commentId: Overload:Rocket.Surgery.CommandLine.AppSettings.Trace
  isSpec: "True"
  fullName: Rocket.Surgery.CommandLine.AppSettings.Trace
  nameWithType: AppSettings.Trace
- uid: Rocket.Surgery.CommandLine.AppSettings.Verbose
  name: Verbose
  href: api/Rocket.Surgery.CommandLine.AppSettings.html#Rocket_Surgery_CommandLine_AppSettings_Verbose
  commentId: P:Rocket.Surgery.CommandLine.AppSettings.Verbose
  fullName: Rocket.Surgery.CommandLine.AppSettings.Verbose
  nameWithType: AppSettings.Verbose
- uid: Rocket.Surgery.CommandLine.AppSettings.Verbose*
  name: Verbose
  href: api/Rocket.Surgery.CommandLine.AppSettings.html#Rocket_Surgery_CommandLine_AppSettings_Verbose_
  commentId: Overload:Rocket.Surgery.CommandLine.AppSettings.Verbose
  isSpec: "True"
  fullName: Rocket.Surgery.CommandLine.AppSettings.Verbose
  nameWithType: AppSettings.Verbose
- uid: Rocket.Surgery.CommandLine.CommandAppAsyncConvention
  name: CommandAppAsyncConvention
  href: api/Rocket.Surgery.CommandLine.CommandAppAsyncConvention.html
  commentId: T:Rocket.Surgery.CommandLine.CommandAppAsyncConvention
  fullName: Rocket.Surgery.CommandLine.CommandAppAsyncConvention
  nameWithType: CommandAppAsyncConvention
- uid: Rocket.Surgery.CommandLine.CommandAppConvention
  name: CommandAppConvention
  href: api/Rocket.Surgery.CommandLine.CommandAppConvention.html
  commentId: T:Rocket.Surgery.CommandLine.CommandAppConvention
  fullName: Rocket.Surgery.CommandLine.CommandAppConvention
  nameWithType: CommandAppConvention
- uid: Rocket.Surgery.CommandLine.CommandLineAsyncConvention
  name: CommandLineAsyncConvention
  href: api/Rocket.Surgery.CommandLine.CommandLineAsyncConvention.html
  commentId: T:Rocket.Surgery.CommandLine.CommandLineAsyncConvention
  fullName: Rocket.Surgery.CommandLine.CommandLineAsyncConvention
  nameWithType: CommandLineAsyncConvention
- uid: Rocket.Surgery.CommandLine.CommandLineConstants
  name: CommandLineConstants
  href: api/Rocket.Surgery.CommandLine.CommandLineConstants.html
  commentId: T:Rocket.Surgery.CommandLine.CommandLineConstants
  fullName: Rocket.Surgery.CommandLine.CommandLineConstants
  nameWithType: CommandLineConstants
- uid: Rocket.Surgery.CommandLine.CommandLineConstants.WaitCode
  name: WaitCode
  href: api/Rocket.Surgery.CommandLine.CommandLineConstants.html#Rocket_Surgery_CommandLine_CommandLineConstants_WaitCode
  commentId: F:Rocket.Surgery.CommandLine.CommandLineConstants.WaitCode
  fullName: Rocket.Surgery.CommandLine.CommandLineConstants.WaitCode
  nameWithType: CommandLineConstants.WaitCode
- uid: Rocket.Surgery.CommandLine.CommandLineConvention
  name: CommandLineConvention
  href: api/Rocket.Surgery.CommandLine.CommandLineConvention.html
  commentId: T:Rocket.Surgery.CommandLine.CommandLineConvention
  fullName: Rocket.Surgery.CommandLine.CommandLineConvention
  nameWithType: CommandLineConvention
- uid: Rocket.Surgery.CommandLine.ConsoleConvention
  name: ConsoleConvention
  href: api/Rocket.Surgery.CommandLine.ConsoleConvention.html
  commentId: T:Rocket.Surgery.CommandLine.ConsoleConvention
  fullName: Rocket.Surgery.CommandLine.ConsoleConvention
  nameWithType: ConsoleConvention
- uid: Rocket.Surgery.CommandLine.ConsoleConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Hosting.IHostApplicationBuilder,System.Threading.CancellationToken)
  name: Register(IConventionContext, IHostApplicationBuilder, CancellationToken)
  href: api/Rocket.Surgery.CommandLine.ConsoleConvention.html#Rocket_Surgery_CommandLine_ConsoleConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_Hosting_IHostApplicationBuilder_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.CommandLine.ConsoleConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Hosting.IHostApplicationBuilder,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.CommandLine.ConsoleConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.Hosting.IHostApplicationBuilder, System.Threading.CancellationToken)
  nameWithType: ConsoleConvention.Register(IConventionContext, IHostApplicationBuilder, CancellationToken)
- uid: Rocket.Surgery.CommandLine.ConsoleConvention.Register*
  name: Register
  href: api/Rocket.Surgery.CommandLine.ConsoleConvention.html#Rocket_Surgery_CommandLine_ConsoleConvention_Register_
  commentId: Overload:Rocket.Surgery.CommandLine.ConsoleConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.CommandLine.ConsoleConvention.Register
  nameWithType: ConsoleConvention.Register
- uid: Rocket.Surgery.CommandLine.Exports
  name: Exports
  href: api/Rocket.Surgery.CommandLine.Exports.html
  commentId: T:Rocket.Surgery.CommandLine.Exports
  fullName: Rocket.Surgery.CommandLine.Exports
  nameWithType: Exports
- uid: Rocket.Surgery.CommandLine.Exports.GetConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  name: GetConventions(ConventionContextBuilder)
  href: api/Rocket.Surgery.CommandLine.Exports.html#Rocket_Surgery_CommandLine_Exports_GetConventions_Rocket_Surgery_Conventions_ConventionContextBuilder_
  commentId: M:Rocket.Surgery.CommandLine.Exports.GetConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  fullName: Rocket.Surgery.CommandLine.Exports.GetConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  nameWithType: Exports.GetConventions(ConventionContextBuilder)
- uid: Rocket.Surgery.CommandLine.Exports.GetConventions*
  name: GetConventions
  href: api/Rocket.Surgery.CommandLine.Exports.html#Rocket_Surgery_CommandLine_Exports_GetConventions_
  commentId: Overload:Rocket.Surgery.CommandLine.Exports.GetConventions
  isSpec: "True"
  fullName: Rocket.Surgery.CommandLine.Exports.GetConventions
  nameWithType: Exports.GetConventions
- uid: Rocket.Surgery.CommandLine.ICommandAppAsyncConvention
  name: ICommandAppAsyncConvention
  href: api/Rocket.Surgery.CommandLine.ICommandAppAsyncConvention.html
  commentId: T:Rocket.Surgery.CommandLine.ICommandAppAsyncConvention
  fullName: Rocket.Surgery.CommandLine.ICommandAppAsyncConvention
  nameWithType: ICommandAppAsyncConvention
- uid: Rocket.Surgery.CommandLine.ICommandAppAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Spectre.Console.Cli.CommandApp,System.Threading.CancellationToken)
  name: Register(IConventionContext, CommandApp, CancellationToken)
  href: api/Rocket.Surgery.CommandLine.ICommandAppAsyncConvention.html#Rocket_Surgery_CommandLine_ICommandAppAsyncConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Spectre_Console_Cli_CommandApp_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.CommandLine.ICommandAppAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Spectre.Console.Cli.CommandApp,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.CommandLine.ICommandAppAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Spectre.Console.Cli.CommandApp, System.Threading.CancellationToken)
  nameWithType: ICommandAppAsyncConvention.Register(IConventionContext, CommandApp, CancellationToken)
- uid: Rocket.Surgery.CommandLine.ICommandAppAsyncConvention.Register*
  name: Register
  href: api/Rocket.Surgery.CommandLine.ICommandAppAsyncConvention.html#Rocket_Surgery_CommandLine_ICommandAppAsyncConvention_Register_
  commentId: Overload:Rocket.Surgery.CommandLine.ICommandAppAsyncConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.CommandLine.ICommandAppAsyncConvention.Register
  nameWithType: ICommandAppAsyncConvention.Register
- uid: Rocket.Surgery.CommandLine.ICommandAppConvention
  name: ICommandAppConvention
  href: api/Rocket.Surgery.CommandLine.ICommandAppConvention.html
  commentId: T:Rocket.Surgery.CommandLine.ICommandAppConvention
  fullName: Rocket.Surgery.CommandLine.ICommandAppConvention
  nameWithType: ICommandAppConvention
- uid: Rocket.Surgery.CommandLine.ICommandAppConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Spectre.Console.Cli.CommandApp)
  name: Register(IConventionContext, CommandApp)
  href: api/Rocket.Surgery.CommandLine.ICommandAppConvention.html#Rocket_Surgery_CommandLine_ICommandAppConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Spectre_Console_Cli_CommandApp_
  commentId: M:Rocket.Surgery.CommandLine.ICommandAppConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Spectre.Console.Cli.CommandApp)
  fullName: Rocket.Surgery.CommandLine.ICommandAppConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Spectre.Console.Cli.CommandApp)
  nameWithType: ICommandAppConvention.Register(IConventionContext, CommandApp)
- uid: Rocket.Surgery.CommandLine.ICommandAppConvention.Register*
  name: Register
  href: api/Rocket.Surgery.CommandLine.ICommandAppConvention.html#Rocket_Surgery_CommandLine_ICommandAppConvention_Register_
  commentId: Overload:Rocket.Surgery.CommandLine.ICommandAppConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.CommandLine.ICommandAppConvention.Register
  nameWithType: ICommandAppConvention.Register
- uid: Rocket.Surgery.CommandLine.ICommandLineAsyncConvention
  name: ICommandLineAsyncConvention
  href: api/Rocket.Surgery.CommandLine.ICommandLineAsyncConvention.html
  commentId: T:Rocket.Surgery.CommandLine.ICommandLineAsyncConvention
  fullName: Rocket.Surgery.CommandLine.ICommandLineAsyncConvention
  nameWithType: ICommandLineAsyncConvention
- uid: Rocket.Surgery.CommandLine.ICommandLineAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Spectre.Console.Cli.IConfigurator,System.Threading.CancellationToken)
  name: Register(IConventionContext, IConfigurator, CancellationToken)
  href: api/Rocket.Surgery.CommandLine.ICommandLineAsyncConvention.html#Rocket_Surgery_CommandLine_ICommandLineAsyncConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Spectre_Console_Cli_IConfigurator_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.CommandLine.ICommandLineAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Spectre.Console.Cli.IConfigurator,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.CommandLine.ICommandLineAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Spectre.Console.Cli.IConfigurator, System.Threading.CancellationToken)
  nameWithType: ICommandLineAsyncConvention.Register(IConventionContext, IConfigurator, CancellationToken)
- uid: Rocket.Surgery.CommandLine.ICommandLineAsyncConvention.Register*
  name: Register
  href: api/Rocket.Surgery.CommandLine.ICommandLineAsyncConvention.html#Rocket_Surgery_CommandLine_ICommandLineAsyncConvention_Register_
  commentId: Overload:Rocket.Surgery.CommandLine.ICommandLineAsyncConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.CommandLine.ICommandLineAsyncConvention.Register
  nameWithType: ICommandLineAsyncConvention.Register
- uid: Rocket.Surgery.CommandLine.ICommandLineConvention
  name: ICommandLineConvention
  href: api/Rocket.Surgery.CommandLine.ICommandLineConvention.html
  commentId: T:Rocket.Surgery.CommandLine.ICommandLineConvention
  fullName: Rocket.Surgery.CommandLine.ICommandLineConvention
  nameWithType: ICommandLineConvention
- uid: Rocket.Surgery.CommandLine.ICommandLineConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Spectre.Console.Cli.IConfigurator)
  name: Register(IConventionContext, IConfigurator)
  href: api/Rocket.Surgery.CommandLine.ICommandLineConvention.html#Rocket_Surgery_CommandLine_ICommandLineConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Spectre_Console_Cli_IConfigurator_
  commentId: M:Rocket.Surgery.CommandLine.ICommandLineConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Spectre.Console.Cli.IConfigurator)
  fullName: Rocket.Surgery.CommandLine.ICommandLineConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Spectre.Console.Cli.IConfigurator)
  nameWithType: ICommandLineConvention.Register(IConventionContext, IConfigurator)
- uid: Rocket.Surgery.CommandLine.ICommandLineConvention.Register*
  name: Register
  href: api/Rocket.Surgery.CommandLine.ICommandLineConvention.html#Rocket_Surgery_CommandLine_ICommandLineConvention_Register_
  commentId: Overload:Rocket.Surgery.CommandLine.ICommandLineConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.CommandLine.ICommandLineConvention.Register
  nameWithType: ICommandLineConvention.Register
- uid: Rocket.Surgery.Conventions
  name: Rocket.Surgery.Conventions
  href: api/Rocket.Surgery.Conventions.html
  commentId: N:Rocket.Surgery.Conventions
  fullName: Rocket.Surgery.Conventions
  nameWithType: Rocket.Surgery.Conventions
- uid: Rocket.Surgery.Conventions.AfterConventionAttribute
  name: AfterConventionAttribute
  href: api/Rocket.Surgery.Conventions.AfterConventionAttribute.html
  commentId: T:Rocket.Surgery.Conventions.AfterConventionAttribute
  fullName: Rocket.Surgery.Conventions.AfterConventionAttribute
  nameWithType: AfterConventionAttribute
- uid: Rocket.Surgery.Conventions.AfterConventionAttribute.#ctor(System.Type)
  name: AfterConventionAttribute(Type)
  href: api/Rocket.Surgery.Conventions.AfterConventionAttribute.html#Rocket_Surgery_Conventions_AfterConventionAttribute__ctor_System_Type_
  commentId: M:Rocket.Surgery.Conventions.AfterConventionAttribute.#ctor(System.Type)
  name.vb: New(Type)
  fullName: Rocket.Surgery.Conventions.AfterConventionAttribute.AfterConventionAttribute(System.Type)
  fullName.vb: Rocket.Surgery.Conventions.AfterConventionAttribute.New(System.Type)
  nameWithType: AfterConventionAttribute.AfterConventionAttribute(Type)
  nameWithType.vb: AfterConventionAttribute.New(Type)
- uid: Rocket.Surgery.Conventions.AfterConventionAttribute.#ctor*
  name: AfterConventionAttribute
  href: api/Rocket.Surgery.Conventions.AfterConventionAttribute.html#Rocket_Surgery_Conventions_AfterConventionAttribute__ctor_
  commentId: Overload:Rocket.Surgery.Conventions.AfterConventionAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Rocket.Surgery.Conventions.AfterConventionAttribute.AfterConventionAttribute
  fullName.vb: Rocket.Surgery.Conventions.AfterConventionAttribute.New
  nameWithType: AfterConventionAttribute.AfterConventionAttribute
  nameWithType.vb: AfterConventionAttribute.New
- uid: Rocket.Surgery.Conventions.AfterConventionAttribute`1
  name: AfterConventionAttribute<T>
  href: api/Rocket.Surgery.Conventions.AfterConventionAttribute-1.html
  commentId: T:Rocket.Surgery.Conventions.AfterConventionAttribute`1
  name.vb: AfterConventionAttribute(Of T)
  fullName: Rocket.Surgery.Conventions.AfterConventionAttribute<T>
  fullName.vb: Rocket.Surgery.Conventions.AfterConventionAttribute(Of T)
  nameWithType: AfterConventionAttribute<T>
  nameWithType.vb: AfterConventionAttribute(Of T)
- uid: Rocket.Surgery.Conventions.Autofac
  name: Rocket.Surgery.Conventions.Autofac
  href: api/Rocket.Surgery.Conventions.Autofac.html
  commentId: N:Rocket.Surgery.Conventions.Autofac
  fullName: Rocket.Surgery.Conventions.Autofac
  nameWithType: Rocket.Surgery.Conventions.Autofac
- uid: Rocket.Surgery.Conventions.Autofac.AutofacAsyncConvention
  name: AutofacAsyncConvention
  href: api/Rocket.Surgery.Conventions.Autofac.AutofacAsyncConvention.html
  commentId: T:Rocket.Surgery.Conventions.Autofac.AutofacAsyncConvention
  fullName: Rocket.Surgery.Conventions.Autofac.AutofacAsyncConvention
  nameWithType: AutofacAsyncConvention
- uid: Rocket.Surgery.Conventions.Autofac.AutofacConvention
  name: AutofacConvention
  href: api/Rocket.Surgery.Conventions.Autofac.AutofacConvention.html
  commentId: T:Rocket.Surgery.Conventions.Autofac.AutofacConvention
  fullName: Rocket.Surgery.Conventions.Autofac.AutofacConvention
  nameWithType: AutofacConvention
- uid: Rocket.Surgery.Conventions.Autofac.AutofacExtensions
  name: AutofacExtensions
  href: api/Rocket.Surgery.Conventions.Autofac.AutofacExtensions.html
  commentId: T:Rocket.Surgery.Conventions.Autofac.AutofacExtensions
  fullName: Rocket.Surgery.Conventions.Autofac.AutofacExtensions
  nameWithType: AutofacExtensions
- uid: Rocket.Surgery.Conventions.Autofac.AutofacExtensions.ApplyConventionsAsync(Autofac.ContainerBuilder,Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.CancellationToken)
  name: ApplyConventionsAsync(ContainerBuilder, IConventionContext, IServiceCollection, CancellationToken)
  href: api/Rocket.Surgery.Conventions.Autofac.AutofacExtensions.html#Rocket_Surgery_Conventions_Autofac_AutofacExtensions_ApplyConventionsAsync_Autofac_ContainerBuilder_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.Autofac.AutofacExtensions.ApplyConventionsAsync(Autofac.ContainerBuilder,Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Conventions.Autofac.AutofacExtensions.ApplyConventionsAsync(Autofac.ContainerBuilder, Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Threading.CancellationToken)
  nameWithType: AutofacExtensions.ApplyConventionsAsync(ContainerBuilder, IConventionContext, IServiceCollection, CancellationToken)
- uid: Rocket.Surgery.Conventions.Autofac.AutofacExtensions.ApplyConventionsAsync*
  name: ApplyConventionsAsync
  href: api/Rocket.Surgery.Conventions.Autofac.AutofacExtensions.html#Rocket_Surgery_Conventions_Autofac_AutofacExtensions_ApplyConventionsAsync_
  commentId: Overload:Rocket.Surgery.Conventions.Autofac.AutofacExtensions.ApplyConventionsAsync
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Autofac.AutofacExtensions.ApplyConventionsAsync
  nameWithType: AutofacExtensions.ApplyConventionsAsync
- uid: Rocket.Surgery.Conventions.Autofac.IAutofacAsyncConvention
  name: IAutofacAsyncConvention
  href: api/Rocket.Surgery.Conventions.Autofac.IAutofacAsyncConvention.html
  commentId: T:Rocket.Surgery.Conventions.Autofac.IAutofacAsyncConvention
  fullName: Rocket.Surgery.Conventions.Autofac.IAutofacAsyncConvention
  nameWithType: IAutofacAsyncConvention
- uid: Rocket.Surgery.Conventions.Autofac.IAutofacAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,Autofac.ContainerBuilder,System.Threading.CancellationToken)
  name: Register(IConventionContext, IConfiguration, IServiceCollection, ContainerBuilder, CancellationToken)
  href: api/Rocket.Surgery.Conventions.Autofac.IAutofacAsyncConvention.html#Rocket_Surgery_Conventions_Autofac_IAutofacAsyncConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_IServiceCollection_Autofac_ContainerBuilder_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.Autofac.IAutofacAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,Autofac.ContainerBuilder,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Conventions.Autofac.IAutofacAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection, Autofac.ContainerBuilder, System.Threading.CancellationToken)
  nameWithType: IAutofacAsyncConvention.Register(IConventionContext, IConfiguration, IServiceCollection, ContainerBuilder, CancellationToken)
- uid: Rocket.Surgery.Conventions.Autofac.IAutofacAsyncConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Conventions.Autofac.IAutofacAsyncConvention.html#Rocket_Surgery_Conventions_Autofac_IAutofacAsyncConvention_Register_
  commentId: Overload:Rocket.Surgery.Conventions.Autofac.IAutofacAsyncConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Autofac.IAutofacAsyncConvention.Register
  nameWithType: IAutofacAsyncConvention.Register
- uid: Rocket.Surgery.Conventions.Autofac.IAutofacConvention
  name: IAutofacConvention
  href: api/Rocket.Surgery.Conventions.Autofac.IAutofacConvention.html
  commentId: T:Rocket.Surgery.Conventions.Autofac.IAutofacConvention
  fullName: Rocket.Surgery.Conventions.Autofac.IAutofacConvention
  nameWithType: IAutofacConvention
- uid: Rocket.Surgery.Conventions.Autofac.IAutofacConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,Autofac.ContainerBuilder)
  name: Register(IConventionContext, IConfiguration, IServiceCollection, ContainerBuilder)
  href: api/Rocket.Surgery.Conventions.Autofac.IAutofacConvention.html#Rocket_Surgery_Conventions_Autofac_IAutofacConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_IServiceCollection_Autofac_ContainerBuilder_
  commentId: M:Rocket.Surgery.Conventions.Autofac.IAutofacConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,Autofac.ContainerBuilder)
  fullName: Rocket.Surgery.Conventions.Autofac.IAutofacConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection, Autofac.ContainerBuilder)
  nameWithType: IAutofacConvention.Register(IConventionContext, IConfiguration, IServiceCollection, ContainerBuilder)
- uid: Rocket.Surgery.Conventions.Autofac.IAutofacConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Conventions.Autofac.IAutofacConvention.html#Rocket_Surgery_Conventions_Autofac_IAutofacConvention_Register_
  commentId: Overload:Rocket.Surgery.Conventions.Autofac.IAutofacConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Autofac.IAutofacConvention.Register
  nameWithType: IAutofacConvention.Register
- uid: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions
  name: AutofacConventionRocketHostExtensions
  href: api/Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.html
  commentId: T:Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions
  fullName: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions
  nameWithType: AutofacConventionRocketHostExtensions
- uid: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Autofac.AutofacConvention,System.Int32)
  name: ConfigureAutofac(ConventionContextBuilder, AutofacConvention, int)
  href: api/Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_AutofacConventionRocketHostExtensions_ConfigureAutofac_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Conventions_Autofac_AutofacConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Autofac.AutofacConvention,System.Int32)
  name.vb: ConfigureAutofac(ConventionContextBuilder, AutofacConvention, Integer)
  fullName: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Autofac.AutofacConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Autofac.AutofacConvention, Integer)
  nameWithType: AutofacConventionRocketHostExtensions.ConfigureAutofac(ConventionContextBuilder, AutofacConvention, int)
  nameWithType.vb: AutofacConventionRocketHostExtensions.ConfigureAutofac(ConventionContextBuilder, AutofacConvention, Integer)
- uid: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Autofac.ContainerBuilder},System.Int32)
  name: ConfigureAutofac(ConventionContextBuilder, Action<ContainerBuilder>, int)
  href: api/Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_AutofacConventionRocketHostExtensions_ConfigureAutofac_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_Autofac_ContainerBuilder__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Autofac.ContainerBuilder},System.Int32)
  name.vb: ConfigureAutofac(ConventionContextBuilder, Action(Of ContainerBuilder), Integer)
  fullName: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<Autofac.ContainerBuilder>, int)
  fullName.vb: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of Autofac.ContainerBuilder), Integer)
  nameWithType: AutofacConventionRocketHostExtensions.ConfigureAutofac(ConventionContextBuilder, Action<ContainerBuilder>, int)
  nameWithType.vb: AutofacConventionRocketHostExtensions.ConfigureAutofac(ConventionContextBuilder, Action(Of ContainerBuilder), Integer)
- uid: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,Autofac.ContainerBuilder},System.Int32)
  name: ConfigureAutofac(ConventionContextBuilder, Action<IConfiguration, IServiceCollection, ContainerBuilder>, int)
  href: api/Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_AutofacConventionRocketHostExtensions_ConfigureAutofac_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_IServiceCollection_Autofac_ContainerBuilder__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,Autofac.ContainerBuilder},System.Int32)
  name.vb: ConfigureAutofac(ConventionContextBuilder, Action(Of IConfiguration, IServiceCollection, ContainerBuilder), Integer)
  fullName: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection, Autofac.ContainerBuilder>, int)
  fullName.vb: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection, Autofac.ContainerBuilder), Integer)
  nameWithType: AutofacConventionRocketHostExtensions.ConfigureAutofac(ConventionContextBuilder, Action<IConfiguration, IServiceCollection, ContainerBuilder>, int)
  nameWithType.vb: AutofacConventionRocketHostExtensions.ConfigureAutofac(ConventionContextBuilder, Action(Of IConfiguration, IServiceCollection, ContainerBuilder), Integer)
- uid: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection,Autofac.ContainerBuilder},System.Int32)
  name: ConfigureAutofac(ConventionContextBuilder, Action<IServiceCollection, ContainerBuilder>, int)
  href: api/Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_AutofacConventionRocketHostExtensions_ConfigureAutofac_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_Microsoft_Extensions_DependencyInjection_IServiceCollection_Autofac_ContainerBuilder__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection,Autofac.ContainerBuilder},System.Int32)
  name.vb: ConfigureAutofac(ConventionContextBuilder, Action(Of IServiceCollection, ContainerBuilder), Integer)
  fullName: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection, Autofac.ContainerBuilder>, int)
  fullName.vb: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection, Autofac.ContainerBuilder), Integer)
  nameWithType: AutofacConventionRocketHostExtensions.ConfigureAutofac(ConventionContextBuilder, Action<IServiceCollection, ContainerBuilder>, int)
  nameWithType.vb: AutofacConventionRocketHostExtensions.ConfigureAutofac(ConventionContextBuilder, Action(Of IServiceCollection, ContainerBuilder), Integer)
- uid: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac*
  name: ConfigureAutofac
  href: api/Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_AutofacConventionRocketHostExtensions_ConfigureAutofac_
  commentId: Overload:Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.ConfigureAutofac
  nameWithType: AutofacConventionRocketHostExtensions.ConfigureAutofac
- uid: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.UseAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder,Autofac.ContainerBuilder)
  name: UseAutofac(ConventionContextBuilder, ContainerBuilder?)
  href: api/Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_AutofacConventionRocketHostExtensions_UseAutofac_Rocket_Surgery_Conventions_ConventionContextBuilder_Autofac_ContainerBuilder_
  commentId: M:Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.UseAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder,Autofac.ContainerBuilder)
  name.vb: UseAutofac(ConventionContextBuilder, ContainerBuilder)
  fullName: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.UseAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder, Autofac.ContainerBuilder?)
  fullName.vb: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.UseAutofac(Rocket.Surgery.Conventions.ConventionContextBuilder, Autofac.ContainerBuilder)
  nameWithType: AutofacConventionRocketHostExtensions.UseAutofac(ConventionContextBuilder, ContainerBuilder?)
  nameWithType.vb: AutofacConventionRocketHostExtensions.UseAutofac(ConventionContextBuilder, ContainerBuilder)
- uid: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.UseAutofac*
  name: UseAutofac
  href: api/Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_AutofacConventionRocketHostExtensions_UseAutofac_
  commentId: Overload:Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.UseAutofac
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.AutofacConventionRocketHostExtensions.UseAutofac
  nameWithType: AutofacConventionRocketHostExtensions.UseAutofac
- uid: Rocket.Surgery.Conventions.BeforeConventionAttribute
  name: BeforeConventionAttribute
  href: api/Rocket.Surgery.Conventions.BeforeConventionAttribute.html
  commentId: T:Rocket.Surgery.Conventions.BeforeConventionAttribute
  fullName: Rocket.Surgery.Conventions.BeforeConventionAttribute
  nameWithType: BeforeConventionAttribute
- uid: Rocket.Surgery.Conventions.BeforeConventionAttribute.#ctor(System.Type)
  name: BeforeConventionAttribute(Type)
  href: api/Rocket.Surgery.Conventions.BeforeConventionAttribute.html#Rocket_Surgery_Conventions_BeforeConventionAttribute__ctor_System_Type_
  commentId: M:Rocket.Surgery.Conventions.BeforeConventionAttribute.#ctor(System.Type)
  name.vb: New(Type)
  fullName: Rocket.Surgery.Conventions.BeforeConventionAttribute.BeforeConventionAttribute(System.Type)
  fullName.vb: Rocket.Surgery.Conventions.BeforeConventionAttribute.New(System.Type)
  nameWithType: BeforeConventionAttribute.BeforeConventionAttribute(Type)
  nameWithType.vb: BeforeConventionAttribute.New(Type)
- uid: Rocket.Surgery.Conventions.BeforeConventionAttribute.#ctor*
  name: BeforeConventionAttribute
  href: api/Rocket.Surgery.Conventions.BeforeConventionAttribute.html#Rocket_Surgery_Conventions_BeforeConventionAttribute__ctor_
  commentId: Overload:Rocket.Surgery.Conventions.BeforeConventionAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Rocket.Surgery.Conventions.BeforeConventionAttribute.BeforeConventionAttribute
  fullName.vb: Rocket.Surgery.Conventions.BeforeConventionAttribute.New
  nameWithType: BeforeConventionAttribute.BeforeConventionAttribute
  nameWithType.vb: BeforeConventionAttribute.New
- uid: Rocket.Surgery.Conventions.BeforeConventionAttribute`1
  name: BeforeConventionAttribute<T>
  href: api/Rocket.Surgery.Conventions.BeforeConventionAttribute-1.html
  commentId: T:Rocket.Surgery.Conventions.BeforeConventionAttribute`1
  name.vb: BeforeConventionAttribute(Of T)
  fullName: Rocket.Surgery.Conventions.BeforeConventionAttribute<T>
  fullName.vb: Rocket.Surgery.Conventions.BeforeConventionAttribute(Of T)
  nameWithType: BeforeConventionAttribute<T>
  nameWithType.vb: BeforeConventionAttribute(Of T)
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions
  name: CommandAppHostBuilderExtensions
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html
  commentId: T:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions
  nameWithType: CommandAppHostBuilderExtensions
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.CommandLine.CommandAppAsyncConvention,System.Int32)
  name: ConfigureCommandApp(ConventionContextBuilder, CommandAppAsyncConvention, int)
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_ConfigureCommandApp_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_CommandLine_CommandAppAsyncConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.CommandLine.CommandAppAsyncConvention,System.Int32)
  name.vb: ConfigureCommandApp(ConventionContextBuilder, CommandAppAsyncConvention, Integer)
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.CommandLine.CommandAppAsyncConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.CommandLine.CommandAppAsyncConvention, Integer)
  nameWithType: CommandAppHostBuilderExtensions.ConfigureCommandApp(ConventionContextBuilder, CommandAppAsyncConvention, int)
  nameWithType.vb: CommandAppHostBuilderExtensions.ConfigureCommandApp(ConventionContextBuilder, CommandAppAsyncConvention, Integer)
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.CommandLine.CommandAppConvention,System.Int32)
  name: ConfigureCommandApp(ConventionContextBuilder, CommandAppConvention, int)
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_ConfigureCommandApp_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_CommandLine_CommandAppConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.CommandLine.CommandAppConvention,System.Int32)
  name.vb: ConfigureCommandApp(ConventionContextBuilder, CommandAppConvention, Integer)
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.CommandLine.CommandAppConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.CommandLine.CommandAppConvention, Integer)
  nameWithType: CommandAppHostBuilderExtensions.ConfigureCommandApp(ConventionContextBuilder, CommandAppConvention, int)
  nameWithType.vb: CommandAppHostBuilderExtensions.ConfigureCommandApp(ConventionContextBuilder, CommandAppConvention, Integer)
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Spectre.Console.Cli.CommandApp},System.Int32)
  name: ConfigureCommandApp(ConventionContextBuilder, Action<CommandApp>, int)
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_ConfigureCommandApp_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_Spectre_Console_Cli_CommandApp__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Spectre.Console.Cli.CommandApp},System.Int32)
  name.vb: ConfigureCommandApp(ConventionContextBuilder, Action(Of CommandApp), Integer)
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<Spectre.Console.Cli.CommandApp>, int)
  fullName.vb: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of Spectre.Console.Cli.CommandApp), Integer)
  nameWithType: CommandAppHostBuilderExtensions.ConfigureCommandApp(ConventionContextBuilder, Action<CommandApp>, int)
  nameWithType.vb: CommandAppHostBuilderExtensions.ConfigureCommandApp(ConventionContextBuilder, Action(Of CommandApp), Integer)
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Spectre.Console.Cli.CommandApp,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureCommandApp(ConventionContextBuilder, Func<CommandApp, CancellationToken, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_ConfigureCommandApp_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Spectre_Console_Cli_CommandApp_System_Threading_CancellationToken_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Spectre.Console.Cli.CommandApp,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureCommandApp(ConventionContextBuilder, Func(Of CommandApp, CancellationToken, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Spectre.Console.Cli.CommandApp, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Spectre.Console.Cli.CommandApp, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: CommandAppHostBuilderExtensions.ConfigureCommandApp(ConventionContextBuilder, Func<CommandApp, CancellationToken, ValueTask>, int)
  nameWithType.vb: CommandAppHostBuilderExtensions.ConfigureCommandApp(ConventionContextBuilder, Func(Of CommandApp, CancellationToken, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Spectre.Console.Cli.CommandApp,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureCommandApp(ConventionContextBuilder, Func<CommandApp, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_ConfigureCommandApp_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Spectre_Console_Cli_CommandApp_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Spectre.Console.Cli.CommandApp,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureCommandApp(ConventionContextBuilder, Func(Of CommandApp, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Spectre.Console.Cli.CommandApp, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Spectre.Console.Cli.CommandApp, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: CommandAppHostBuilderExtensions.ConfigureCommandApp(ConventionContextBuilder, Func<CommandApp, ValueTask>, int)
  nameWithType.vb: CommandAppHostBuilderExtensions.ConfigureCommandApp(ConventionContextBuilder, Func(Of CommandApp, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp*
  name: ConfigureCommandApp
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_ConfigureCommandApp_
  commentId: Overload:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandApp
  nameWithType: CommandAppHostBuilderExtensions.ConfigureCommandApp
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.CommandLine.CommandLineAsyncConvention,System.Int32)
  name: ConfigureCommandLine(ConventionContextBuilder, CommandLineAsyncConvention, int)
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_ConfigureCommandLine_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_CommandLine_CommandLineAsyncConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.CommandLine.CommandLineAsyncConvention,System.Int32)
  name.vb: ConfigureCommandLine(ConventionContextBuilder, CommandLineAsyncConvention, Integer)
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.CommandLine.CommandLineAsyncConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.CommandLine.CommandLineAsyncConvention, Integer)
  nameWithType: CommandAppHostBuilderExtensions.ConfigureCommandLine(ConventionContextBuilder, CommandLineAsyncConvention, int)
  nameWithType.vb: CommandAppHostBuilderExtensions.ConfigureCommandLine(ConventionContextBuilder, CommandLineAsyncConvention, Integer)
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.CommandLine.CommandLineConvention,System.Int32)
  name: ConfigureCommandLine(ConventionContextBuilder, CommandLineConvention, int)
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_ConfigureCommandLine_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_CommandLine_CommandLineConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.CommandLine.CommandLineConvention,System.Int32)
  name.vb: ConfigureCommandLine(ConventionContextBuilder, CommandLineConvention, Integer)
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.CommandLine.CommandLineConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.CommandLine.CommandLineConvention, Integer)
  nameWithType: CommandAppHostBuilderExtensions.ConfigureCommandLine(ConventionContextBuilder, CommandLineConvention, int)
  nameWithType.vb: CommandAppHostBuilderExtensions.ConfigureCommandLine(ConventionContextBuilder, CommandLineConvention, Integer)
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Spectre.Console.Cli.IConfigurator},System.Int32)
  name: ConfigureCommandLine(ConventionContextBuilder, Action<IConfigurator>, int)
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_ConfigureCommandLine_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_Spectre_Console_Cli_IConfigurator__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Spectre.Console.Cli.IConfigurator},System.Int32)
  name.vb: ConfigureCommandLine(ConventionContextBuilder, Action(Of IConfigurator), Integer)
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<Spectre.Console.Cli.IConfigurator>, int)
  fullName.vb: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of Spectre.Console.Cli.IConfigurator), Integer)
  nameWithType: CommandAppHostBuilderExtensions.ConfigureCommandLine(ConventionContextBuilder, Action<IConfigurator>, int)
  nameWithType.vb: CommandAppHostBuilderExtensions.ConfigureCommandLine(ConventionContextBuilder, Action(Of IConfigurator), Integer)
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Spectre.Console.Cli.IConfigurator,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureCommandLine(ConventionContextBuilder, Func<IConfigurator, CancellationToken, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_ConfigureCommandLine_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Spectre_Console_Cli_IConfigurator_System_Threading_CancellationToken_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Spectre.Console.Cli.IConfigurator,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureCommandLine(ConventionContextBuilder, Func(Of IConfigurator, CancellationToken, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Spectre.Console.Cli.IConfigurator, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Spectre.Console.Cli.IConfigurator, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: CommandAppHostBuilderExtensions.ConfigureCommandLine(ConventionContextBuilder, Func<IConfigurator, CancellationToken, ValueTask>, int)
  nameWithType.vb: CommandAppHostBuilderExtensions.ConfigureCommandLine(ConventionContextBuilder, Func(Of IConfigurator, CancellationToken, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Spectre.Console.Cli.IConfigurator,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureCommandLine(ConventionContextBuilder, Func<IConfigurator, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_ConfigureCommandLine_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Spectre_Console_Cli_IConfigurator_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Spectre.Console.Cli.IConfigurator,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureCommandLine(ConventionContextBuilder, Func(Of IConfigurator, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Spectre.Console.Cli.IConfigurator, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Spectre.Console.Cli.IConfigurator, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: CommandAppHostBuilderExtensions.ConfigureCommandLine(ConventionContextBuilder, Func<IConfigurator, ValueTask>, int)
  nameWithType.vb: CommandAppHostBuilderExtensions.ConfigureCommandLine(ConventionContextBuilder, Func(Of IConfigurator, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine*
  name: ConfigureCommandLine
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_ConfigureCommandLine_
  commentId: Overload:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.ConfigureCommandLine
  nameWithType: CommandAppHostBuilderExtensions.ConfigureCommandLine
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.RunConsoleAppAsync(Microsoft.Extensions.Hosting.IHost,System.Threading.CancellationToken)
  name: RunConsoleAppAsync(IHost, CancellationToken)
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_RunConsoleAppAsync_Microsoft_Extensions_Hosting_IHost_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.RunConsoleAppAsync(Microsoft.Extensions.Hosting.IHost,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.RunConsoleAppAsync(Microsoft.Extensions.Hosting.IHost, System.Threading.CancellationToken)
  nameWithType: CommandAppHostBuilderExtensions.RunConsoleAppAsync(IHost, CancellationToken)
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.RunConsoleAppAsync(System.Threading.Tasks.Task{Microsoft.Extensions.Hosting.IHost},System.Threading.CancellationToken)
  name: RunConsoleAppAsync(Task<IHost>, CancellationToken)
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_RunConsoleAppAsync_System_Threading_Tasks_Task_Microsoft_Extensions_Hosting_IHost__System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.RunConsoleAppAsync(System.Threading.Tasks.Task{Microsoft.Extensions.Hosting.IHost},System.Threading.CancellationToken)
  name.vb: RunConsoleAppAsync(Task(Of IHost), CancellationToken)
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.RunConsoleAppAsync(System.Threading.Tasks.Task<Microsoft.Extensions.Hosting.IHost>, System.Threading.CancellationToken)
  fullName.vb: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.RunConsoleAppAsync(System.Threading.Tasks.Task(Of Microsoft.Extensions.Hosting.IHost), System.Threading.CancellationToken)
  nameWithType: CommandAppHostBuilderExtensions.RunConsoleAppAsync(Task<IHost>, CancellationToken)
  nameWithType.vb: CommandAppHostBuilderExtensions.RunConsoleAppAsync(Task(Of IHost), CancellationToken)
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.RunConsoleAppAsync(System.Threading.Tasks.ValueTask{Microsoft.Extensions.Hosting.IHost},System.Threading.CancellationToken)
  name: RunConsoleAppAsync(ValueTask<IHost>, CancellationToken)
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_RunConsoleAppAsync_System_Threading_Tasks_ValueTask_Microsoft_Extensions_Hosting_IHost__System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.RunConsoleAppAsync(System.Threading.Tasks.ValueTask{Microsoft.Extensions.Hosting.IHost},System.Threading.CancellationToken)
  name.vb: RunConsoleAppAsync(ValueTask(Of IHost), CancellationToken)
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.RunConsoleAppAsync(System.Threading.Tasks.ValueTask<Microsoft.Extensions.Hosting.IHost>, System.Threading.CancellationToken)
  fullName.vb: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.RunConsoleAppAsync(System.Threading.Tasks.ValueTask(Of Microsoft.Extensions.Hosting.IHost), System.Threading.CancellationToken)
  nameWithType: CommandAppHostBuilderExtensions.RunConsoleAppAsync(ValueTask<IHost>, CancellationToken)
  nameWithType.vb: CommandAppHostBuilderExtensions.RunConsoleAppAsync(ValueTask(Of IHost), CancellationToken)
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.RunConsoleAppAsync*
  name: RunConsoleAppAsync
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_RunConsoleAppAsync_
  commentId: Overload:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.RunConsoleAppAsync
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.RunConsoleAppAsync
  nameWithType: CommandAppHostBuilderExtensions.RunConsoleAppAsync
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.SetDefaultCommand*
  name: SetDefaultCommand
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_SetDefaultCommand_
  commentId: Overload:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.SetDefaultCommand
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.SetDefaultCommand
  nameWithType: CommandAppHostBuilderExtensions.SetDefaultCommand
- uid: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.SetDefaultCommand``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Int32)
  name: SetDefaultCommand<TDefaultCommand>(ConventionContextBuilder, int)
  href: api/Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.html#Rocket_Surgery_Conventions_CommandAppHostBuilderExtensions_SetDefaultCommand__1_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.SetDefaultCommand``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Int32)
  name.vb: SetDefaultCommand(Of TDefaultCommand)(ConventionContextBuilder, Integer)
  fullName: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.SetDefaultCommand<TDefaultCommand>(Rocket.Surgery.Conventions.ConventionContextBuilder, int)
  fullName.vb: Rocket.Surgery.Conventions.CommandAppHostBuilderExtensions.SetDefaultCommand(Of TDefaultCommand)(Rocket.Surgery.Conventions.ConventionContextBuilder, Integer)
  nameWithType: CommandAppHostBuilderExtensions.SetDefaultCommand<TDefaultCommand>(ConventionContextBuilder, int)
  nameWithType.vb: CommandAppHostBuilderExtensions.SetDefaultCommand(Of TDefaultCommand)(ConventionContextBuilder, Integer)
- uid: Rocket.Surgery.Conventions.Configuration
  name: Rocket.Surgery.Conventions.Configuration
  href: api/Rocket.Surgery.Conventions.Configuration.html
  commentId: N:Rocket.Surgery.Conventions.Configuration
  fullName: Rocket.Surgery.Conventions.Configuration
  nameWithType: Rocket.Surgery.Conventions.Configuration
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationAsyncConvention
  name: ConfigurationAsyncConvention
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationAsyncConvention.html
  commentId: T:Rocket.Surgery.Conventions.Configuration.ConfigurationAsyncConvention
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationAsyncConvention
  nameWithType: ConfigurationAsyncConvention
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderApplicationDelegate
  name: ConfigurationBuilderApplicationDelegate
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderApplicationDelegate.html
  commentId: T:Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderApplicationDelegate
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderApplicationDelegate
  nameWithType: ConfigurationBuilderApplicationDelegate
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult
  name: ConfigurationBuilderDelegateResult
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.html
  commentId: T:Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult
  nameWithType: ConfigurationBuilderDelegateResult
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.#ctor(System.String,System.Func{System.IO.Stream,Microsoft.Extensions.Configuration.IConfigurationSource})
  name: ConfigurationBuilderDelegateResult(string, Func<Stream?, IConfigurationSource>)
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.html#Rocket_Surgery_Conventions_Configuration_ConfigurationBuilderDelegateResult__ctor_System_String_System_Func_System_IO_Stream_Microsoft_Extensions_Configuration_IConfigurationSource__
  commentId: M:Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.#ctor(System.String,System.Func{System.IO.Stream,Microsoft.Extensions.Configuration.IConfigurationSource})
  name.vb: New(String, Func(Of Stream, IConfigurationSource))
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.ConfigurationBuilderDelegateResult(string, System.Func<System.IO.Stream?, Microsoft.Extensions.Configuration.IConfigurationSource>)
  fullName.vb: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.New(String, System.Func(Of System.IO.Stream, Microsoft.Extensions.Configuration.IConfigurationSource))
  nameWithType: ConfigurationBuilderDelegateResult.ConfigurationBuilderDelegateResult(string, Func<Stream?, IConfigurationSource>)
  nameWithType.vb: ConfigurationBuilderDelegateResult.New(String, Func(Of Stream, IConfigurationSource))
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.#ctor*
  name: ConfigurationBuilderDelegateResult
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.html#Rocket_Surgery_Conventions_Configuration_ConfigurationBuilderDelegateResult__ctor_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.ConfigurationBuilderDelegateResult
  fullName.vb: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.New
  nameWithType: ConfigurationBuilderDelegateResult.ConfigurationBuilderDelegateResult
  nameWithType.vb: ConfigurationBuilderDelegateResult.New
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.Factory
  name: Factory
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.html#Rocket_Surgery_Conventions_Configuration_ConfigurationBuilderDelegateResult_Factory
  commentId: P:Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.Factory
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.Factory
  nameWithType: ConfigurationBuilderDelegateResult.Factory
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.Factory*
  name: Factory
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.html#Rocket_Surgery_Conventions_Configuration_ConfigurationBuilderDelegateResult_Factory_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.Factory
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.Factory
  nameWithType: ConfigurationBuilderDelegateResult.Factory
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.Path
  name: Path
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.html#Rocket_Surgery_Conventions_Configuration_ConfigurationBuilderDelegateResult_Path
  commentId: P:Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.Path
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.Path
  nameWithType: ConfigurationBuilderDelegateResult.Path
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.Path*
  name: Path
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.html#Rocket_Surgery_Conventions_Configuration_ConfigurationBuilderDelegateResult_Path_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.Path
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderDelegateResult.Path
  nameWithType: ConfigurationBuilderDelegateResult.Path
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderEnvironmentDelegate
  name: ConfigurationBuilderEnvironmentDelegate
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderEnvironmentDelegate.html
  commentId: T:Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderEnvironmentDelegate
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderEnvironmentDelegate
  nameWithType: ConfigurationBuilderEnvironmentDelegate
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationConvention
  name: ConfigurationConvention
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationConvention.html
  commentId: T:Rocket.Surgery.Conventions.Configuration.ConfigurationConvention
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationConvention
  nameWithType: ConfigurationConvention
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions
  name: ConfigurationOptionsExtensions
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.html
  commentId: T:Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions
  nameWithType: ConfigurationOptionsExtensions
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.AppendApplicationConfiguration(Rocket.Surgery.Conventions.IConventionContext,Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderApplicationDelegate)
  name: AppendApplicationConfiguration(IConventionContext, ConfigurationBuilderApplicationDelegate)
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.html#Rocket_Surgery_Conventions_Configuration_ConfigurationOptionsExtensions_AppendApplicationConfiguration_Rocket_Surgery_Conventions_IConventionContext_Rocket_Surgery_Conventions_Configuration_ConfigurationBuilderApplicationDelegate_
  commentId: M:Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.AppendApplicationConfiguration(Rocket.Surgery.Conventions.IConventionContext,Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderApplicationDelegate)
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.AppendApplicationConfiguration(Rocket.Surgery.Conventions.IConventionContext, Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderApplicationDelegate)
  nameWithType: ConfigurationOptionsExtensions.AppendApplicationConfiguration(IConventionContext, ConfigurationBuilderApplicationDelegate)
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.AppendApplicationConfiguration*
  name: AppendApplicationConfiguration
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.html#Rocket_Surgery_Conventions_Configuration_ConfigurationOptionsExtensions_AppendApplicationConfiguration_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.AppendApplicationConfiguration
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.AppendApplicationConfiguration
  nameWithType: ConfigurationOptionsExtensions.AppendApplicationConfiguration
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.AppendEnvironmentConfiguration(Rocket.Surgery.Conventions.IConventionContext,Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderEnvironmentDelegate)
  name: AppendEnvironmentConfiguration(IConventionContext, ConfigurationBuilderEnvironmentDelegate)
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.html#Rocket_Surgery_Conventions_Configuration_ConfigurationOptionsExtensions_AppendEnvironmentConfiguration_Rocket_Surgery_Conventions_IConventionContext_Rocket_Surgery_Conventions_Configuration_ConfigurationBuilderEnvironmentDelegate_
  commentId: M:Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.AppendEnvironmentConfiguration(Rocket.Surgery.Conventions.IConventionContext,Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderEnvironmentDelegate)
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.AppendEnvironmentConfiguration(Rocket.Surgery.Conventions.IConventionContext, Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderEnvironmentDelegate)
  nameWithType: ConfigurationOptionsExtensions.AppendEnvironmentConfiguration(IConventionContext, ConfigurationBuilderEnvironmentDelegate)
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.AppendEnvironmentConfiguration*
  name: AppendEnvironmentConfiguration
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.html#Rocket_Surgery_Conventions_Configuration_ConfigurationOptionsExtensions_AppendEnvironmentConfiguration_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.AppendEnvironmentConfiguration
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.AppendEnvironmentConfiguration
  nameWithType: ConfigurationOptionsExtensions.AppendEnvironmentConfiguration
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.PrependApplicationConfiguration(Rocket.Surgery.Conventions.IConventionContext,Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderApplicationDelegate)
  name: PrependApplicationConfiguration(IConventionContext, ConfigurationBuilderApplicationDelegate)
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.html#Rocket_Surgery_Conventions_Configuration_ConfigurationOptionsExtensions_PrependApplicationConfiguration_Rocket_Surgery_Conventions_IConventionContext_Rocket_Surgery_Conventions_Configuration_ConfigurationBuilderApplicationDelegate_
  commentId: M:Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.PrependApplicationConfiguration(Rocket.Surgery.Conventions.IConventionContext,Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderApplicationDelegate)
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.PrependApplicationConfiguration(Rocket.Surgery.Conventions.IConventionContext, Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderApplicationDelegate)
  nameWithType: ConfigurationOptionsExtensions.PrependApplicationConfiguration(IConventionContext, ConfigurationBuilderApplicationDelegate)
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.PrependApplicationConfiguration*
  name: PrependApplicationConfiguration
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.html#Rocket_Surgery_Conventions_Configuration_ConfigurationOptionsExtensions_PrependApplicationConfiguration_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.PrependApplicationConfiguration
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.PrependApplicationConfiguration
  nameWithType: ConfigurationOptionsExtensions.PrependApplicationConfiguration
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.PrependEnvironmentConfiguration(Rocket.Surgery.Conventions.IConventionContext,Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderEnvironmentDelegate)
  name: PrependEnvironmentConfiguration(IConventionContext, ConfigurationBuilderEnvironmentDelegate)
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.html#Rocket_Surgery_Conventions_Configuration_ConfigurationOptionsExtensions_PrependEnvironmentConfiguration_Rocket_Surgery_Conventions_IConventionContext_Rocket_Surgery_Conventions_Configuration_ConfigurationBuilderEnvironmentDelegate_
  commentId: M:Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.PrependEnvironmentConfiguration(Rocket.Surgery.Conventions.IConventionContext,Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderEnvironmentDelegate)
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.PrependEnvironmentConfiguration(Rocket.Surgery.Conventions.IConventionContext, Rocket.Surgery.Conventions.Configuration.ConfigurationBuilderEnvironmentDelegate)
  nameWithType: ConfigurationOptionsExtensions.PrependEnvironmentConfiguration(IConventionContext, ConfigurationBuilderEnvironmentDelegate)
- uid: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.PrependEnvironmentConfiguration*
  name: PrependEnvironmentConfiguration
  href: api/Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.html#Rocket_Surgery_Conventions_Configuration_ConfigurationOptionsExtensions_PrependEnvironmentConfiguration_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.PrependEnvironmentConfiguration
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Configuration.ConfigurationOptionsExtensions.PrependEnvironmentConfiguration
  nameWithType: ConfigurationOptionsExtensions.PrependEnvironmentConfiguration
- uid: Rocket.Surgery.Conventions.Configuration.IConfigurationAsyncConvention
  name: IConfigurationAsyncConvention
  href: api/Rocket.Surgery.Conventions.Configuration.IConfigurationAsyncConvention.html
  commentId: T:Rocket.Surgery.Conventions.Configuration.IConfigurationAsyncConvention
  fullName: Rocket.Surgery.Conventions.Configuration.IConfigurationAsyncConvention
  nameWithType: IConfigurationAsyncConvention
- uid: Rocket.Surgery.Conventions.Configuration.IConfigurationAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Threading.CancellationToken)
  name: Register(IConventionContext, IConfiguration, IConfigurationBuilder, CancellationToken)
  href: api/Rocket.Surgery.Conventions.Configuration.IConfigurationAsyncConvention.html#Rocket_Surgery_Conventions_Configuration_IConfigurationAsyncConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_Configuration_IConfigurationBuilder_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.Configuration.IConfigurationAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Conventions.Configuration.IConfigurationAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Configuration.IConfigurationBuilder, System.Threading.CancellationToken)
  nameWithType: IConfigurationAsyncConvention.Register(IConventionContext, IConfiguration, IConfigurationBuilder, CancellationToken)
- uid: Rocket.Surgery.Conventions.Configuration.IConfigurationAsyncConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Conventions.Configuration.IConfigurationAsyncConvention.html#Rocket_Surgery_Conventions_Configuration_IConfigurationAsyncConvention_Register_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.IConfigurationAsyncConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Configuration.IConfigurationAsyncConvention.Register
  nameWithType: IConfigurationAsyncConvention.Register
- uid: Rocket.Surgery.Conventions.Configuration.IConfigurationConvention
  name: IConfigurationConvention
  href: api/Rocket.Surgery.Conventions.Configuration.IConfigurationConvention.html
  commentId: T:Rocket.Surgery.Conventions.Configuration.IConfigurationConvention
  fullName: Rocket.Surgery.Conventions.Configuration.IConfigurationConvention
  nameWithType: IConfigurationConvention
- uid: Rocket.Surgery.Conventions.Configuration.IConfigurationConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Configuration.IConfigurationBuilder)
  name: Register(IConventionContext, IConfiguration, IConfigurationBuilder)
  href: api/Rocket.Surgery.Conventions.Configuration.IConfigurationConvention.html#Rocket_Surgery_Conventions_Configuration_IConfigurationConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_Configuration_IConfigurationBuilder_
  commentId: M:Rocket.Surgery.Conventions.Configuration.IConfigurationConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Configuration.IConfigurationBuilder)
  fullName: Rocket.Surgery.Conventions.Configuration.IConfigurationConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Configuration.IConfigurationBuilder)
  nameWithType: IConfigurationConvention.Register(IConventionContext, IConfiguration, IConfigurationBuilder)
- uid: Rocket.Surgery.Conventions.Configuration.IConfigurationConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Conventions.Configuration.IConfigurationConvention.html#Rocket_Surgery_Conventions_Configuration_IConfigurationConvention_Register_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.IConfigurationConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Configuration.IConfigurationConvention.Register
  nameWithType: IConfigurationConvention.Register
- uid: Rocket.Surgery.Conventions.Configuration.Json
  name: Rocket.Surgery.Conventions.Configuration.Json
  href: api/Rocket.Surgery.Conventions.Configuration.Json.html
  commentId: N:Rocket.Surgery.Conventions.Configuration.Json
  fullName: Rocket.Surgery.Conventions.Configuration.Json
  nameWithType: Rocket.Surgery.Conventions.Configuration.Json
- uid: Rocket.Surgery.Conventions.Configuration.Json.Exports
  name: Exports
  href: api/Rocket.Surgery.Conventions.Configuration.Json.Exports.html
  commentId: T:Rocket.Surgery.Conventions.Configuration.Json.Exports
  fullName: Rocket.Surgery.Conventions.Configuration.Json.Exports
  nameWithType: Exports
- uid: Rocket.Surgery.Conventions.Configuration.Json.Exports.GetConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  name: GetConventions(ConventionContextBuilder)
  href: api/Rocket.Surgery.Conventions.Configuration.Json.Exports.html#Rocket_Surgery_Conventions_Configuration_Json_Exports_GetConventions_Rocket_Surgery_Conventions_ConventionContextBuilder_
  commentId: M:Rocket.Surgery.Conventions.Configuration.Json.Exports.GetConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  fullName: Rocket.Surgery.Conventions.Configuration.Json.Exports.GetConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  nameWithType: Exports.GetConventions(ConventionContextBuilder)
- uid: Rocket.Surgery.Conventions.Configuration.Json.Exports.GetConventions*
  name: GetConventions
  href: api/Rocket.Surgery.Conventions.Configuration.Json.Exports.html#Rocket_Surgery_Conventions_Configuration_Json_Exports_GetConventions_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.Json.Exports.GetConventions
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Configuration.Json.Exports.GetConventions
  nameWithType: Exports.GetConventions
- uid: Rocket.Surgery.Conventions.Configuration.Json.JsonConvention
  name: JsonConvention
  href: api/Rocket.Surgery.Conventions.Configuration.Json.JsonConvention.html
  commentId: T:Rocket.Surgery.Conventions.Configuration.Json.JsonConvention
  fullName: Rocket.Surgery.Conventions.Configuration.Json.JsonConvention
  nameWithType: JsonConvention
- uid: Rocket.Surgery.Conventions.Configuration.Json.JsonConvention.Register(Rocket.Surgery.Conventions.IConventionContext)
  name: Register(IConventionContext)
  href: api/Rocket.Surgery.Conventions.Configuration.Json.JsonConvention.html#Rocket_Surgery_Conventions_Configuration_Json_JsonConvention_Register_Rocket_Surgery_Conventions_IConventionContext_
  commentId: M:Rocket.Surgery.Conventions.Configuration.Json.JsonConvention.Register(Rocket.Surgery.Conventions.IConventionContext)
  fullName: Rocket.Surgery.Conventions.Configuration.Json.JsonConvention.Register(Rocket.Surgery.Conventions.IConventionContext)
  nameWithType: JsonConvention.Register(IConventionContext)
- uid: Rocket.Surgery.Conventions.Configuration.Json.JsonConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Conventions.Configuration.Json.JsonConvention.html#Rocket_Surgery_Conventions_Configuration_Json_JsonConvention_Register_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.Json.JsonConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Configuration.Json.JsonConvention.Register
  nameWithType: JsonConvention.Register
- uid: Rocket.Surgery.Conventions.Configuration.Yaml
  name: Rocket.Surgery.Conventions.Configuration.Yaml
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.html
  commentId: N:Rocket.Surgery.Conventions.Configuration.Yaml
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml
  nameWithType: Rocket.Surgery.Conventions.Configuration.Yaml
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.Exports
  name: Exports
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.Exports.html
  commentId: T:Rocket.Surgery.Conventions.Configuration.Yaml.Exports
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.Exports
  nameWithType: Exports
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.Exports.GetConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  name: GetConventions(ConventionContextBuilder)
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.Exports.html#Rocket_Surgery_Conventions_Configuration_Yaml_Exports_GetConventions_Rocket_Surgery_Conventions_ConventionContextBuilder_
  commentId: M:Rocket.Surgery.Conventions.Configuration.Yaml.Exports.GetConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.Exports.GetConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  nameWithType: Exports.GetConventions(ConventionContextBuilder)
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.Exports.GetConventions*
  name: GetConventions
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.Exports.html#Rocket_Surgery_Conventions_Configuration_Yaml_Exports_GetConventions_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.Yaml.Exports.GetConventions
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.Exports.GetConventions
  nameWithType: Exports.GetConventions
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions
  name: YamlConfigurationExtensions
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.html
  commentId: T:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions
  nameWithType: YamlConfigurationExtensions
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider,System.String,System.Boolean,System.Boolean)
  name: AddYamlFile(IConfigurationBuilder, IFileProvider?, string, bool, bool)
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.html#Rocket_Surgery_Conventions_Configuration_Yaml_YamlConfigurationExtensions_AddYamlFile_Microsoft_Extensions_Configuration_IConfigurationBuilder_Microsoft_Extensions_FileProviders_IFileProvider_System_String_System_Boolean_System_Boolean_
  commentId: M:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider,System.String,System.Boolean,System.Boolean)
  name.vb: AddYamlFile(IConfigurationBuilder, IFileProvider, String, Boolean, Boolean)
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder, Microsoft.Extensions.FileProviders.IFileProvider?, string, bool, bool)
  fullName.vb: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder, Microsoft.Extensions.FileProviders.IFileProvider, String, Boolean, Boolean)
  nameWithType: YamlConfigurationExtensions.AddYamlFile(IConfigurationBuilder, IFileProvider?, string, bool, bool)
  nameWithType.vb: YamlConfigurationExtensions.AddYamlFile(IConfigurationBuilder, IFileProvider, String, Boolean, Boolean)
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Action{Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource})
  name: AddYamlFile(IConfigurationBuilder, Action<YamlConfigurationSource>)
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.html#Rocket_Surgery_Conventions_Configuration_Yaml_YamlConfigurationExtensions_AddYamlFile_Microsoft_Extensions_Configuration_IConfigurationBuilder_System_Action_Rocket_Surgery_Conventions_Configuration_Yaml_YamlConfigurationSource__
  commentId: M:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Action{Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource})
  name.vb: AddYamlFile(IConfigurationBuilder, Action(Of YamlConfigurationSource))
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder, System.Action<Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource>)
  fullName.vb: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder, System.Action(Of Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource))
  nameWithType: YamlConfigurationExtensions.AddYamlFile(IConfigurationBuilder, Action<YamlConfigurationSource>)
  nameWithType.vb: YamlConfigurationExtensions.AddYamlFile(IConfigurationBuilder, Action(Of YamlConfigurationSource))
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)
  name: AddYamlFile(IConfigurationBuilder, string)
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.html#Rocket_Surgery_Conventions_Configuration_Yaml_YamlConfigurationExtensions_AddYamlFile_Microsoft_Extensions_Configuration_IConfigurationBuilder_System_String_
  commentId: M:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)
  name.vb: AddYamlFile(IConfigurationBuilder, String)
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder, string)
  fullName.vb: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder, String)
  nameWithType: YamlConfigurationExtensions.AddYamlFile(IConfigurationBuilder, string)
  nameWithType.vb: YamlConfigurationExtensions.AddYamlFile(IConfigurationBuilder, String)
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean)
  name: AddYamlFile(IConfigurationBuilder, string, bool)
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.html#Rocket_Surgery_Conventions_Configuration_Yaml_YamlConfigurationExtensions_AddYamlFile_Microsoft_Extensions_Configuration_IConfigurationBuilder_System_String_System_Boolean_
  commentId: M:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean)
  name.vb: AddYamlFile(IConfigurationBuilder, String, Boolean)
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder, string, bool)
  fullName.vb: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder, String, Boolean)
  nameWithType: YamlConfigurationExtensions.AddYamlFile(IConfigurationBuilder, string, bool)
  nameWithType.vb: YamlConfigurationExtensions.AddYamlFile(IConfigurationBuilder, String, Boolean)
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean,System.Boolean)
  name: AddYamlFile(IConfigurationBuilder, string, bool, bool)
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.html#Rocket_Surgery_Conventions_Configuration_Yaml_YamlConfigurationExtensions_AddYamlFile_Microsoft_Extensions_Configuration_IConfigurationBuilder_System_String_System_Boolean_System_Boolean_
  commentId: M:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean,System.Boolean)
  name.vb: AddYamlFile(IConfigurationBuilder, String, Boolean, Boolean)
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder, string, bool, bool)
  fullName.vb: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder, String, Boolean, Boolean)
  nameWithType: YamlConfigurationExtensions.AddYamlFile(IConfigurationBuilder, string, bool, bool)
  nameWithType.vb: YamlConfigurationExtensions.AddYamlFile(IConfigurationBuilder, String, Boolean, Boolean)
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile*
  name: AddYamlFile
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.html#Rocket_Surgery_Conventions_Configuration_Yaml_YamlConfigurationExtensions_AddYamlFile_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlFile
  nameWithType: YamlConfigurationExtensions.AddYamlFile
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlStream(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.IO.Stream)
  name: AddYamlStream(IConfigurationBuilder, Stream)
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.html#Rocket_Surgery_Conventions_Configuration_Yaml_YamlConfigurationExtensions_AddYamlStream_Microsoft_Extensions_Configuration_IConfigurationBuilder_System_IO_Stream_
  commentId: M:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlStream(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.IO.Stream)
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlStream(Microsoft.Extensions.Configuration.IConfigurationBuilder, System.IO.Stream)
  nameWithType: YamlConfigurationExtensions.AddYamlStream(IConfigurationBuilder, Stream)
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlStream*
  name: AddYamlStream
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.html#Rocket_Surgery_Conventions_Configuration_Yaml_YamlConfigurationExtensions_AddYamlStream_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlStream
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationExtensions.AddYamlStream
  nameWithType: YamlConfigurationExtensions.AddYamlStream
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider
  name: YamlConfigurationProvider
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.html
  commentId: T:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider
  nameWithType: YamlConfigurationProvider
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.#ctor(Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource)
  name: YamlConfigurationProvider(YamlConfigurationSource)
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.html#Rocket_Surgery_Conventions_Configuration_Yaml_YamlConfigurationProvider__ctor_Rocket_Surgery_Conventions_Configuration_Yaml_YamlConfigurationSource_
  commentId: M:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.#ctor(Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource)
  name.vb: New(YamlConfigurationSource)
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.YamlConfigurationProvider(Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource)
  fullName.vb: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.New(Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource)
  nameWithType: YamlConfigurationProvider.YamlConfigurationProvider(YamlConfigurationSource)
  nameWithType.vb: YamlConfigurationProvider.New(YamlConfigurationSource)
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.#ctor*
  name: YamlConfigurationProvider
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.html#Rocket_Surgery_Conventions_Configuration_Yaml_YamlConfigurationProvider__ctor_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.YamlConfigurationProvider
  fullName.vb: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.New
  nameWithType: YamlConfigurationProvider.YamlConfigurationProvider
  nameWithType.vb: YamlConfigurationProvider.New
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.Load(System.IO.Stream)
  name: Load(Stream)
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.html#Rocket_Surgery_Conventions_Configuration_Yaml_YamlConfigurationProvider_Load_System_IO_Stream_
  commentId: M:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.Load(System.IO.Stream)
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.Load(System.IO.Stream)
  nameWithType: YamlConfigurationProvider.Load(Stream)
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.Load*
  name: Load
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.html#Rocket_Surgery_Conventions_Configuration_Yaml_YamlConfigurationProvider_Load_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.Load
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationProvider.Load
  nameWithType: YamlConfigurationProvider.Load
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource
  name: YamlConfigurationSource
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource.html
  commentId: T:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource
  nameWithType: YamlConfigurationSource
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  name: Build(IConfigurationBuilder)
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource.html#Rocket_Surgery_Conventions_Configuration_Yaml_YamlConfigurationSource_Build_Microsoft_Extensions_Configuration_IConfigurationBuilder_
  commentId: M:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  nameWithType: YamlConfigurationSource.Build(IConfigurationBuilder)
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource.Build*
  name: Build
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource.html#Rocket_Surgery_Conventions_Configuration_Yaml_YamlConfigurationSource_Build_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource.Build
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConfigurationSource.Build
  nameWithType: YamlConfigurationSource.Build
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConvention
  name: YamlConvention
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConvention.html
  commentId: T:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConvention
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConvention
  nameWithType: YamlConvention
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConvention.Register(Rocket.Surgery.Conventions.IConventionContext)
  name: Register(IConventionContext)
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConvention.html#Rocket_Surgery_Conventions_Configuration_Yaml_YamlConvention_Register_Rocket_Surgery_Conventions_IConventionContext_
  commentId: M:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConvention.Register(Rocket.Surgery.Conventions.IConventionContext)
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConvention.Register(Rocket.Surgery.Conventions.IConventionContext)
  nameWithType: YamlConvention.Register(IConventionContext)
- uid: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Conventions.Configuration.Yaml.YamlConvention.html#Rocket_Surgery_Conventions_Configuration_Yaml_YamlConvention_Register_
  commentId: Overload:Rocket.Surgery.Conventions.Configuration.Yaml.YamlConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Configuration.Yaml.YamlConvention.Register
  nameWithType: YamlConvention.Register
- uid: Rocket.Surgery.Conventions.ConventionAttribute
  name: ConventionAttribute
  href: api/Rocket.Surgery.Conventions.ConventionAttribute.html
  commentId: T:Rocket.Surgery.Conventions.ConventionAttribute
  fullName: Rocket.Surgery.Conventions.ConventionAttribute
  nameWithType: ConventionAttribute
- uid: Rocket.Surgery.Conventions.ConventionAttribute.#ctor(System.Type)
  name: ConventionAttribute(Type)
  href: api/Rocket.Surgery.Conventions.ConventionAttribute.html#Rocket_Surgery_Conventions_ConventionAttribute__ctor_System_Type_
  commentId: M:Rocket.Surgery.Conventions.ConventionAttribute.#ctor(System.Type)
  name.vb: New(Type)
  fullName: Rocket.Surgery.Conventions.ConventionAttribute.ConventionAttribute(System.Type)
  fullName.vb: Rocket.Surgery.Conventions.ConventionAttribute.New(System.Type)
  nameWithType: ConventionAttribute.ConventionAttribute(Type)
  nameWithType.vb: ConventionAttribute.New(Type)
- uid: Rocket.Surgery.Conventions.ConventionAttribute.#ctor*
  name: ConventionAttribute
  href: api/Rocket.Surgery.Conventions.ConventionAttribute.html#Rocket_Surgery_Conventions_ConventionAttribute__ctor_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Rocket.Surgery.Conventions.ConventionAttribute.ConventionAttribute
  fullName.vb: Rocket.Surgery.Conventions.ConventionAttribute.New
  nameWithType: ConventionAttribute.ConventionAttribute
  nameWithType.vb: ConventionAttribute.New
- uid: Rocket.Surgery.Conventions.ConventionAttribute.Type
  name: Type
  href: api/Rocket.Surgery.Conventions.ConventionAttribute.html#Rocket_Surgery_Conventions_ConventionAttribute_Type
  commentId: P:Rocket.Surgery.Conventions.ConventionAttribute.Type
  fullName: Rocket.Surgery.Conventions.ConventionAttribute.Type
  nameWithType: ConventionAttribute.Type
- uid: Rocket.Surgery.Conventions.ConventionAttribute.Type*
  name: Type
  href: api/Rocket.Surgery.Conventions.ConventionAttribute.html#Rocket_Surgery_Conventions_ConventionAttribute_Type_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionAttribute.Type
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionAttribute.Type
  nameWithType: ConventionAttribute.Type
- uid: Rocket.Surgery.Conventions.ConventionAttribute`1
  name: ConventionAttribute<T>
  href: api/Rocket.Surgery.Conventions.ConventionAttribute-1.html
  commentId: T:Rocket.Surgery.Conventions.ConventionAttribute`1
  name.vb: ConventionAttribute(Of T)
  fullName: Rocket.Surgery.Conventions.ConventionAttribute<T>
  fullName.vb: Rocket.Surgery.Conventions.ConventionAttribute(Of T)
  nameWithType: ConventionAttribute<T>
  nameWithType.vb: ConventionAttribute(Of T)
- uid: Rocket.Surgery.Conventions.ConventionAttribute`1.#ctor
  name: ConventionAttribute()
  href: api/Rocket.Surgery.Conventions.ConventionAttribute-1.html#Rocket_Surgery_Conventions_ConventionAttribute_1__ctor
  commentId: M:Rocket.Surgery.Conventions.ConventionAttribute`1.#ctor
  name.vb: New()
  fullName: Rocket.Surgery.Conventions.ConventionAttribute<T>.ConventionAttribute()
  fullName.vb: Rocket.Surgery.Conventions.ConventionAttribute(Of T).New()
  nameWithType: ConventionAttribute<T>.ConventionAttribute()
  nameWithType.vb: ConventionAttribute(Of T).New()
- uid: Rocket.Surgery.Conventions.ConventionAttribute`1.#ctor*
  name: ConventionAttribute
  href: api/Rocket.Surgery.Conventions.ConventionAttribute-1.html#Rocket_Surgery_Conventions_ConventionAttribute_1__ctor_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionAttribute`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Rocket.Surgery.Conventions.ConventionAttribute<T>.ConventionAttribute
  fullName.vb: Rocket.Surgery.Conventions.ConventionAttribute(Of T).New
  nameWithType: ConventionAttribute<T>.ConventionAttribute
  nameWithType.vb: ConventionAttribute(Of T).New
- uid: Rocket.Surgery.Conventions.ConventionAttributesGenerator
  name: ConventionAttributesGenerator
  href: api/Rocket.Surgery.Conventions.ConventionAttributesGenerator.html
  commentId: T:Rocket.Surgery.Conventions.ConventionAttributesGenerator
  fullName: Rocket.Surgery.Conventions.ConventionAttributesGenerator
  nameWithType: ConventionAttributesGenerator
- uid: Rocket.Surgery.Conventions.ConventionAttributesGenerator.Initialize(Microsoft.CodeAnalysis.IncrementalGeneratorInitializationContext)
  name: Initialize(IncrementalGeneratorInitializationContext)
  href: api/Rocket.Surgery.Conventions.ConventionAttributesGenerator.html#Rocket_Surgery_Conventions_ConventionAttributesGenerator_Initialize_Microsoft_CodeAnalysis_IncrementalGeneratorInitializationContext_
  commentId: M:Rocket.Surgery.Conventions.ConventionAttributesGenerator.Initialize(Microsoft.CodeAnalysis.IncrementalGeneratorInitializationContext)
  fullName: Rocket.Surgery.Conventions.ConventionAttributesGenerator.Initialize(Microsoft.CodeAnalysis.IncrementalGeneratorInitializationContext)
  nameWithType: ConventionAttributesGenerator.Initialize(IncrementalGeneratorInitializationContext)
- uid: Rocket.Surgery.Conventions.ConventionAttributesGenerator.Initialize*
  name: Initialize
  href: api/Rocket.Surgery.Conventions.ConventionAttributesGenerator.html#Rocket_Surgery_Conventions_ConventionAttributesGenerator_Initialize_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionAttributesGenerator.Initialize
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionAttributesGenerator.Initialize
  nameWithType: ConventionAttributesGenerator.Initialize
- uid: Rocket.Surgery.Conventions.ConventionContext
  name: ConventionContext
  href: api/Rocket.Surgery.Conventions.ConventionContext.html
  commentId: T:Rocket.Surgery.Conventions.ConventionContext
  fullName: Rocket.Surgery.Conventions.ConventionContext
  nameWithType: ConventionContext
- uid: Rocket.Surgery.Conventions.ConventionContext.AssemblyProvider
  name: AssemblyProvider
  href: api/Rocket.Surgery.Conventions.ConventionContext.html#Rocket_Surgery_Conventions_ConventionContext_AssemblyProvider
  commentId: P:Rocket.Surgery.Conventions.ConventionContext.AssemblyProvider
  fullName: Rocket.Surgery.Conventions.ConventionContext.AssemblyProvider
  nameWithType: ConventionContext.AssemblyProvider
- uid: Rocket.Surgery.Conventions.ConventionContext.AssemblyProvider*
  name: AssemblyProvider
  href: api/Rocket.Surgery.Conventions.ConventionContext.html#Rocket_Surgery_Conventions_ConventionContext_AssemblyProvider_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContext.AssemblyProvider
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContext.AssemblyProvider
  nameWithType: ConventionContext.AssemblyProvider
- uid: Rocket.Surgery.Conventions.ConventionContext.Conventions
  name: Conventions
  href: api/Rocket.Surgery.Conventions.ConventionContext.html#Rocket_Surgery_Conventions_ConventionContext_Conventions
  commentId: P:Rocket.Surgery.Conventions.ConventionContext.Conventions
  fullName: Rocket.Surgery.Conventions.ConventionContext.Conventions
  nameWithType: ConventionContext.Conventions
- uid: Rocket.Surgery.Conventions.ConventionContext.Conventions*
  name: Conventions
  href: api/Rocket.Surgery.Conventions.ConventionContext.html#Rocket_Surgery_Conventions_ConventionContext_Conventions_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContext.Conventions
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContext.Conventions
  nameWithType: ConventionContext.Conventions
- uid: Rocket.Surgery.Conventions.ConventionContext.FromAsync(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Threading.CancellationToken)
  name: FromAsync(ConventionContextBuilder, CancellationToken)
  href: api/Rocket.Surgery.Conventions.ConventionContext.html#Rocket_Surgery_Conventions_ConventionContext_FromAsync_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.ConventionContext.FromAsync(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Conventions.ConventionContext.FromAsync(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Threading.CancellationToken)
  nameWithType: ConventionContext.FromAsync(ConventionContextBuilder, CancellationToken)
- uid: Rocket.Surgery.Conventions.ConventionContext.FromAsync*
  name: FromAsync
  href: api/Rocket.Surgery.Conventions.ConventionContext.html#Rocket_Surgery_Conventions_ConventionContext_FromAsync_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContext.FromAsync
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContext.FromAsync
  nameWithType: ConventionContext.FromAsync
- uid: Rocket.Surgery.Conventions.ConventionContext.Item(System.Object)
  name: this[object]
  href: api/Rocket.Surgery.Conventions.ConventionContext.html#Rocket_Surgery_Conventions_ConventionContext_Item_System_Object_
  commentId: P:Rocket.Surgery.Conventions.ConventionContext.Item(System.Object)
  name.vb: this[](Object)
  fullName: Rocket.Surgery.Conventions.ConventionContext.this[object]
  fullName.vb: Rocket.Surgery.Conventions.ConventionContext.this[](Object)
  nameWithType: ConventionContext.this[object]
  nameWithType.vb: ConventionContext.this[](Object)
- uid: Rocket.Surgery.Conventions.ConventionContext.Item*
  name: this
  href: api/Rocket.Surgery.Conventions.ConventionContext.html#Rocket_Surgery_Conventions_ConventionContext_Item_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContext.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Rocket.Surgery.Conventions.ConventionContext.this
  fullName.vb: Rocket.Surgery.Conventions.ConventionContext.this[]
  nameWithType: ConventionContext.this
  nameWithType.vb: ConventionContext.this[]
- uid: Rocket.Surgery.Conventions.ConventionContext.Logger
  name: Logger
  href: api/Rocket.Surgery.Conventions.ConventionContext.html#Rocket_Surgery_Conventions_ConventionContext_Logger
  commentId: P:Rocket.Surgery.Conventions.ConventionContext.Logger
  fullName: Rocket.Surgery.Conventions.ConventionContext.Logger
  nameWithType: ConventionContext.Logger
- uid: Rocket.Surgery.Conventions.ConventionContext.Logger*
  name: Logger
  href: api/Rocket.Surgery.Conventions.ConventionContext.html#Rocket_Surgery_Conventions_ConventionContext_Logger_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContext.Logger
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContext.Logger
  nameWithType: ConventionContext.Logger
- uid: Rocket.Surgery.Conventions.ConventionContext.Properties
  name: Properties
  href: api/Rocket.Surgery.Conventions.ConventionContext.html#Rocket_Surgery_Conventions_ConventionContext_Properties
  commentId: P:Rocket.Surgery.Conventions.ConventionContext.Properties
  fullName: Rocket.Surgery.Conventions.ConventionContext.Properties
  nameWithType: ConventionContext.Properties
- uid: Rocket.Surgery.Conventions.ConventionContext.Properties*
  name: Properties
  href: api/Rocket.Surgery.Conventions.ConventionContext.html#Rocket_Surgery_Conventions_ConventionContext_Properties_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContext.Properties
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContext.Properties
  nameWithType: ConventionContext.Properties
- uid: Rocket.Surgery.Conventions.ConventionContext.ToBuilder
  name: ToBuilder()
  href: api/Rocket.Surgery.Conventions.ConventionContext.html#Rocket_Surgery_Conventions_ConventionContext_ToBuilder
  commentId: M:Rocket.Surgery.Conventions.ConventionContext.ToBuilder
  fullName: Rocket.Surgery.Conventions.ConventionContext.ToBuilder()
  nameWithType: ConventionContext.ToBuilder()
- uid: Rocket.Surgery.Conventions.ConventionContext.ToBuilder*
  name: ToBuilder
  href: api/Rocket.Surgery.Conventions.ConventionContext.html#Rocket_Surgery_Conventions_ConventionContext_ToBuilder_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContext.ToBuilder
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContext.ToBuilder
  nameWithType: ConventionContext.ToBuilder
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder
  name: ConventionContextBuilder
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html
  commentId: T:Rocket.Surgery.Conventions.ConventionContextBuilder
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder
  nameWithType: ConventionContextBuilder
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.#ctor(System.Collections.Generic.IDictionary{System.Object,System.Object})
  name: ConventionContextBuilder(IDictionary<object, object>?)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder__ctor_System_Collections_Generic_IDictionary_System_Object_System_Object__
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.#ctor(System.Collections.Generic.IDictionary{System.Object,System.Object})
  name.vb: New(IDictionary(Of Object, Object))
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.ConventionContextBuilder(System.Collections.Generic.IDictionary<object, object>?)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.New(System.Collections.Generic.IDictionary(Of Object, Object))
  nameWithType: ConventionContextBuilder.ConventionContextBuilder(IDictionary<object, object>?)
  nameWithType.vb: ConventionContextBuilder.New(IDictionary(Of Object, Object))
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.#ctor*
  name: ConventionContextBuilder
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder__ctor_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilder.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.ConventionContextBuilder
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.New
  nameWithType: ConventionContextBuilder.ConventionContextBuilder
  nameWithType.vb: ConventionContextBuilder.New
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.AddDelegate(System.Delegate,System.Int32)
  name: AddDelegate(Delegate, int)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_AddDelegate_System_Delegate_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.AddDelegate(System.Delegate,System.Int32)
  name.vb: AddDelegate(Delegate, Integer)
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.AddDelegate(System.Delegate, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.AddDelegate(System.Delegate, Integer)
  nameWithType: ConventionContextBuilder.AddDelegate(Delegate, int)
  nameWithType.vb: ConventionContextBuilder.AddDelegate(Delegate, Integer)
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.AddDelegate*
  name: AddDelegate
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_AddDelegate_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilder.AddDelegate
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.AddDelegate
  nameWithType: ConventionContextBuilder.AddDelegate
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention(Rocket.Surgery.Conventions.IConvention)
  name: AppendConvention(IConvention)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_AppendConvention_Rocket_Surgery_Conventions_IConvention_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention(Rocket.Surgery.Conventions.IConvention)
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention(Rocket.Surgery.Conventions.IConvention)
  nameWithType: ConventionContextBuilder.AppendConvention(IConvention)
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention(System.Collections.Generic.IEnumerable{Rocket.Surgery.Conventions.IConvention})
  name: AppendConvention(IEnumerable<IConvention>)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_AppendConvention_System_Collections_Generic_IEnumerable_Rocket_Surgery_Conventions_IConvention__
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention(System.Collections.Generic.IEnumerable{Rocket.Surgery.Conventions.IConvention})
  name.vb: AppendConvention(IEnumerable(Of IConvention))
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention(System.Collections.Generic.IEnumerable<Rocket.Surgery.Conventions.IConvention>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention(System.Collections.Generic.IEnumerable(Of Rocket.Surgery.Conventions.IConvention))
  nameWithType: ConventionContextBuilder.AppendConvention(IEnumerable<IConvention>)
  nameWithType.vb: ConventionContextBuilder.AppendConvention(IEnumerable(Of IConvention))
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention(System.Collections.Generic.IEnumerable{System.Type})
  name: AppendConvention(IEnumerable<Type>)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_AppendConvention_System_Collections_Generic_IEnumerable_System_Type__
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention(System.Collections.Generic.IEnumerable{System.Type})
  name.vb: AppendConvention(IEnumerable(Of Type))
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention(System.Collections.Generic.IEnumerable<System.Type>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention(System.Collections.Generic.IEnumerable(Of System.Type))
  nameWithType: ConventionContextBuilder.AppendConvention(IEnumerable<Type>)
  nameWithType.vb: ConventionContextBuilder.AppendConvention(IEnumerable(Of Type))
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention(System.Type)
  name: AppendConvention(Type)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_AppendConvention_System_Type_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention(System.Type)
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention(System.Type)
  nameWithType: ConventionContextBuilder.AppendConvention(Type)
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention*
  name: AppendConvention
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_AppendConvention_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention
  nameWithType: ConventionContextBuilder.AppendConvention
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention``1
  name: AppendConvention<T>()
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_AppendConvention__1
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention``1
  name.vb: AppendConvention(Of T)()
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention<T>()
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendConvention(Of T)()
  nameWithType: ConventionContextBuilder.AppendConvention<T>()
  nameWithType.vb: ConventionContextBuilder.AppendConvention(Of T)()
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendDelegate(System.Collections.Generic.IEnumerable{System.Delegate})
  name: AppendDelegate(IEnumerable<Delegate>)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_AppendDelegate_System_Collections_Generic_IEnumerable_System_Delegate__
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.AppendDelegate(System.Collections.Generic.IEnumerable{System.Delegate})
  name.vb: AppendDelegate(IEnumerable(Of Delegate))
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendDelegate(System.Collections.Generic.IEnumerable<System.Delegate>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendDelegate(System.Collections.Generic.IEnumerable(Of System.Delegate))
  nameWithType: ConventionContextBuilder.AppendDelegate(IEnumerable<Delegate>)
  nameWithType.vb: ConventionContextBuilder.AppendDelegate(IEnumerable(Of Delegate))
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendDelegate(System.Delegate)
  name: AppendDelegate(Delegate)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_AppendDelegate_System_Delegate_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.AppendDelegate(System.Delegate)
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendDelegate(System.Delegate)
  nameWithType: ConventionContextBuilder.AppendDelegate(Delegate)
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendDelegate*
  name: AppendDelegate
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_AppendDelegate_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilder.AppendDelegate
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.AppendDelegate
  nameWithType: ConventionContextBuilder.AppendDelegate
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.Create(System.Collections.Generic.IDictionary{System.Object,System.Object})
  name: Create(IDictionary<object, object>?)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_Create_System_Collections_Generic_IDictionary_System_Object_System_Object__
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.Create(System.Collections.Generic.IDictionary{System.Object,System.Object})
  name.vb: Create(IDictionary(Of Object, Object))
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.Create(System.Collections.Generic.IDictionary<object, object>?)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.Create(System.Collections.Generic.IDictionary(Of Object, Object))
  nameWithType: ConventionContextBuilder.Create(IDictionary<object, object>?)
  nameWithType.vb: ConventionContextBuilder.Create(IDictionary(Of Object, Object))
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.Create*
  name: Create
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_Create_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilder.Create
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.Create
  nameWithType: ConventionContextBuilder.Create
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.DisableConventionAttributes
  name: DisableConventionAttributes()
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_DisableConventionAttributes
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.DisableConventionAttributes
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.DisableConventionAttributes()
  nameWithType: ConventionContextBuilder.DisableConventionAttributes()
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.DisableConventionAttributes*
  name: DisableConventionAttributes
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_DisableConventionAttributes_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilder.DisableConventionAttributes
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.DisableConventionAttributes
  nameWithType: ConventionContextBuilder.DisableConventionAttributes
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.EnableConventionAttributes
  name: EnableConventionAttributes()
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_EnableConventionAttributes
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.EnableConventionAttributes
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.EnableConventionAttributes()
  nameWithType: ConventionContextBuilder.EnableConventionAttributes()
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.EnableConventionAttributes*
  name: EnableConventionAttributes
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_EnableConventionAttributes_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilder.EnableConventionAttributes
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.EnableConventionAttributes
  nameWithType: ConventionContextBuilder.EnableConventionAttributes
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name: ExceptConvention(IEnumerable<Assembly>)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_ExceptConvention_System_Collections_Generic_IEnumerable_System_Reflection_Assembly__
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name.vb: ExceptConvention(IEnumerable(Of Assembly))
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention(System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly))
  nameWithType: ConventionContextBuilder.ExceptConvention(IEnumerable<Assembly>)
  nameWithType.vb: ConventionContextBuilder.ExceptConvention(IEnumerable(Of Assembly))
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention(System.Collections.Generic.IEnumerable{System.Type})
  name: ExceptConvention(IEnumerable<Type>)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_ExceptConvention_System_Collections_Generic_IEnumerable_System_Type__
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention(System.Collections.Generic.IEnumerable{System.Type})
  name.vb: ExceptConvention(IEnumerable(Of Type))
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention(System.Collections.Generic.IEnumerable<System.Type>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention(System.Collections.Generic.IEnumerable(Of System.Type))
  nameWithType: ConventionContextBuilder.ExceptConvention(IEnumerable<Type>)
  nameWithType.vb: ConventionContextBuilder.ExceptConvention(IEnumerable(Of Type))
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention(System.Reflection.Assembly,System.Reflection.Assembly[])
  name: ExceptConvention(Assembly, params Assembly[])
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_ExceptConvention_System_Reflection_Assembly_System_Reflection_Assembly___
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention(System.Reflection.Assembly,System.Reflection.Assembly[])
  name.vb: ExceptConvention(Assembly, ParamArray Assembly())
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention(System.Reflection.Assembly, params System.Reflection.Assembly[])
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention(System.Reflection.Assembly, ParamArray System.Reflection.Assembly())
  nameWithType: ConventionContextBuilder.ExceptConvention(Assembly, params Assembly[])
  nameWithType.vb: ConventionContextBuilder.ExceptConvention(Assembly, ParamArray Assembly())
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention(System.Type,System.Type[])
  name: ExceptConvention(Type, params Type[])
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_ExceptConvention_System_Type_System_Type___
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention(System.Type,System.Type[])
  name.vb: ExceptConvention(Type, ParamArray Type())
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention(System.Type, params System.Type[])
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention(System.Type, ParamArray System.Type())
  nameWithType: ConventionContextBuilder.ExceptConvention(Type, params Type[])
  nameWithType.vb: ConventionContextBuilder.ExceptConvention(Type, ParamArray Type())
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention*
  name: ExceptConvention
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_ExceptConvention_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.ExceptConvention
  nameWithType: ConventionContextBuilder.ExceptConvention
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.IncludeConvention(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name: IncludeConvention(IEnumerable<Assembly>)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_IncludeConvention_System_Collections_Generic_IEnumerable_System_Reflection_Assembly__
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.IncludeConvention(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name.vb: IncludeConvention(IEnumerable(Of Assembly))
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.IncludeConvention(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.IncludeConvention(System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly))
  nameWithType: ConventionContextBuilder.IncludeConvention(IEnumerable<Assembly>)
  nameWithType.vb: ConventionContextBuilder.IncludeConvention(IEnumerable(Of Assembly))
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.IncludeConvention(System.Reflection.Assembly,System.Reflection.Assembly[])
  name: IncludeConvention(Assembly, params Assembly[])
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_IncludeConvention_System_Reflection_Assembly_System_Reflection_Assembly___
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.IncludeConvention(System.Reflection.Assembly,System.Reflection.Assembly[])
  name.vb: IncludeConvention(Assembly, ParamArray Assembly())
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.IncludeConvention(System.Reflection.Assembly, params System.Reflection.Assembly[])
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.IncludeConvention(System.Reflection.Assembly, ParamArray System.Reflection.Assembly())
  nameWithType: ConventionContextBuilder.IncludeConvention(Assembly, params Assembly[])
  nameWithType.vb: ConventionContextBuilder.IncludeConvention(Assembly, ParamArray Assembly())
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.IncludeConvention*
  name: IncludeConvention
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_IncludeConvention_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilder.IncludeConvention
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.IncludeConvention
  nameWithType: ConventionContextBuilder.IncludeConvention
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention(Rocket.Surgery.Conventions.IConvention)
  name: PrependConvention(IConvention)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_PrependConvention_Rocket_Surgery_Conventions_IConvention_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention(Rocket.Surgery.Conventions.IConvention)
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention(Rocket.Surgery.Conventions.IConvention)
  nameWithType: ConventionContextBuilder.PrependConvention(IConvention)
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention(System.Collections.Generic.IEnumerable{Rocket.Surgery.Conventions.IConvention})
  name: PrependConvention(IEnumerable<IConvention>)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_PrependConvention_System_Collections_Generic_IEnumerable_Rocket_Surgery_Conventions_IConvention__
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention(System.Collections.Generic.IEnumerable{Rocket.Surgery.Conventions.IConvention})
  name.vb: PrependConvention(IEnumerable(Of IConvention))
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention(System.Collections.Generic.IEnumerable<Rocket.Surgery.Conventions.IConvention>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention(System.Collections.Generic.IEnumerable(Of Rocket.Surgery.Conventions.IConvention))
  nameWithType: ConventionContextBuilder.PrependConvention(IEnumerable<IConvention>)
  nameWithType.vb: ConventionContextBuilder.PrependConvention(IEnumerable(Of IConvention))
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention(System.Collections.Generic.IEnumerable{System.Type})
  name: PrependConvention(IEnumerable<Type>)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_PrependConvention_System_Collections_Generic_IEnumerable_System_Type__
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention(System.Collections.Generic.IEnumerable{System.Type})
  name.vb: PrependConvention(IEnumerable(Of Type))
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention(System.Collections.Generic.IEnumerable<System.Type>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention(System.Collections.Generic.IEnumerable(Of System.Type))
  nameWithType: ConventionContextBuilder.PrependConvention(IEnumerable<Type>)
  nameWithType.vb: ConventionContextBuilder.PrependConvention(IEnumerable(Of Type))
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention(System.Type)
  name: PrependConvention(Type)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_PrependConvention_System_Type_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention(System.Type)
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention(System.Type)
  nameWithType: ConventionContextBuilder.PrependConvention(Type)
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention*
  name: PrependConvention
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_PrependConvention_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention
  nameWithType: ConventionContextBuilder.PrependConvention
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention``1
  name: PrependConvention<T>()
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_PrependConvention__1
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention``1
  name.vb: PrependConvention(Of T)()
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention<T>()
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependConvention(Of T)()
  nameWithType: ConventionContextBuilder.PrependConvention<T>()
  nameWithType.vb: ConventionContextBuilder.PrependConvention(Of T)()
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependDelegate(System.Collections.Generic.IEnumerable{System.Delegate})
  name: PrependDelegate(IEnumerable<Delegate>)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_PrependDelegate_System_Collections_Generic_IEnumerable_System_Delegate__
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.PrependDelegate(System.Collections.Generic.IEnumerable{System.Delegate})
  name.vb: PrependDelegate(IEnumerable(Of Delegate))
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependDelegate(System.Collections.Generic.IEnumerable<System.Delegate>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependDelegate(System.Collections.Generic.IEnumerable(Of System.Delegate))
  nameWithType: ConventionContextBuilder.PrependDelegate(IEnumerable<Delegate>)
  nameWithType.vb: ConventionContextBuilder.PrependDelegate(IEnumerable(Of Delegate))
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependDelegate(System.Delegate)
  name: PrependDelegate(Delegate)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_PrependDelegate_System_Delegate_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.PrependDelegate(System.Delegate)
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependDelegate(System.Delegate)
  nameWithType: ConventionContextBuilder.PrependDelegate(Delegate)
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependDelegate*
  name: PrependDelegate
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_PrependDelegate_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilder.PrependDelegate
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.PrependDelegate
  nameWithType: ConventionContextBuilder.PrependDelegate
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.Properties
  name: Properties
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_Properties
  commentId: P:Rocket.Surgery.Conventions.ConventionContextBuilder.Properties
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.Properties
  nameWithType: ConventionContextBuilder.Properties
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.Properties*
  name: Properties
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_Properties_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilder.Properties
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.Properties
  nameWithType: ConventionContextBuilder.Properties
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.UseConventionFactory(Rocket.Surgery.Conventions.IConventionFactory)
  name: UseConventionFactory(IConventionFactory)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_UseConventionFactory_Rocket_Surgery_Conventions_IConventionFactory_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.UseConventionFactory(Rocket.Surgery.Conventions.IConventionFactory)
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.UseConventionFactory(Rocket.Surgery.Conventions.IConventionFactory)
  nameWithType: ConventionContextBuilder.UseConventionFactory(IConventionFactory)
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.UseConventionFactory*
  name: UseConventionFactory
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_UseConventionFactory_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilder.UseConventionFactory
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.UseConventionFactory
  nameWithType: ConventionContextBuilder.UseConventionFactory
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.UseDiagnosticLogger(Microsoft.Extensions.Logging.ILogger)
  name: UseDiagnosticLogger(ILogger)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_UseDiagnosticLogger_Microsoft_Extensions_Logging_ILogger_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.UseDiagnosticLogger(Microsoft.Extensions.Logging.ILogger)
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.UseDiagnosticLogger(Microsoft.Extensions.Logging.ILogger)
  nameWithType: ConventionContextBuilder.UseDiagnosticLogger(ILogger)
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.UseDiagnosticLogger*
  name: UseDiagnosticLogger
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_UseDiagnosticLogger_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilder.UseDiagnosticLogger
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.UseDiagnosticLogger
  nameWithType: ConventionContextBuilder.UseDiagnosticLogger
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.UseDiagnosticLogging(System.Action{Microsoft.Extensions.Logging.ILoggingBuilder})
  name: UseDiagnosticLogging(Action<ILoggingBuilder>)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_UseDiagnosticLogging_System_Action_Microsoft_Extensions_Logging_ILoggingBuilder__
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilder.UseDiagnosticLogging(System.Action{Microsoft.Extensions.Logging.ILoggingBuilder})
  name.vb: UseDiagnosticLogging(Action(Of ILoggingBuilder))
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.UseDiagnosticLogging(System.Action<Microsoft.Extensions.Logging.ILoggingBuilder>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilder.UseDiagnosticLogging(System.Action(Of Microsoft.Extensions.Logging.ILoggingBuilder))
  nameWithType: ConventionContextBuilder.UseDiagnosticLogging(Action<ILoggingBuilder>)
  nameWithType.vb: ConventionContextBuilder.UseDiagnosticLogging(Action(Of ILoggingBuilder))
- uid: Rocket.Surgery.Conventions.ConventionContextBuilder.UseDiagnosticLogging*
  name: UseDiagnosticLogging
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilder.html#Rocket_Surgery_Conventions_ConventionContextBuilder_UseDiagnosticLogging_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilder.UseDiagnosticLogging
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilder.UseDiagnosticLogging
  nameWithType: ConventionContextBuilder.UseDiagnosticLogging
- uid: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions
  name: ConventionContextBuilderExtensions
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.html
  commentId: T:Rocket.Surgery.Conventions.ConventionContextBuilderExtensions
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions
  nameWithType: ConventionContextBuilderExtensions
- uid: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.CreateServiceProvider(Rocket.Surgery.Conventions.ConventionContextBuilder,Microsoft.Extensions.Configuration.IConfiguration,System.Threading.CancellationToken)
  name: CreateServiceProvider(ConventionContextBuilder, IConfiguration?, CancellationToken)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionContextBuilderExtensions_CreateServiceProvider_Rocket_Surgery_Conventions_ConventionContextBuilder_Microsoft_Extensions_Configuration_IConfiguration_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.CreateServiceProvider(Rocket.Surgery.Conventions.ConventionContextBuilder,Microsoft.Extensions.Configuration.IConfiguration,System.Threading.CancellationToken)
  name.vb: CreateServiceProvider(ConventionContextBuilder, IConfiguration, CancellationToken)
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.CreateServiceProvider(Rocket.Surgery.Conventions.ConventionContextBuilder, Microsoft.Extensions.Configuration.IConfiguration?, System.Threading.CancellationToken)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.CreateServiceProvider(Rocket.Surgery.Conventions.ConventionContextBuilder, Microsoft.Extensions.Configuration.IConfiguration, System.Threading.CancellationToken)
  nameWithType: ConventionContextBuilderExtensions.CreateServiceProvider(ConventionContextBuilder, IConfiguration?, CancellationToken)
  nameWithType.vb: ConventionContextBuilderExtensions.CreateServiceProvider(ConventionContextBuilder, IConfiguration, CancellationToken)
- uid: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.CreateServiceProvider(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,System.Threading.CancellationToken)
  name: CreateServiceProvider(IConventionContext, IConfiguration?, CancellationToken)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionContextBuilderExtensions_CreateServiceProvider_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_Configuration_IConfiguration_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.CreateServiceProvider(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,System.Threading.CancellationToken)
  name.vb: CreateServiceProvider(IConventionContext, IConfiguration, CancellationToken)
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.CreateServiceProvider(Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.Configuration.IConfiguration?, System.Threading.CancellationToken)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.CreateServiceProvider(Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.Configuration.IConfiguration, System.Threading.CancellationToken)
  nameWithType: ConventionContextBuilderExtensions.CreateServiceProvider(IConventionContext, IConfiguration?, CancellationToken)
  nameWithType.vb: ConventionContextBuilderExtensions.CreateServiceProvider(IConventionContext, IConfiguration, CancellationToken)
- uid: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.CreateServiceProvider*
  name: CreateServiceProvider
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionContextBuilderExtensions_CreateServiceProvider_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.CreateServiceProvider
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.CreateServiceProvider
  nameWithType: ConventionContextBuilderExtensions.CreateServiceProvider
- uid: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.UseAppDomain(Rocket.Surgery.Conventions.ConventionContextBuilder,System.AppDomain)
  name: UseAppDomain(ConventionContextBuilder, AppDomain)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionContextBuilderExtensions_UseAppDomain_Rocket_Surgery_Conventions_ConventionContextBuilder_System_AppDomain_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.UseAppDomain(Rocket.Surgery.Conventions.ConventionContextBuilder,System.AppDomain)
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.UseAppDomain(Rocket.Surgery.Conventions.ConventionContextBuilder, System.AppDomain)
  nameWithType: ConventionContextBuilderExtensions.UseAppDomain(ConventionContextBuilder, AppDomain)
- uid: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.UseAppDomain*
  name: UseAppDomain
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionContextBuilderExtensions_UseAppDomain_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.UseAppDomain
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.UseAppDomain
  nameWithType: ConventionContextBuilderExtensions.UseAppDomain
- uid: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.UseAssemblies(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name: UseAssemblies(ConventionContextBuilder, IEnumerable<Assembly>)
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionContextBuilderExtensions_UseAssemblies_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Collections_Generic_IEnumerable_System_Reflection_Assembly__
  commentId: M:Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.UseAssemblies(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name.vb: UseAssemblies(ConventionContextBuilder, IEnumerable(Of Assembly))
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.UseAssemblies(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.UseAssemblies(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly))
  nameWithType: ConventionContextBuilderExtensions.UseAssemblies(ConventionContextBuilder, IEnumerable<Assembly>)
  nameWithType.vb: ConventionContextBuilderExtensions.UseAssemblies(ConventionContextBuilder, IEnumerable(Of Assembly))
- uid: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.UseAssemblies*
  name: UseAssemblies
  href: api/Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionContextBuilderExtensions_UseAssemblies_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.UseAssemblies
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextBuilderExtensions.UseAssemblies
  nameWithType: ConventionContextBuilderExtensions.UseAssemblies
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions
  name: ConventionContextExtensions
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html
  commentId: T:Rocket.Surgery.Conventions.ConventionContextExtensions
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions
  nameWithType: ConventionContextExtensions
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.AddIfMissing(Rocket.Surgery.Conventions.IConventionContext,System.Type,System.Object)
  name: AddIfMissing(IConventionContext, Type, object)
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_AddIfMissing_Rocket_Surgery_Conventions_IConventionContext_System_Type_System_Object_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextExtensions.AddIfMissing(Rocket.Surgery.Conventions.IConventionContext,System.Type,System.Object)
  name.vb: AddIfMissing(IConventionContext, Type, Object)
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.AddIfMissing(Rocket.Surgery.Conventions.IConventionContext, System.Type, object)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextExtensions.AddIfMissing(Rocket.Surgery.Conventions.IConventionContext, System.Type, Object)
  nameWithType: ConventionContextExtensions.AddIfMissing(IConventionContext, Type, object)
  nameWithType.vb: ConventionContextExtensions.AddIfMissing(IConventionContext, Type, Object)
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.AddIfMissing*
  name: AddIfMissing
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_AddIfMissing_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextExtensions.AddIfMissing
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.AddIfMissing
  nameWithType: ConventionContextExtensions.AddIfMissing
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.AddIfMissing``1(Rocket.Surgery.Conventions.IConventionContext,System.String,``0)
  name: AddIfMissing<T>(IConventionContext, string, T)
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_AddIfMissing__1_Rocket_Surgery_Conventions_IConventionContext_System_String___0_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextExtensions.AddIfMissing``1(Rocket.Surgery.Conventions.IConventionContext,System.String,``0)
  name.vb: AddIfMissing(Of T)(IConventionContext, String, T)
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.AddIfMissing<T>(Rocket.Surgery.Conventions.IConventionContext, string, T)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextExtensions.AddIfMissing(Of T)(Rocket.Surgery.Conventions.IConventionContext, String, T)
  nameWithType: ConventionContextExtensions.AddIfMissing<T>(IConventionContext, string, T)
  nameWithType.vb: ConventionContextExtensions.AddIfMissing(Of T)(IConventionContext, String, T)
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.AddIfMissing``1(Rocket.Surgery.Conventions.IConventionContext,``0)
  name: AddIfMissing<T>(IConventionContext, T)
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_AddIfMissing__1_Rocket_Surgery_Conventions_IConventionContext___0_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextExtensions.AddIfMissing``1(Rocket.Surgery.Conventions.IConventionContext,``0)
  name.vb: AddIfMissing(Of T)(IConventionContext, T)
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.AddIfMissing<T>(Rocket.Surgery.Conventions.IConventionContext, T)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextExtensions.AddIfMissing(Of T)(Rocket.Surgery.Conventions.IConventionContext, T)
  nameWithType: ConventionContextExtensions.AddIfMissing<T>(IConventionContext, T)
  nameWithType.vb: ConventionContextExtensions.AddIfMissing(Of T)(IConventionContext, T)
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.Get*
  name: Get
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_Get_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextExtensions.Get
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.Get
  nameWithType: ConventionContextExtensions.Get
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.GetHostType(Rocket.Surgery.Conventions.IConventionContext)
  name: GetHostType(IConventionContext)
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_GetHostType_Rocket_Surgery_Conventions_IConventionContext_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextExtensions.GetHostType(Rocket.Surgery.Conventions.IConventionContext)
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.GetHostType(Rocket.Surgery.Conventions.IConventionContext)
  nameWithType: ConventionContextExtensions.GetHostType(IConventionContext)
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.GetHostType*
  name: GetHostType
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_GetHostType_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextExtensions.GetHostType
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.GetHostType
  nameWithType: ConventionContextExtensions.GetHostType
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.GetOrAdd*
  name: GetOrAdd
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_GetOrAdd_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextExtensions.GetOrAdd
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.GetOrAdd
  nameWithType: ConventionContextExtensions.GetOrAdd
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.GetOrAdd``1(Rocket.Surgery.Conventions.IConventionContext,System.Func{``0})
  name: GetOrAdd<T>(IConventionContext, Func<T>)
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_GetOrAdd__1_Rocket_Surgery_Conventions_IConventionContext_System_Func___0__
  commentId: M:Rocket.Surgery.Conventions.ConventionContextExtensions.GetOrAdd``1(Rocket.Surgery.Conventions.IConventionContext,System.Func{``0})
  name.vb: GetOrAdd(Of T)(IConventionContext, Func(Of T))
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.GetOrAdd<T>(Rocket.Surgery.Conventions.IConventionContext, System.Func<T>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextExtensions.GetOrAdd(Of T)(Rocket.Surgery.Conventions.IConventionContext, System.Func(Of T))
  nameWithType: ConventionContextExtensions.GetOrAdd<T>(IConventionContext, Func<T>)
  nameWithType.vb: ConventionContextExtensions.GetOrAdd(Of T)(IConventionContext, Func(Of T))
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.GetOrAdd``1(Rocket.Surgery.Conventions.IConventionContext,System.String,System.Func{``0})
  name: GetOrAdd<T>(IConventionContext, string, Func<T>)
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_GetOrAdd__1_Rocket_Surgery_Conventions_IConventionContext_System_String_System_Func___0__
  commentId: M:Rocket.Surgery.Conventions.ConventionContextExtensions.GetOrAdd``1(Rocket.Surgery.Conventions.IConventionContext,System.String,System.Func{``0})
  name.vb: GetOrAdd(Of T)(IConventionContext, String, Func(Of T))
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.GetOrAdd<T>(Rocket.Surgery.Conventions.IConventionContext, string, System.Func<T>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextExtensions.GetOrAdd(Of T)(Rocket.Surgery.Conventions.IConventionContext, String, System.Func(Of T))
  nameWithType: ConventionContextExtensions.GetOrAdd<T>(IConventionContext, string, Func<T>)
  nameWithType.vb: ConventionContextExtensions.GetOrAdd(Of T)(IConventionContext, String, Func(Of T))
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.Get``1(Rocket.Surgery.Conventions.IConventionContext)
  name: Get<T>(IConventionContext)
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_Get__1_Rocket_Surgery_Conventions_IConventionContext_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextExtensions.Get``1(Rocket.Surgery.Conventions.IConventionContext)
  name.vb: Get(Of T)(IConventionContext)
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.Get<T>(Rocket.Surgery.Conventions.IConventionContext)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextExtensions.Get(Of T)(Rocket.Surgery.Conventions.IConventionContext)
  nameWithType: ConventionContextExtensions.Get<T>(IConventionContext)
  nameWithType.vb: ConventionContextExtensions.Get(Of T)(IConventionContext)
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.Get``1(Rocket.Surgery.Conventions.IConventionContext,System.String)
  name: Get<T>(IConventionContext, string)
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_Get__1_Rocket_Surgery_Conventions_IConventionContext_System_String_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextExtensions.Get``1(Rocket.Surgery.Conventions.IConventionContext,System.String)
  name.vb: Get(Of T)(IConventionContext, String)
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.Get<T>(Rocket.Surgery.Conventions.IConventionContext, string)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextExtensions.Get(Of T)(Rocket.Surgery.Conventions.IConventionContext, String)
  nameWithType: ConventionContextExtensions.Get<T>(IConventionContext, string)
  nameWithType.vb: ConventionContextExtensions.Get(Of T)(IConventionContext, String)
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.IsUnitTestHost(Rocket.Surgery.Conventions.IConventionContext)
  name: IsUnitTestHost(IConventionContext)
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_IsUnitTestHost_Rocket_Surgery_Conventions_IConventionContext_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextExtensions.IsUnitTestHost(Rocket.Surgery.Conventions.IConventionContext)
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.IsUnitTestHost(Rocket.Surgery.Conventions.IConventionContext)
  nameWithType: ConventionContextExtensions.IsUnitTestHost(IConventionContext)
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.IsUnitTestHost*
  name: IsUnitTestHost
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_IsUnitTestHost_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextExtensions.IsUnitTestHost
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.IsUnitTestHost
  nameWithType: ConventionContextExtensions.IsUnitTestHost
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.Set(Rocket.Surgery.Conventions.IConventionContext,System.Type,System.Object)
  name: Set(IConventionContext, Type, object)
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_Set_Rocket_Surgery_Conventions_IConventionContext_System_Type_System_Object_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextExtensions.Set(Rocket.Surgery.Conventions.IConventionContext,System.Type,System.Object)
  name.vb: Set(IConventionContext, Type, Object)
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.Set(Rocket.Surgery.Conventions.IConventionContext, System.Type, object)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextExtensions.Set(Rocket.Surgery.Conventions.IConventionContext, System.Type, Object)
  nameWithType: ConventionContextExtensions.Set(IConventionContext, Type, object)
  nameWithType.vb: ConventionContextExtensions.Set(IConventionContext, Type, Object)
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.Set*
  name: Set
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_Set_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionContextExtensions.Set
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.Set
  nameWithType: ConventionContextExtensions.Set
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.Set``1(Rocket.Surgery.Conventions.IConventionContext,System.String,``0)
  name: Set<T>(IConventionContext, string, T)
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_Set__1_Rocket_Surgery_Conventions_IConventionContext_System_String___0_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextExtensions.Set``1(Rocket.Surgery.Conventions.IConventionContext,System.String,``0)
  name.vb: Set(Of T)(IConventionContext, String, T)
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.Set<T>(Rocket.Surgery.Conventions.IConventionContext, string, T)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextExtensions.Set(Of T)(Rocket.Surgery.Conventions.IConventionContext, String, T)
  nameWithType: ConventionContextExtensions.Set<T>(IConventionContext, string, T)
  nameWithType.vb: ConventionContextExtensions.Set(Of T)(IConventionContext, String, T)
- uid: Rocket.Surgery.Conventions.ConventionContextExtensions.Set``1(Rocket.Surgery.Conventions.IConventionContext,``0)
  name: Set<T>(IConventionContext, T)
  href: api/Rocket.Surgery.Conventions.ConventionContextExtensions.html#Rocket_Surgery_Conventions_ConventionContextExtensions_Set__1_Rocket_Surgery_Conventions_IConventionContext___0_
  commentId: M:Rocket.Surgery.Conventions.ConventionContextExtensions.Set``1(Rocket.Surgery.Conventions.IConventionContext,``0)
  name.vb: Set(Of T)(IConventionContext, T)
  fullName: Rocket.Surgery.Conventions.ConventionContextExtensions.Set<T>(Rocket.Surgery.Conventions.IConventionContext, T)
  fullName.vb: Rocket.Surgery.Conventions.ConventionContextExtensions.Set(Of T)(Rocket.Surgery.Conventions.IConventionContext, T)
  nameWithType: ConventionContextExtensions.Set<T>(IConventionContext, T)
  nameWithType.vb: ConventionContextExtensions.Set(Of T)(IConventionContext, T)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions
  name: ConventionHostBuilderExtensions
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html
  commentId: T:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions
  nameWithType: ConventionHostBuilderExtensions
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.AddIfMissing(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Type,System.Object)
  name: AddIfMissing(ConventionContextBuilder, Type, object)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_AddIfMissing_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Type_System_Object_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.AddIfMissing(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Type,System.Object)
  name.vb: AddIfMissing(ConventionContextBuilder, Type, Object)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.AddIfMissing(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Type, object)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.AddIfMissing(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Type, Object)
  nameWithType: ConventionHostBuilderExtensions.AddIfMissing(ConventionContextBuilder, Type, object)
  nameWithType.vb: ConventionHostBuilderExtensions.AddIfMissing(ConventionContextBuilder, Type, Object)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.AddIfMissing*
  name: AddIfMissing
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_AddIfMissing_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.AddIfMissing
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.AddIfMissing
  nameWithType: ConventionHostBuilderExtensions.AddIfMissing
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.AddIfMissing``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.String,``0)
  name: AddIfMissing<T>(ConventionContextBuilder, string, T)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_AddIfMissing__1_Rocket_Surgery_Conventions_ConventionContextBuilder_System_String___0_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.AddIfMissing``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.String,``0)
  name.vb: AddIfMissing(Of T)(ConventionContextBuilder, String, T)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.AddIfMissing<T>(Rocket.Surgery.Conventions.ConventionContextBuilder, string, T)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.AddIfMissing(Of T)(Rocket.Surgery.Conventions.ConventionContextBuilder, String, T)
  nameWithType: ConventionHostBuilderExtensions.AddIfMissing<T>(ConventionContextBuilder, string, T)
  nameWithType.vb: ConventionHostBuilderExtensions.AddIfMissing(Of T)(ConventionContextBuilder, String, T)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.AddIfMissing``1(Rocket.Surgery.Conventions.ConventionContextBuilder,``0)
  name: AddIfMissing<T>(ConventionContextBuilder, T)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_AddIfMissing__1_Rocket_Surgery_Conventions_ConventionContextBuilder___0_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.AddIfMissing``1(Rocket.Surgery.Conventions.ConventionContextBuilder,``0)
  name.vb: AddIfMissing(Of T)(ConventionContextBuilder, T)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.AddIfMissing<T>(Rocket.Surgery.Conventions.ConventionContextBuilder, T)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.AddIfMissing(Of T)(Rocket.Surgery.Conventions.ConventionContextBuilder, T)
  nameWithType: ConventionHostBuilderExtensions.AddIfMissing<T>(ConventionContextBuilder, T)
  nameWithType.vb: ConventionHostBuilderExtensions.AddIfMissing(Of T)(ConventionContextBuilder, T)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Configuration.ConfigurationAsyncConvention,System.Int32)
  name: ConfigureConfiguration(ConventionContextBuilder, ConfigurationAsyncConvention, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureConfiguration_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Conventions_Configuration_ConfigurationAsyncConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Configuration.ConfigurationAsyncConvention,System.Int32)
  name.vb: ConfigureConfiguration(ConventionContextBuilder, ConfigurationAsyncConvention, Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Configuration.ConfigurationAsyncConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Configuration.ConfigurationAsyncConvention, Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureConfiguration(ConventionContextBuilder, ConfigurationAsyncConvention, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureConfiguration(ConventionContextBuilder, ConfigurationAsyncConvention, Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Configuration.ConfigurationConvention,System.Int32)
  name: ConfigureConfiguration(ConventionContextBuilder, ConfigurationConvention, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureConfiguration_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Conventions_Configuration_ConfigurationConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Configuration.ConfigurationConvention,System.Int32)
  name.vb: ConfigureConfiguration(ConventionContextBuilder, ConfigurationConvention, Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Configuration.ConfigurationConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Configuration.ConfigurationConvention, Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureConfiguration(ConventionContextBuilder, ConfigurationConvention, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureConfiguration(ConventionContextBuilder, ConfigurationConvention, Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Configuration.IConfigurationBuilder},System.Int32)
  name: ConfigureConfiguration(ConventionContextBuilder, Action<IConfiguration, IConfigurationBuilder>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureConfiguration_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_Configuration_IConfigurationBuilder__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Configuration.IConfigurationBuilder},System.Int32)
  name.vb: ConfigureConfiguration(ConventionContextBuilder, Action(Of IConfiguration, IConfigurationBuilder), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Configuration.IConfigurationBuilder>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Configuration.IConfigurationBuilder), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureConfiguration(ConventionContextBuilder, Action<IConfiguration, IConfigurationBuilder>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureConfiguration(ConventionContextBuilder, Action(Of IConfiguration, IConfigurationBuilder), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.Configuration.IConfigurationBuilder},System.Int32)
  name: ConfigureConfiguration(ConventionContextBuilder, Action<IConfigurationBuilder>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureConfiguration_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_Microsoft_Extensions_Configuration_IConfigurationBuilder__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.Configuration.IConfigurationBuilder},System.Int32)
  name.vb: ConfigureConfiguration(ConventionContextBuilder, Action(Of IConfigurationBuilder), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<Microsoft.Extensions.Configuration.IConfigurationBuilder>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of Microsoft.Extensions.Configuration.IConfigurationBuilder), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureConfiguration(ConventionContextBuilder, Action<IConfigurationBuilder>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureConfiguration(ConventionContextBuilder, Action(Of IConfigurationBuilder), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureConfiguration(ConventionContextBuilder, Func<IConfiguration, IConfigurationBuilder, CancellationToken, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureConfiguration_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_Configuration_IConfigurationBuilder_System_Threading_CancellationToken_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureConfiguration(ConventionContextBuilder, Func(Of IConfiguration, IConfigurationBuilder, CancellationToken, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Configuration.IConfigurationBuilder, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Configuration.IConfigurationBuilder, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureConfiguration(ConventionContextBuilder, Func<IConfiguration, IConfigurationBuilder, CancellationToken, ValueTask>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureConfiguration(ConventionContextBuilder, Func(Of IConfiguration, IConfigurationBuilder, CancellationToken, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureConfiguration(ConventionContextBuilder, Func<IConfiguration, IConfigurationBuilder, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureConfiguration_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_Configuration_IConfigurationBuilder_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureConfiguration(ConventionContextBuilder, Func(Of IConfiguration, IConfigurationBuilder, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Configuration.IConfigurationBuilder, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Configuration.IConfigurationBuilder, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureConfiguration(ConventionContextBuilder, Func<IConfiguration, IConfigurationBuilder, ValueTask>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureConfiguration(ConventionContextBuilder, Func(Of IConfiguration, IConfigurationBuilder, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureConfiguration(ConventionContextBuilder, Func<IConfigurationBuilder, CancellationToken, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureConfiguration_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_Extensions_Configuration_IConfigurationBuilder_System_Threading_CancellationToken_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureConfiguration(ConventionContextBuilder, Func(Of IConfigurationBuilder, CancellationToken, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.Extensions.Configuration.IConfigurationBuilder, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.Extensions.Configuration.IConfigurationBuilder, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureConfiguration(ConventionContextBuilder, Func<IConfigurationBuilder, CancellationToken, ValueTask>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureConfiguration(ConventionContextBuilder, Func(Of IConfigurationBuilder, CancellationToken, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureConfiguration(ConventionContextBuilder, Func<IConfigurationBuilder, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureConfiguration_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_Extensions_Configuration_IConfigurationBuilder_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureConfiguration(ConventionContextBuilder, Func(Of IConfigurationBuilder, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.Extensions.Configuration.IConfigurationBuilder, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.Extensions.Configuration.IConfigurationBuilder, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureConfiguration(ConventionContextBuilder, Func<IConfigurationBuilder, ValueTask>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureConfiguration(ConventionContextBuilder, Func(Of IConfigurationBuilder, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration*
  name: ConfigureConfiguration
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureConfiguration_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureConfiguration
  nameWithType: ConventionHostBuilderExtensions.ConfigureConfiguration
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Logging.LoggingAsyncConvention,System.Int32)
  name: ConfigureLogging(ConventionContextBuilder, LoggingAsyncConvention, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureLogging_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Conventions_Logging_LoggingAsyncConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Logging.LoggingAsyncConvention,System.Int32)
  name.vb: ConfigureLogging(ConventionContextBuilder, LoggingAsyncConvention, Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Logging.LoggingAsyncConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Logging.LoggingAsyncConvention, Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureLogging(ConventionContextBuilder, LoggingAsyncConvention, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureLogging(ConventionContextBuilder, LoggingAsyncConvention, Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Logging.LoggingConvention,System.Int32)
  name: ConfigureLogging(ConventionContextBuilder, LoggingConvention, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureLogging_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Conventions_Logging_LoggingConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Logging.LoggingConvention,System.Int32)
  name.vb: ConfigureLogging(ConventionContextBuilder, LoggingConvention, Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Logging.LoggingConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Logging.LoggingConvention, Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureLogging(ConventionContextBuilder, LoggingConvention, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureLogging(ConventionContextBuilder, LoggingConvention, Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggingBuilder},System.Int32)
  name: ConfigureLogging(ConventionContextBuilder, Action<IConfiguration, ILoggingBuilder>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureLogging_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_Logging_ILoggingBuilder__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggingBuilder},System.Int32)
  name.vb: ConfigureLogging(ConventionContextBuilder, Action(Of IConfiguration, ILoggingBuilder), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Logging.ILoggingBuilder>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Logging.ILoggingBuilder), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureLogging(ConventionContextBuilder, Action<IConfiguration, ILoggingBuilder>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureLogging(ConventionContextBuilder, Action(Of IConfiguration, ILoggingBuilder), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.Logging.ILoggingBuilder},System.Int32)
  name: ConfigureLogging(ConventionContextBuilder, Action<ILoggingBuilder>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureLogging_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_Microsoft_Extensions_Logging_ILoggingBuilder__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.Logging.ILoggingBuilder},System.Int32)
  name.vb: ConfigureLogging(ConventionContextBuilder, Action(Of ILoggingBuilder), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<Microsoft.Extensions.Logging.ILoggingBuilder>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of Microsoft.Extensions.Logging.ILoggingBuilder), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureLogging(ConventionContextBuilder, Action<ILoggingBuilder>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureLogging(ConventionContextBuilder, Action(Of ILoggingBuilder), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggingBuilder,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureLogging(ConventionContextBuilder, Func<IConfiguration, ILoggingBuilder, CancellationToken, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureLogging_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_Logging_ILoggingBuilder_System_Threading_CancellationToken_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggingBuilder,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureLogging(ConventionContextBuilder, Func(Of IConfiguration, ILoggingBuilder, CancellationToken, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Logging.ILoggingBuilder, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Logging.ILoggingBuilder, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureLogging(ConventionContextBuilder, Func<IConfiguration, ILoggingBuilder, CancellationToken, ValueTask>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureLogging(ConventionContextBuilder, Func(Of IConfiguration, ILoggingBuilder, CancellationToken, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggingBuilder,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureLogging(ConventionContextBuilder, Func<IConfiguration, ILoggingBuilder, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureLogging_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_Logging_ILoggingBuilder_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggingBuilder,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureLogging(ConventionContextBuilder, Func(Of IConfiguration, ILoggingBuilder, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Logging.ILoggingBuilder, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Logging.ILoggingBuilder, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureLogging(ConventionContextBuilder, Func<IConfiguration, ILoggingBuilder, ValueTask>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureLogging(ConventionContextBuilder, Func(Of IConfiguration, ILoggingBuilder, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Logging.ILoggingBuilder,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureLogging(ConventionContextBuilder, Func<ILoggingBuilder, CancellationToken, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureLogging_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_Extensions_Logging_ILoggingBuilder_System_Threading_CancellationToken_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Logging.ILoggingBuilder,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureLogging(ConventionContextBuilder, Func(Of ILoggingBuilder, CancellationToken, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.Extensions.Logging.ILoggingBuilder, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.Extensions.Logging.ILoggingBuilder, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureLogging(ConventionContextBuilder, Func<ILoggingBuilder, CancellationToken, ValueTask>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureLogging(ConventionContextBuilder, Func(Of ILoggingBuilder, CancellationToken, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Logging.ILoggingBuilder,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureLogging(ConventionContextBuilder, Func<ILoggingBuilder, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureLogging_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_Extensions_Logging_ILoggingBuilder_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Logging.ILoggingBuilder,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureLogging(ConventionContextBuilder, Func(Of ILoggingBuilder, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.Extensions.Logging.ILoggingBuilder, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.Extensions.Logging.ILoggingBuilder, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureLogging(ConventionContextBuilder, Func<ILoggingBuilder, ValueTask>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureLogging(ConventionContextBuilder, Func(Of ILoggingBuilder, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging*
  name: ConfigureLogging
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureLogging_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureLogging
  nameWithType: ConventionHostBuilderExtensions.ConfigureLogging
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.DependencyInjection.ServiceAsyncConvention,System.Int32)
  name: ConfigureServices(ConventionContextBuilder, ServiceAsyncConvention, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureServices_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Conventions_DependencyInjection_ServiceAsyncConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.DependencyInjection.ServiceAsyncConvention,System.Int32)
  name.vb: ConfigureServices(ConventionContextBuilder, ServiceAsyncConvention, Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.DependencyInjection.ServiceAsyncConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.DependencyInjection.ServiceAsyncConvention, Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureServices(ConventionContextBuilder, ServiceAsyncConvention, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureServices(ConventionContextBuilder, ServiceAsyncConvention, Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.DependencyInjection.ServiceConvention,System.Int32)
  name: ConfigureServices(ConventionContextBuilder, ServiceConvention, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureServices_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Conventions_DependencyInjection_ServiceConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.DependencyInjection.ServiceConvention,System.Int32)
  name.vb: ConfigureServices(ConventionContextBuilder, ServiceConvention, Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.DependencyInjection.ServiceConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.DependencyInjection.ServiceConvention, Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureServices(ConventionContextBuilder, ServiceConvention, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureServices(ConventionContextBuilder, ServiceConvention, Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection},System.Int32)
  name: ConfigureServices(ConventionContextBuilder, Action<IConfiguration, IServiceCollection>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureServices_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_IServiceCollection__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection},System.Int32)
  name.vb: ConfigureServices(ConventionContextBuilder, Action(Of IConfiguration, IServiceCollection), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureServices(ConventionContextBuilder, Action<IConfiguration, IServiceCollection>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureServices(ConventionContextBuilder, Action(Of IConfiguration, IServiceCollection), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection},System.Int32)
  name: ConfigureServices(ConventionContextBuilder, Action<IServiceCollection>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureServices_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_Microsoft_Extensions_DependencyInjection_IServiceCollection__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection},System.Int32)
  name.vb: ConfigureServices(ConventionContextBuilder, Action(Of IServiceCollection), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureServices(ConventionContextBuilder, Action<IServiceCollection>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureServices(ConventionContextBuilder, Action(Of IServiceCollection), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureServices(ConventionContextBuilder, Func<IConfiguration, IServiceCollection, CancellationToken, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureServices_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Threading_CancellationToken_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureServices(ConventionContextBuilder, Func(Of IConfiguration, IServiceCollection, CancellationToken, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureServices(ConventionContextBuilder, Func<IConfiguration, IServiceCollection, CancellationToken, ValueTask>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureServices(ConventionContextBuilder, Func(Of IConfiguration, IServiceCollection, CancellationToken, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureServices(ConventionContextBuilder, Func<IConfiguration, IServiceCollection, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureServices_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureServices(ConventionContextBuilder, Func(Of IConfiguration, IServiceCollection, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureServices(ConventionContextBuilder, Func<IConfiguration, IServiceCollection, ValueTask>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureServices(ConventionContextBuilder, Func(Of IConfiguration, IServiceCollection, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureServices(ConventionContextBuilder, Func<IServiceCollection, CancellationToken, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureServices_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Threading_CancellationToken_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureServices(ConventionContextBuilder, Func(Of IServiceCollection, CancellationToken, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureServices(ConventionContextBuilder, Func<IServiceCollection, CancellationToken, ValueTask>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureServices(ConventionContextBuilder, Func(Of IServiceCollection, CancellationToken, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureServices(ConventionContextBuilder, Func<IServiceCollection, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureServices_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureServices(ConventionContextBuilder, Func(Of IServiceCollection, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: ConventionHostBuilderExtensions.ConfigureServices(ConventionContextBuilder, Func<IServiceCollection, ValueTask>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.ConfigureServices(ConventionContextBuilder, Func(Of IServiceCollection, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices*
  name: ConfigureServices
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_ConfigureServices_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.ConfigureServices
  nameWithType: ConventionHostBuilderExtensions.ConfigureServices
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Get*
  name: Get
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_Get_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Get
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Get
  nameWithType: ConventionHostBuilderExtensions.Get
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.GetHostType(Rocket.Surgery.Conventions.ConventionContextBuilder)
  name: GetHostType(ConventionContextBuilder)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_GetHostType_Rocket_Surgery_Conventions_ConventionContextBuilder_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.GetHostType(Rocket.Surgery.Conventions.ConventionContextBuilder)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.GetHostType(Rocket.Surgery.Conventions.ConventionContextBuilder)
  nameWithType: ConventionHostBuilderExtensions.GetHostType(ConventionContextBuilder)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.GetHostType*
  name: GetHostType
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_GetHostType_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.GetHostType
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.GetHostType
  nameWithType: ConventionHostBuilderExtensions.GetHostType
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.GetOrAdd*
  name: GetOrAdd
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_GetOrAdd_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.GetOrAdd
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.GetOrAdd
  nameWithType: ConventionHostBuilderExtensions.GetOrAdd
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.GetOrAdd``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{``0})
  name: GetOrAdd<T>(ConventionContextBuilder, Func<T>)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_GetOrAdd__1_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func___0__
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.GetOrAdd``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{``0})
  name.vb: GetOrAdd(Of T)(ConventionContextBuilder, Func(Of T))
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.GetOrAdd<T>(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<T>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.GetOrAdd(Of T)(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of T))
  nameWithType: ConventionHostBuilderExtensions.GetOrAdd<T>(ConventionContextBuilder, Func<T>)
  nameWithType.vb: ConventionHostBuilderExtensions.GetOrAdd(Of T)(ConventionContextBuilder, Func(Of T))
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.GetOrAdd``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.String,System.Func{``0})
  name: GetOrAdd<T>(ConventionContextBuilder, string, Func<T>)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_GetOrAdd__1_Rocket_Surgery_Conventions_ConventionContextBuilder_System_String_System_Func___0__
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.GetOrAdd``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.String,System.Func{``0})
  name.vb: GetOrAdd(Of T)(ConventionContextBuilder, String, Func(Of T))
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.GetOrAdd<T>(Rocket.Surgery.Conventions.ConventionContextBuilder, string, System.Func<T>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.GetOrAdd(Of T)(Rocket.Surgery.Conventions.ConventionContextBuilder, String, System.Func(Of T))
  nameWithType: ConventionHostBuilderExtensions.GetOrAdd<T>(ConventionContextBuilder, string, Func<T>)
  nameWithType.vb: ConventionHostBuilderExtensions.GetOrAdd(Of T)(ConventionContextBuilder, String, Func(Of T))
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Get``1(Rocket.Surgery.Conventions.ConventionContextBuilder)
  name: Get<T>(ConventionContextBuilder)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_Get__1_Rocket_Surgery_Conventions_ConventionContextBuilder_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Get``1(Rocket.Surgery.Conventions.ConventionContextBuilder)
  name.vb: Get(Of T)(ConventionContextBuilder)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Get<T>(Rocket.Surgery.Conventions.ConventionContextBuilder)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Get(Of T)(Rocket.Surgery.Conventions.ConventionContextBuilder)
  nameWithType: ConventionHostBuilderExtensions.Get<T>(ConventionContextBuilder)
  nameWithType.vb: ConventionHostBuilderExtensions.Get(Of T)(ConventionContextBuilder)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Get``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.String)
  name: Get<T>(ConventionContextBuilder, string)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_Get__1_Rocket_Surgery_Conventions_ConventionContextBuilder_System_String_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Get``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.String)
  name.vb: Get(Of T)(ConventionContextBuilder, String)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Get<T>(Rocket.Surgery.Conventions.ConventionContextBuilder, string)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Get(Of T)(Rocket.Surgery.Conventions.ConventionContextBuilder, String)
  nameWithType: ConventionHostBuilderExtensions.Get<T>(ConventionContextBuilder, string)
  nameWithType.vb: ConventionHostBuilderExtensions.Get(Of T)(ConventionContextBuilder, String)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.IsUnitTestHost(Rocket.Surgery.Conventions.ConventionContextBuilder)
  name: IsUnitTestHost(ConventionContextBuilder)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_IsUnitTestHost_Rocket_Surgery_Conventions_ConventionContextBuilder_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.IsUnitTestHost(Rocket.Surgery.Conventions.ConventionContextBuilder)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.IsUnitTestHost(Rocket.Surgery.Conventions.ConventionContextBuilder)
  nameWithType: ConventionHostBuilderExtensions.IsUnitTestHost(ConventionContextBuilder)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.IsUnitTestHost*
  name: IsUnitTestHost
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_IsUnitTestHost_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.IsUnitTestHost
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.IsUnitTestHost
  nameWithType: ConventionHostBuilderExtensions.IsUnitTestHost
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated*
  name: OnHostCreated
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_OnHostCreated_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated
  nameWithType: ConventionHostBuilderExtensions.OnHostCreated
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated``1(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Hosting.HostCreatedAsyncConvention{``0},System.Int32)
  name: OnHostCreated<THost>(ConventionContextBuilder, HostCreatedAsyncConvention<THost>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_OnHostCreated__1_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Conventions_Hosting_HostCreatedAsyncConvention___0__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated``1(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Hosting.HostCreatedAsyncConvention{``0},System.Int32)
  name.vb: OnHostCreated(Of THost)(ConventionContextBuilder, HostCreatedAsyncConvention(Of THost), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated<THost>(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Hosting.HostCreatedAsyncConvention<THost>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated(Of THost)(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Hosting.HostCreatedAsyncConvention(Of THost), Integer)
  nameWithType: ConventionHostBuilderExtensions.OnHostCreated<THost>(ConventionContextBuilder, HostCreatedAsyncConvention<THost>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.OnHostCreated(Of THost)(ConventionContextBuilder, HostCreatedAsyncConvention(Of THost), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated``1(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Hosting.HostCreatedConvention{``0},System.Int32)
  name: OnHostCreated<THost>(ConventionContextBuilder, HostCreatedConvention<THost>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_OnHostCreated__1_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Conventions_Hosting_HostCreatedConvention___0__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated``1(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Hosting.HostCreatedConvention{``0},System.Int32)
  name.vb: OnHostCreated(Of THost)(ConventionContextBuilder, HostCreatedConvention(Of THost), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated<THost>(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Hosting.HostCreatedConvention<THost>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated(Of THost)(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Hosting.HostCreatedConvention(Of THost), Integer)
  nameWithType: ConventionHostBuilderExtensions.OnHostCreated<THost>(ConventionContextBuilder, HostCreatedConvention<THost>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.OnHostCreated(Of THost)(ConventionContextBuilder, HostCreatedConvention(Of THost), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{``0},System.Int32)
  name: OnHostCreated<THost>(ConventionContextBuilder, Action<THost>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_OnHostCreated__1_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action___0__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{``0},System.Int32)
  name.vb: OnHostCreated(Of THost)(ConventionContextBuilder, Action(Of THost), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated<THost>(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<THost>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated(Of THost)(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of THost), Integer)
  nameWithType: ConventionHostBuilderExtensions.OnHostCreated<THost>(ConventionContextBuilder, Action<THost>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.OnHostCreated(Of THost)(ConventionContextBuilder, Action(Of THost), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name: OnHostCreated<THost>(ConventionContextBuilder, Func<THost, CancellationToken, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_OnHostCreated__1_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func___0_System_Threading_CancellationToken_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: OnHostCreated(Of THost)(ConventionContextBuilder, Func(Of THost, CancellationToken, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated<THost>(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<THost, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated(Of THost)(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of THost, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: ConventionHostBuilderExtensions.OnHostCreated<THost>(ConventionContextBuilder, Func<THost, CancellationToken, ValueTask>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.OnHostCreated(Of THost)(ConventionContextBuilder, Func(Of THost, CancellationToken, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{``0,System.Threading.Tasks.ValueTask},System.Int32)
  name: OnHostCreated<THost>(ConventionContextBuilder, Func<THost, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_OnHostCreated__1_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func___0_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{``0,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: OnHostCreated(Of THost)(ConventionContextBuilder, Func(Of THost, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated<THost>(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<THost, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.OnHostCreated(Of THost)(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of THost, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: ConventionHostBuilderExtensions.OnHostCreated<THost>(ConventionContextBuilder, Func<THost, ValueTask>, int)
  nameWithType.vb: ConventionHostBuilderExtensions.OnHostCreated(Of THost)(ConventionContextBuilder, Func(Of THost, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Set(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Type,System.Object)
  name: Set(ConventionContextBuilder, Type, object)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_Set_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Type_System_Object_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Set(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Type,System.Object)
  name.vb: Set(ConventionContextBuilder, Type, Object)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Set(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Type, object)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Set(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Type, Object)
  nameWithType: ConventionHostBuilderExtensions.Set(ConventionContextBuilder, Type, object)
  nameWithType.vb: ConventionHostBuilderExtensions.Set(ConventionContextBuilder, Type, Object)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Set*
  name: Set
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_Set_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Set
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Set
  nameWithType: ConventionHostBuilderExtensions.Set
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Set``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.String,``0)
  name: Set<T>(ConventionContextBuilder, string, T)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_Set__1_Rocket_Surgery_Conventions_ConventionContextBuilder_System_String___0_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Set``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.String,``0)
  name.vb: Set(Of T)(ConventionContextBuilder, String, T)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Set<T>(Rocket.Surgery.Conventions.ConventionContextBuilder, string, T)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Set(Of T)(Rocket.Surgery.Conventions.ConventionContextBuilder, String, T)
  nameWithType: ConventionHostBuilderExtensions.Set<T>(ConventionContextBuilder, string, T)
  nameWithType.vb: ConventionHostBuilderExtensions.Set(Of T)(ConventionContextBuilder, String, T)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Set``1(Rocket.Surgery.Conventions.ConventionContextBuilder,``0)
  name: Set<T>(ConventionContextBuilder, T)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_Set__1_Rocket_Surgery_Conventions_ConventionContextBuilder___0_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Set``1(Rocket.Surgery.Conventions.ConventionContextBuilder,``0)
  name.vb: Set(Of T)(ConventionContextBuilder, T)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Set<T>(Rocket.Surgery.Conventions.ConventionContextBuilder, T)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.Set(Of T)(Rocket.Surgery.Conventions.ConventionContextBuilder, T)
  nameWithType: ConventionHostBuilderExtensions.Set<T>(ConventionContextBuilder, T)
  nameWithType.vb: ConventionHostBuilderExtensions.Set(Of T)(ConventionContextBuilder, T)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.SetupConvention(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Setup.SetupAsyncConvention,System.Int32)
  name: SetupConvention(ConventionContextBuilder, SetupAsyncConvention, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_SetupConvention_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Conventions_Setup_SetupAsyncConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.SetupConvention(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Setup.SetupAsyncConvention,System.Int32)
  name.vb: SetupConvention(ConventionContextBuilder, SetupAsyncConvention, Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.SetupConvention(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Setup.SetupAsyncConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.SetupConvention(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Setup.SetupAsyncConvention, Integer)
  nameWithType: ConventionHostBuilderExtensions.SetupConvention(ConventionContextBuilder, SetupAsyncConvention, int)
  nameWithType.vb: ConventionHostBuilderExtensions.SetupConvention(ConventionContextBuilder, SetupAsyncConvention, Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.SetupConvention(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Setup.SetupConvention,System.Int32)
  name: SetupConvention(ConventionContextBuilder, SetupConvention, int)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_SetupConvention_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Conventions_Setup_SetupConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.SetupConvention(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.Setup.SetupConvention,System.Int32)
  name.vb: SetupConvention(ConventionContextBuilder, SetupConvention, Integer)
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.SetupConvention(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Setup.SetupConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.SetupConvention(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.Setup.SetupConvention, Integer)
  nameWithType: ConventionHostBuilderExtensions.SetupConvention(ConventionContextBuilder, SetupConvention, int)
  nameWithType.vb: ConventionHostBuilderExtensions.SetupConvention(ConventionContextBuilder, SetupConvention, Integer)
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.SetupConvention*
  name: SetupConvention
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_SetupConvention_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.SetupConvention
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.SetupConvention
  nameWithType: ConventionHostBuilderExtensions.SetupConvention
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.UseServiceProviderFactory*
  name: UseServiceProviderFactory
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_UseServiceProviderFactory_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.UseServiceProviderFactory
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.UseServiceProviderFactory
  nameWithType: ConventionHostBuilderExtensions.UseServiceProviderFactory
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.UseServiceProviderFactory``1(Rocket.Surgery.Conventions.ConventionContextBuilder,Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0})
  name: UseServiceProviderFactory<TContainerBuilder>(ConventionContextBuilder, IServiceProviderFactory<TContainerBuilder>)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_UseServiceProviderFactory__1_Rocket_Surgery_Conventions_ConventionContextBuilder_Microsoft_Extensions_DependencyInjection_IServiceProviderFactory___0__
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.UseServiceProviderFactory``1(Rocket.Surgery.Conventions.ConventionContextBuilder,Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0})
  name.vb: UseServiceProviderFactory(Of TContainerBuilder)(ConventionContextBuilder, IServiceProviderFactory(Of TContainerBuilder))
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.UseServiceProviderFactory<TContainerBuilder>(Rocket.Surgery.Conventions.ConventionContextBuilder, Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<TContainerBuilder>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.UseServiceProviderFactory(Of TContainerBuilder)(Rocket.Surgery.Conventions.ConventionContextBuilder, Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of TContainerBuilder))
  nameWithType: ConventionHostBuilderExtensions.UseServiceProviderFactory<TContainerBuilder>(ConventionContextBuilder, IServiceProviderFactory<TContainerBuilder>)
  nameWithType.vb: ConventionHostBuilderExtensions.UseServiceProviderFactory(Of TContainerBuilder)(ConventionContextBuilder, IServiceProviderFactory(Of TContainerBuilder))
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.UseServiceProviderFactory``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask{Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0}}})
  name: UseServiceProviderFactory<TContainerBuilder>(ConventionContextBuilder, Func<IConventionContext, IServiceCollection, CancellationToken, ValueTask<IServiceProviderFactory<TContainerBuilder>>>)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_UseServiceProviderFactory__1_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Threading_CancellationToken_System_Threading_Tasks_ValueTask_Microsoft_Extensions_DependencyInjection_IServiceProviderFactory___0____
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.UseServiceProviderFactory``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask{Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0}}})
  name.vb: UseServiceProviderFactory(Of TContainerBuilder)(ConventionContextBuilder, Func(Of IConventionContext, IServiceCollection, CancellationToken, ValueTask(Of IServiceProviderFactory(Of TContainerBuilder))))
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.UseServiceProviderFactory<TContainerBuilder>(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<TContainerBuilder>>>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.UseServiceProviderFactory(Of TContainerBuilder)(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask(Of Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of TContainerBuilder))))
  nameWithType: ConventionHostBuilderExtensions.UseServiceProviderFactory<TContainerBuilder>(ConventionContextBuilder, Func<IConventionContext, IServiceCollection, CancellationToken, ValueTask<IServiceProviderFactory<TContainerBuilder>>>)
  nameWithType.vb: ConventionHostBuilderExtensions.UseServiceProviderFactory(Of TContainerBuilder)(ConventionContextBuilder, Func(Of IConventionContext, IServiceCollection, CancellationToken, ValueTask(Of IServiceProviderFactory(Of TContainerBuilder))))
- uid: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.UseServiceProviderFactory``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.Tasks.ValueTask{Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0}}})
  name: UseServiceProviderFactory<TContainerBuilder>(ConventionContextBuilder, Func<IConventionContext, IServiceCollection, ValueTask<IServiceProviderFactory<TContainerBuilder>>>)
  href: api/Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.html#Rocket_Surgery_Conventions_ConventionHostBuilderExtensions_UseServiceProviderFactory__1_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Threading_Tasks_ValueTask_Microsoft_Extensions_DependencyInjection_IServiceProviderFactory___0____
  commentId: M:Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.UseServiceProviderFactory``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.Tasks.ValueTask{Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0}}})
  name.vb: UseServiceProviderFactory(Of TContainerBuilder)(ConventionContextBuilder, Func(Of IConventionContext, IServiceCollection, ValueTask(Of IServiceProviderFactory(Of TContainerBuilder))))
  fullName: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.UseServiceProviderFactory<TContainerBuilder>(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Threading.Tasks.ValueTask<Microsoft.Extensions.DependencyInjection.IServiceProviderFactory<TContainerBuilder>>>)
  fullName.vb: Rocket.Surgery.Conventions.ConventionHostBuilderExtensions.UseServiceProviderFactory(Of TContainerBuilder)(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Threading.Tasks.ValueTask(Of Microsoft.Extensions.DependencyInjection.IServiceProviderFactory(Of TContainerBuilder))))
  nameWithType: ConventionHostBuilderExtensions.UseServiceProviderFactory<TContainerBuilder>(ConventionContextBuilder, Func<IConventionContext, IServiceCollection, ValueTask<IServiceProviderFactory<TContainerBuilder>>>)
  nameWithType.vb: ConventionHostBuilderExtensions.UseServiceProviderFactory(Of TContainerBuilder)(ConventionContextBuilder, Func(Of IConventionContext, IServiceCollection, ValueTask(Of IServiceProviderFactory(Of TContainerBuilder))))
- uid: Rocket.Surgery.Conventions.ConventionMetadata
  name: ConventionMetadata
  href: api/Rocket.Surgery.Conventions.ConventionMetadata.html
  commentId: T:Rocket.Surgery.Conventions.ConventionMetadata
  fullName: Rocket.Surgery.Conventions.ConventionMetadata
  nameWithType: ConventionMetadata
- uid: Rocket.Surgery.Conventions.ConventionMetadata.#ctor(Rocket.Surgery.Conventions.IConvention,Rocket.Surgery.Conventions.HostType)
  name: ConventionMetadata(IConvention, HostType)
  href: api/Rocket.Surgery.Conventions.ConventionMetadata.html#Rocket_Surgery_Conventions_ConventionMetadata__ctor_Rocket_Surgery_Conventions_IConvention_Rocket_Surgery_Conventions_HostType_
  commentId: M:Rocket.Surgery.Conventions.ConventionMetadata.#ctor(Rocket.Surgery.Conventions.IConvention,Rocket.Surgery.Conventions.HostType)
  name.vb: New(IConvention, HostType)
  fullName: Rocket.Surgery.Conventions.ConventionMetadata.ConventionMetadata(Rocket.Surgery.Conventions.IConvention, Rocket.Surgery.Conventions.HostType)
  fullName.vb: Rocket.Surgery.Conventions.ConventionMetadata.New(Rocket.Surgery.Conventions.IConvention, Rocket.Surgery.Conventions.HostType)
  nameWithType: ConventionMetadata.ConventionMetadata(IConvention, HostType)
  nameWithType.vb: ConventionMetadata.New(IConvention, HostType)
- uid: Rocket.Surgery.Conventions.ConventionMetadata.#ctor*
  name: ConventionMetadata
  href: api/Rocket.Surgery.Conventions.ConventionMetadata.html#Rocket_Surgery_Conventions_ConventionMetadata__ctor_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionMetadata.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Rocket.Surgery.Conventions.ConventionMetadata.ConventionMetadata
  fullName.vb: Rocket.Surgery.Conventions.ConventionMetadata.New
  nameWithType: ConventionMetadata.ConventionMetadata
  nameWithType.vb: ConventionMetadata.New
- uid: Rocket.Surgery.Conventions.ConventionMetadata.Convention
  name: Convention
  href: api/Rocket.Surgery.Conventions.ConventionMetadata.html#Rocket_Surgery_Conventions_ConventionMetadata_Convention
  commentId: P:Rocket.Surgery.Conventions.ConventionMetadata.Convention
  fullName: Rocket.Surgery.Conventions.ConventionMetadata.Convention
  nameWithType: ConventionMetadata.Convention
- uid: Rocket.Surgery.Conventions.ConventionMetadata.Convention*
  name: Convention
  href: api/Rocket.Surgery.Conventions.ConventionMetadata.html#Rocket_Surgery_Conventions_ConventionMetadata_Convention_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionMetadata.Convention
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionMetadata.Convention
  nameWithType: ConventionMetadata.Convention
- uid: Rocket.Surgery.Conventions.ConventionMetadata.Dependencies
  name: Dependencies
  href: api/Rocket.Surgery.Conventions.ConventionMetadata.html#Rocket_Surgery_Conventions_ConventionMetadata_Dependencies
  commentId: P:Rocket.Surgery.Conventions.ConventionMetadata.Dependencies
  fullName: Rocket.Surgery.Conventions.ConventionMetadata.Dependencies
  nameWithType: ConventionMetadata.Dependencies
- uid: Rocket.Surgery.Conventions.ConventionMetadata.Dependencies*
  name: Dependencies
  href: api/Rocket.Surgery.Conventions.ConventionMetadata.html#Rocket_Surgery_Conventions_ConventionMetadata_Dependencies_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionMetadata.Dependencies
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionMetadata.Dependencies
  nameWithType: ConventionMetadata.Dependencies
- uid: Rocket.Surgery.Conventions.ConventionMetadata.HostType
  name: HostType
  href: api/Rocket.Surgery.Conventions.ConventionMetadata.html#Rocket_Surgery_Conventions_ConventionMetadata_HostType
  commentId: P:Rocket.Surgery.Conventions.ConventionMetadata.HostType
  fullName: Rocket.Surgery.Conventions.ConventionMetadata.HostType
  nameWithType: ConventionMetadata.HostType
- uid: Rocket.Surgery.Conventions.ConventionMetadata.HostType*
  name: HostType
  href: api/Rocket.Surgery.Conventions.ConventionMetadata.html#Rocket_Surgery_Conventions_ConventionMetadata_HostType_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionMetadata.HostType
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionMetadata.HostType
  nameWithType: ConventionMetadata.HostType
- uid: Rocket.Surgery.Conventions.ConventionMetadata.WithDependency(Rocket.Surgery.Conventions.DependencyDirection,System.Type)
  name: WithDependency(DependencyDirection, Type)
  href: api/Rocket.Surgery.Conventions.ConventionMetadata.html#Rocket_Surgery_Conventions_ConventionMetadata_WithDependency_Rocket_Surgery_Conventions_DependencyDirection_System_Type_
  commentId: M:Rocket.Surgery.Conventions.ConventionMetadata.WithDependency(Rocket.Surgery.Conventions.DependencyDirection,System.Type)
  fullName: Rocket.Surgery.Conventions.ConventionMetadata.WithDependency(Rocket.Surgery.Conventions.DependencyDirection, System.Type)
  nameWithType: ConventionMetadata.WithDependency(DependencyDirection, Type)
- uid: Rocket.Surgery.Conventions.ConventionMetadata.WithDependency*
  name: WithDependency
  href: api/Rocket.Surgery.Conventions.ConventionMetadata.html#Rocket_Surgery_Conventions_ConventionMetadata_WithDependency_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionMetadata.WithDependency
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionMetadata.WithDependency
  nameWithType: ConventionMetadata.WithDependency
- uid: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute
  name: ConventionsConfigurationAttribute
  href: api/Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.html
  commentId: T:Rocket.Surgery.Conventions.ConventionsConfigurationAttribute
  fullName: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute
  nameWithType: ConventionsConfigurationAttribute
- uid: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.Assembly
  name: Assembly
  href: api/Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.html#Rocket_Surgery_Conventions_ConventionsConfigurationAttribute_Assembly
  commentId: P:Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.Assembly
  fullName: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.Assembly
  nameWithType: ConventionsConfigurationAttribute.Assembly
- uid: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.Assembly*
  name: Assembly
  href: api/Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.html#Rocket_Surgery_Conventions_ConventionsConfigurationAttribute_Assembly_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.Assembly
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.Assembly
  nameWithType: ConventionsConfigurationAttribute.Assembly
- uid: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.ClassName
  name: ClassName
  href: api/Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.html#Rocket_Surgery_Conventions_ConventionsConfigurationAttribute_ClassName
  commentId: P:Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.ClassName
  fullName: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.ClassName
  nameWithType: ConventionsConfigurationAttribute.ClassName
- uid: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.ClassName*
  name: ClassName
  href: api/Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.html#Rocket_Surgery_Conventions_ConventionsConfigurationAttribute_ClassName_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.ClassName
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.ClassName
  nameWithType: ConventionsConfigurationAttribute.ClassName
- uid: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.MethodName
  name: MethodName
  href: api/Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.html#Rocket_Surgery_Conventions_ConventionsConfigurationAttribute_MethodName
  commentId: P:Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.MethodName
  fullName: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.MethodName
  nameWithType: ConventionsConfigurationAttribute.MethodName
- uid: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.MethodName*
  name: MethodName
  href: api/Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.html#Rocket_Surgery_Conventions_ConventionsConfigurationAttribute_MethodName_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.MethodName
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.MethodName
  nameWithType: ConventionsConfigurationAttribute.MethodName
- uid: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.Namespace
  name: Namespace
  href: api/Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.html#Rocket_Surgery_Conventions_ConventionsConfigurationAttribute_Namespace
  commentId: P:Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.Namespace
  fullName: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.Namespace
  nameWithType: ConventionsConfigurationAttribute.Namespace
- uid: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.Namespace*
  name: Namespace
  href: api/Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.html#Rocket_Surgery_Conventions_ConventionsConfigurationAttribute_Namespace_
  commentId: Overload:Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.Namespace
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ConventionsConfigurationAttribute.Namespace
  nameWithType: ConventionsConfigurationAttribute.Namespace
- uid: Rocket.Surgery.Conventions.DependencyContextConventionContextBuilderExtensions
  name: DependencyContextConventionContextBuilderExtensions
  href: api/Rocket.Surgery.Conventions.DependencyContextConventionContextBuilderExtensions.html
  commentId: T:Rocket.Surgery.Conventions.DependencyContextConventionContextBuilderExtensions
  fullName: Rocket.Surgery.Conventions.DependencyContextConventionContextBuilderExtensions
  nameWithType: DependencyContextConventionContextBuilderExtensions
- uid: Rocket.Surgery.Conventions.DependencyContextConventionContextBuilderExtensions.UseDependencyContext(Rocket.Surgery.Conventions.ConventionContextBuilder,Microsoft.Extensions.DependencyModel.DependencyContext)
  name: UseDependencyContext(ConventionContextBuilder, DependencyContext)
  href: api/Rocket.Surgery.Conventions.DependencyContextConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_DependencyContextConventionContextBuilderExtensions_UseDependencyContext_Rocket_Surgery_Conventions_ConventionContextBuilder_Microsoft_Extensions_DependencyModel_DependencyContext_
  commentId: M:Rocket.Surgery.Conventions.DependencyContextConventionContextBuilderExtensions.UseDependencyContext(Rocket.Surgery.Conventions.ConventionContextBuilder,Microsoft.Extensions.DependencyModel.DependencyContext)
  fullName: Rocket.Surgery.Conventions.DependencyContextConventionContextBuilderExtensions.UseDependencyContext(Rocket.Surgery.Conventions.ConventionContextBuilder, Microsoft.Extensions.DependencyModel.DependencyContext)
  nameWithType: DependencyContextConventionContextBuilderExtensions.UseDependencyContext(ConventionContextBuilder, DependencyContext)
- uid: Rocket.Surgery.Conventions.DependencyContextConventionContextBuilderExtensions.UseDependencyContext*
  name: UseDependencyContext
  href: api/Rocket.Surgery.Conventions.DependencyContextConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_DependencyContextConventionContextBuilderExtensions_UseDependencyContext_
  commentId: Overload:Rocket.Surgery.Conventions.DependencyContextConventionContextBuilderExtensions.UseDependencyContext
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.DependencyContextConventionContextBuilderExtensions.UseDependencyContext
  nameWithType: DependencyContextConventionContextBuilderExtensions.UseDependencyContext
- uid: Rocket.Surgery.Conventions.DependencyContextConventionFactory
  name: DependencyContextConventionFactory
  href: api/Rocket.Surgery.Conventions.DependencyContextConventionFactory.html
  commentId: T:Rocket.Surgery.Conventions.DependencyContextConventionFactory
  fullName: Rocket.Surgery.Conventions.DependencyContextConventionFactory
  nameWithType: DependencyContextConventionFactory
- uid: Rocket.Surgery.Conventions.DependencyContextConventionFactory.#ctor(Microsoft.Extensions.DependencyModel.DependencyContext)
  name: DependencyContextConventionFactory(DependencyContext)
  href: api/Rocket.Surgery.Conventions.DependencyContextConventionFactory.html#Rocket_Surgery_Conventions_DependencyContextConventionFactory__ctor_Microsoft_Extensions_DependencyModel_DependencyContext_
  commentId: M:Rocket.Surgery.Conventions.DependencyContextConventionFactory.#ctor(Microsoft.Extensions.DependencyModel.DependencyContext)
  name.vb: New(DependencyContext)
  fullName: Rocket.Surgery.Conventions.DependencyContextConventionFactory.DependencyContextConventionFactory(Microsoft.Extensions.DependencyModel.DependencyContext)
  fullName.vb: Rocket.Surgery.Conventions.DependencyContextConventionFactory.New(Microsoft.Extensions.DependencyModel.DependencyContext)
  nameWithType: DependencyContextConventionFactory.DependencyContextConventionFactory(DependencyContext)
  nameWithType.vb: DependencyContextConventionFactory.New(DependencyContext)
- uid: Rocket.Surgery.Conventions.DependencyContextConventionFactory.#ctor*
  name: DependencyContextConventionFactory
  href: api/Rocket.Surgery.Conventions.DependencyContextConventionFactory.html#Rocket_Surgery_Conventions_DependencyContextConventionFactory__ctor_
  commentId: Overload:Rocket.Surgery.Conventions.DependencyContextConventionFactory.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Rocket.Surgery.Conventions.DependencyContextConventionFactory.DependencyContextConventionFactory
  fullName.vb: Rocket.Surgery.Conventions.DependencyContextConventionFactory.New
  nameWithType: DependencyContextConventionFactory.DependencyContextConventionFactory
  nameWithType.vb: DependencyContextConventionFactory.New
- uid: Rocket.Surgery.Conventions.DependencyContextConventionFactory.CreateAssemblyProvider(Rocket.Surgery.Conventions.ConventionContextBuilder)
  name: CreateAssemblyProvider(ConventionContextBuilder)
  href: api/Rocket.Surgery.Conventions.DependencyContextConventionFactory.html#Rocket_Surgery_Conventions_DependencyContextConventionFactory_CreateAssemblyProvider_Rocket_Surgery_Conventions_ConventionContextBuilder_
  commentId: M:Rocket.Surgery.Conventions.DependencyContextConventionFactory.CreateAssemblyProvider(Rocket.Surgery.Conventions.ConventionContextBuilder)
  fullName: Rocket.Surgery.Conventions.DependencyContextConventionFactory.CreateAssemblyProvider(Rocket.Surgery.Conventions.ConventionContextBuilder)
  nameWithType: DependencyContextConventionFactory.CreateAssemblyProvider(ConventionContextBuilder)
- uid: Rocket.Surgery.Conventions.DependencyContextConventionFactory.CreateAssemblyProvider*
  name: CreateAssemblyProvider
  href: api/Rocket.Surgery.Conventions.DependencyContextConventionFactory.html#Rocket_Surgery_Conventions_DependencyContextConventionFactory_CreateAssemblyProvider_
  commentId: Overload:Rocket.Surgery.Conventions.DependencyContextConventionFactory.CreateAssemblyProvider
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.DependencyContextConventionFactory.CreateAssemblyProvider
  nameWithType: DependencyContextConventionFactory.CreateAssemblyProvider
- uid: Rocket.Surgery.Conventions.DependencyDirection
  name: DependencyDirection
  href: api/Rocket.Surgery.Conventions.DependencyDirection.html
  commentId: T:Rocket.Surgery.Conventions.DependencyDirection
  fullName: Rocket.Surgery.Conventions.DependencyDirection
  nameWithType: DependencyDirection
- uid: Rocket.Surgery.Conventions.DependencyDirection.DependentOf
  name: DependentOf
  href: api/Rocket.Surgery.Conventions.DependencyDirection.html#Rocket_Surgery_Conventions_DependencyDirection_DependentOf
  commentId: F:Rocket.Surgery.Conventions.DependencyDirection.DependentOf
  fullName: Rocket.Surgery.Conventions.DependencyDirection.DependentOf
  nameWithType: DependencyDirection.DependentOf
- uid: Rocket.Surgery.Conventions.DependencyDirection.DependsOn
  name: DependsOn
  href: api/Rocket.Surgery.Conventions.DependencyDirection.html#Rocket_Surgery_Conventions_DependencyDirection_DependsOn
  commentId: F:Rocket.Surgery.Conventions.DependencyDirection.DependsOn
  fullName: Rocket.Surgery.Conventions.DependencyDirection.DependsOn
  nameWithType: DependencyDirection.DependsOn
- uid: Rocket.Surgery.Conventions.DependencyInjection
  name: Rocket.Surgery.Conventions.DependencyInjection
  href: api/Rocket.Surgery.Conventions.DependencyInjection.html
  commentId: N:Rocket.Surgery.Conventions.DependencyInjection
  fullName: Rocket.Surgery.Conventions.DependencyInjection
  nameWithType: Rocket.Surgery.Conventions.DependencyInjection
- uid: Rocket.Surgery.Conventions.DependencyInjection.IServiceAsyncConvention
  name: IServiceAsyncConvention
  href: api/Rocket.Surgery.Conventions.DependencyInjection.IServiceAsyncConvention.html
  commentId: T:Rocket.Surgery.Conventions.DependencyInjection.IServiceAsyncConvention
  fullName: Rocket.Surgery.Conventions.DependencyInjection.IServiceAsyncConvention
  nameWithType: IServiceAsyncConvention
- uid: Rocket.Surgery.Conventions.DependencyInjection.IServiceAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.CancellationToken)
  name: Register(IConventionContext, IConfiguration, IServiceCollection, CancellationToken)
  href: api/Rocket.Surgery.Conventions.DependencyInjection.IServiceAsyncConvention.html#Rocket_Surgery_Conventions_DependencyInjection_IServiceAsyncConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.DependencyInjection.IServiceAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Conventions.DependencyInjection.IServiceAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Threading.CancellationToken)
  nameWithType: IServiceAsyncConvention.Register(IConventionContext, IConfiguration, IServiceCollection, CancellationToken)
- uid: Rocket.Surgery.Conventions.DependencyInjection.IServiceAsyncConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Conventions.DependencyInjection.IServiceAsyncConvention.html#Rocket_Surgery_Conventions_DependencyInjection_IServiceAsyncConvention_Register_
  commentId: Overload:Rocket.Surgery.Conventions.DependencyInjection.IServiceAsyncConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.DependencyInjection.IServiceAsyncConvention.Register
  nameWithType: IServiceAsyncConvention.Register
- uid: Rocket.Surgery.Conventions.DependencyInjection.IServiceConvention
  name: IServiceConvention
  href: api/Rocket.Surgery.Conventions.DependencyInjection.IServiceConvention.html
  commentId: T:Rocket.Surgery.Conventions.DependencyInjection.IServiceConvention
  fullName: Rocket.Surgery.Conventions.DependencyInjection.IServiceConvention
  nameWithType: IServiceConvention
- uid: Rocket.Surgery.Conventions.DependencyInjection.IServiceConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: Register(IConventionContext, IConfiguration, IServiceCollection)
  href: api/Rocket.Surgery.Conventions.DependencyInjection.IServiceConvention.html#Rocket_Surgery_Conventions_DependencyInjection_IServiceConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Rocket.Surgery.Conventions.DependencyInjection.IServiceConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Rocket.Surgery.Conventions.DependencyInjection.IServiceConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: IServiceConvention.Register(IConventionContext, IConfiguration, IServiceCollection)
- uid: Rocket.Surgery.Conventions.DependencyInjection.IServiceConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Conventions.DependencyInjection.IServiceConvention.html#Rocket_Surgery_Conventions_DependencyInjection_IServiceConvention_Register_
  commentId: Overload:Rocket.Surgery.Conventions.DependencyInjection.IServiceConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.DependencyInjection.IServiceConvention.Register
  nameWithType: IServiceConvention.Register
- uid: Rocket.Surgery.Conventions.DependencyInjection.ServiceAsyncConvention
  name: ServiceAsyncConvention
  href: api/Rocket.Surgery.Conventions.DependencyInjection.ServiceAsyncConvention.html
  commentId: T:Rocket.Surgery.Conventions.DependencyInjection.ServiceAsyncConvention
  fullName: Rocket.Surgery.Conventions.DependencyInjection.ServiceAsyncConvention
  nameWithType: ServiceAsyncConvention
- uid: Rocket.Surgery.Conventions.DependencyInjection.ServiceConvention
  name: ServiceConvention
  href: api/Rocket.Surgery.Conventions.DependencyInjection.ServiceConvention.html
  commentId: T:Rocket.Surgery.Conventions.DependencyInjection.ServiceConvention
  fullName: Rocket.Surgery.Conventions.DependencyInjection.ServiceConvention
  nameWithType: ServiceConvention
- uid: Rocket.Surgery.Conventions.DependentOfConventionAttribute
  name: DependentOfConventionAttribute
  href: api/Rocket.Surgery.Conventions.DependentOfConventionAttribute.html
  commentId: T:Rocket.Surgery.Conventions.DependentOfConventionAttribute
  fullName: Rocket.Surgery.Conventions.DependentOfConventionAttribute
  nameWithType: DependentOfConventionAttribute
- uid: Rocket.Surgery.Conventions.DependentOfConventionAttribute.#ctor(System.Type)
  name: DependentOfConventionAttribute(Type)
  href: api/Rocket.Surgery.Conventions.DependentOfConventionAttribute.html#Rocket_Surgery_Conventions_DependentOfConventionAttribute__ctor_System_Type_
  commentId: M:Rocket.Surgery.Conventions.DependentOfConventionAttribute.#ctor(System.Type)
  name.vb: New(Type)
  fullName: Rocket.Surgery.Conventions.DependentOfConventionAttribute.DependentOfConventionAttribute(System.Type)
  fullName.vb: Rocket.Surgery.Conventions.DependentOfConventionAttribute.New(System.Type)
  nameWithType: DependentOfConventionAttribute.DependentOfConventionAttribute(Type)
  nameWithType.vb: DependentOfConventionAttribute.New(Type)
- uid: Rocket.Surgery.Conventions.DependentOfConventionAttribute.#ctor*
  name: DependentOfConventionAttribute
  href: api/Rocket.Surgery.Conventions.DependentOfConventionAttribute.html#Rocket_Surgery_Conventions_DependentOfConventionAttribute__ctor_
  commentId: Overload:Rocket.Surgery.Conventions.DependentOfConventionAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Rocket.Surgery.Conventions.DependentOfConventionAttribute.DependentOfConventionAttribute
  fullName.vb: Rocket.Surgery.Conventions.DependentOfConventionAttribute.New
  nameWithType: DependentOfConventionAttribute.DependentOfConventionAttribute
  nameWithType.vb: DependentOfConventionAttribute.New
- uid: Rocket.Surgery.Conventions.DependentOfConventionAttribute`1
  name: DependentOfConventionAttribute<T>
  href: api/Rocket.Surgery.Conventions.DependentOfConventionAttribute-1.html
  commentId: T:Rocket.Surgery.Conventions.DependentOfConventionAttribute`1
  name.vb: DependentOfConventionAttribute(Of T)
  fullName: Rocket.Surgery.Conventions.DependentOfConventionAttribute<T>
  fullName.vb: Rocket.Surgery.Conventions.DependentOfConventionAttribute(Of T)
  nameWithType: DependentOfConventionAttribute<T>
  nameWithType.vb: DependentOfConventionAttribute(Of T)
- uid: Rocket.Surgery.Conventions.DependsOnConventionAttribute
  name: DependsOnConventionAttribute
  href: api/Rocket.Surgery.Conventions.DependsOnConventionAttribute.html
  commentId: T:Rocket.Surgery.Conventions.DependsOnConventionAttribute
  fullName: Rocket.Surgery.Conventions.DependsOnConventionAttribute
  nameWithType: DependsOnConventionAttribute
- uid: Rocket.Surgery.Conventions.DependsOnConventionAttribute.#ctor(System.Type)
  name: DependsOnConventionAttribute(Type)
  href: api/Rocket.Surgery.Conventions.DependsOnConventionAttribute.html#Rocket_Surgery_Conventions_DependsOnConventionAttribute__ctor_System_Type_
  commentId: M:Rocket.Surgery.Conventions.DependsOnConventionAttribute.#ctor(System.Type)
  name.vb: New(Type)
  fullName: Rocket.Surgery.Conventions.DependsOnConventionAttribute.DependsOnConventionAttribute(System.Type)
  fullName.vb: Rocket.Surgery.Conventions.DependsOnConventionAttribute.New(System.Type)
  nameWithType: DependsOnConventionAttribute.DependsOnConventionAttribute(Type)
  nameWithType.vb: DependsOnConventionAttribute.New(Type)
- uid: Rocket.Surgery.Conventions.DependsOnConventionAttribute.#ctor*
  name: DependsOnConventionAttribute
  href: api/Rocket.Surgery.Conventions.DependsOnConventionAttribute.html#Rocket_Surgery_Conventions_DependsOnConventionAttribute__ctor_
  commentId: Overload:Rocket.Surgery.Conventions.DependsOnConventionAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Rocket.Surgery.Conventions.DependsOnConventionAttribute.DependsOnConventionAttribute
  fullName.vb: Rocket.Surgery.Conventions.DependsOnConventionAttribute.New
  nameWithType: DependsOnConventionAttribute.DependsOnConventionAttribute
  nameWithType.vb: DependsOnConventionAttribute.New
- uid: Rocket.Surgery.Conventions.DependsOnConventionAttribute`1
  name: DependsOnConventionAttribute<T>
  href: api/Rocket.Surgery.Conventions.DependsOnConventionAttribute-1.html
  commentId: T:Rocket.Surgery.Conventions.DependsOnConventionAttribute`1
  name.vb: DependsOnConventionAttribute(Of T)
  fullName: Rocket.Surgery.Conventions.DependsOnConventionAttribute<T>
  fullName.vb: Rocket.Surgery.Conventions.DependsOnConventionAttribute(Of T)
  nameWithType: DependsOnConventionAttribute<T>
  nameWithType.vb: DependsOnConventionAttribute(Of T)
- uid: Rocket.Surgery.Conventions.Diagnostics
  name: Rocket.Surgery.Conventions.Diagnostics
  href: api/Rocket.Surgery.Conventions.Diagnostics.html
  commentId: N:Rocket.Surgery.Conventions.Diagnostics
  fullName: Rocket.Surgery.Conventions.Diagnostics
  nameWithType: Rocket.Surgery.Conventions.Diagnostics
- uid: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger
  name: DiagnosticLogger
  href: api/Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.html
  commentId: T:Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger
  fullName: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger
  nameWithType: DiagnosticLogger
- uid: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.#ctor(System.Diagnostics.DiagnosticSource)
  name: DiagnosticLogger(DiagnosticSource)
  href: api/Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.html#Rocket_Surgery_Conventions_Diagnostics_DiagnosticLogger__ctor_System_Diagnostics_DiagnosticSource_
  commentId: M:Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.#ctor(System.Diagnostics.DiagnosticSource)
  name.vb: New(DiagnosticSource)
  fullName: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.DiagnosticLogger(System.Diagnostics.DiagnosticSource)
  fullName.vb: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.New(System.Diagnostics.DiagnosticSource)
  nameWithType: DiagnosticLogger.DiagnosticLogger(DiagnosticSource)
  nameWithType.vb: DiagnosticLogger.New(DiagnosticSource)
- uid: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.#ctor*
  name: DiagnosticLogger
  href: api/Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.html#Rocket_Surgery_Conventions_Diagnostics_DiagnosticLogger__ctor_
  commentId: Overload:Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.DiagnosticLogger
  fullName.vb: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.New
  nameWithType: DiagnosticLogger.DiagnosticLogger
  nameWithType.vb: DiagnosticLogger.New
- uid: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.BeginScope*
  name: BeginScope
  href: api/Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.html#Rocket_Surgery_Conventions_Diagnostics_DiagnosticLogger_BeginScope_
  commentId: Overload:Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.BeginScope
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.BeginScope
  nameWithType: DiagnosticLogger.BeginScope
- uid: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.BeginScope``1(``0)
  name: BeginScope<TState>(TState)
  href: api/Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.html#Rocket_Surgery_Conventions_Diagnostics_DiagnosticLogger_BeginScope__1___0_
  commentId: M:Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.BeginScope``1(``0)
  name.vb: BeginScope(Of TState)(TState)
  fullName: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.BeginScope<TState>(TState)
  fullName.vb: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.BeginScope(Of TState)(TState)
  nameWithType: DiagnosticLogger.BeginScope<TState>(TState)
  nameWithType.vb: DiagnosticLogger.BeginScope(Of TState)(TState)
- uid: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.DiagnosticSource
  name: DiagnosticSource
  href: api/Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.html#Rocket_Surgery_Conventions_Diagnostics_DiagnosticLogger_DiagnosticSource
  commentId: P:Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.DiagnosticSource
  fullName: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.DiagnosticSource
  nameWithType: DiagnosticLogger.DiagnosticSource
- uid: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.DiagnosticSource*
  name: DiagnosticSource
  href: api/Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.html#Rocket_Surgery_Conventions_Diagnostics_DiagnosticLogger_DiagnosticSource_
  commentId: Overload:Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.DiagnosticSource
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.DiagnosticSource
  nameWithType: DiagnosticLogger.DiagnosticSource
- uid: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  name: IsEnabled(LogLevel)
  href: api/Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.html#Rocket_Surgery_Conventions_Diagnostics_DiagnosticLogger_IsEnabled_Microsoft_Extensions_Logging_LogLevel_
  commentId: M:Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  fullName: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  nameWithType: DiagnosticLogger.IsEnabled(LogLevel)
- uid: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.IsEnabled*
  name: IsEnabled
  href: api/Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.html#Rocket_Surgery_Conventions_Diagnostics_DiagnosticLogger_IsEnabled_
  commentId: Overload:Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.IsEnabled
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.IsEnabled
  nameWithType: DiagnosticLogger.IsEnabled
- uid: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.Log*
  name: Log
  href: api/Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.html#Rocket_Surgery_Conventions_Diagnostics_DiagnosticLogger_Log_
  commentId: Overload:Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.Log
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.Log
  nameWithType: DiagnosticLogger.Log
- uid: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  name: Log<TState>(LogLevel, EventId, TState, Exception?, Func<TState, Exception?, string>)
  href: api/Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.html#Rocket_Surgery_Conventions_Diagnostics_DiagnosticLogger_Log__1_Microsoft_Extensions_Logging_LogLevel_Microsoft_Extensions_Logging_EventId___0_System_Exception_System_Func___0_System_Exception_System_String__
  commentId: M:Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  name.vb: Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  fullName: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.Log<TState>(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception?, System.Func<TState, System.Exception?, string>)
  fullName.vb: Rocket.Surgery.Conventions.Diagnostics.DiagnosticLogger.Log(Of TState)(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func(Of TState, System.Exception, String))
  nameWithType: DiagnosticLogger.Log<TState>(LogLevel, EventId, TState, Exception?, Func<TState, Exception?, string>)
  nameWithType.vb: DiagnosticLogger.Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
- uid: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions
  name: DistributedApplicationConventionExtensions
  href: api/Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.html
  commentId: T:Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions
  fullName: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions
  nameWithType: DistributedApplicationConventionExtensions
- uid: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Aspire.Hosting.DistributedApplicationAsyncConvention,System.Int32)
  name: ConfigureDistributedApplication(ConventionContextBuilder, DistributedApplicationAsyncConvention, int)
  href: api/Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.html#Rocket_Surgery_Conventions_DistributedApplicationConventionExtensions_ConfigureDistributedApplication_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Aspire_Hosting_DistributedApplicationAsyncConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Aspire.Hosting.DistributedApplicationAsyncConvention,System.Int32)
  name.vb: ConfigureDistributedApplication(ConventionContextBuilder, DistributedApplicationAsyncConvention, Integer)
  fullName: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Aspire.Hosting.DistributedApplicationAsyncConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Aspire.Hosting.DistributedApplicationAsyncConvention, Integer)
  nameWithType: DistributedApplicationConventionExtensions.ConfigureDistributedApplication(ConventionContextBuilder, DistributedApplicationAsyncConvention, int)
  nameWithType.vb: DistributedApplicationConventionExtensions.ConfigureDistributedApplication(ConventionContextBuilder, DistributedApplicationAsyncConvention, Integer)
- uid: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Aspire.Hosting.DistributedApplicationConvention,System.Int32)
  name: ConfigureDistributedApplication(ConventionContextBuilder, DistributedApplicationConvention, int)
  href: api/Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.html#Rocket_Surgery_Conventions_DistributedApplicationConventionExtensions_ConfigureDistributedApplication_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Aspire_Hosting_DistributedApplicationConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Aspire.Hosting.DistributedApplicationConvention,System.Int32)
  name.vb: ConfigureDistributedApplication(ConventionContextBuilder, DistributedApplicationConvention, Integer)
  fullName: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Aspire.Hosting.DistributedApplicationConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Aspire.Hosting.DistributedApplicationConvention, Integer)
  nameWithType: DistributedApplicationConventionExtensions.ConfigureDistributedApplication(ConventionContextBuilder, DistributedApplicationConvention, int)
  nameWithType.vb: DistributedApplicationConventionExtensions.ConfigureDistributedApplication(ConventionContextBuilder, DistributedApplicationConvention, Integer)
- uid: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Aspire.Hosting.IDistributedApplicationBuilder},System.Int32)
  name: ConfigureDistributedApplication(ConventionContextBuilder, Action<IDistributedApplicationBuilder>, int)
  href: api/Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.html#Rocket_Surgery_Conventions_DistributedApplicationConventionExtensions_ConfigureDistributedApplication_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_Aspire_Hosting_IDistributedApplicationBuilder__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Aspire.Hosting.IDistributedApplicationBuilder},System.Int32)
  name.vb: ConfigureDistributedApplication(ConventionContextBuilder, Action(Of IDistributedApplicationBuilder), Integer)
  fullName: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<Aspire.Hosting.IDistributedApplicationBuilder>, int)
  fullName.vb: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of Aspire.Hosting.IDistributedApplicationBuilder), Integer)
  nameWithType: DistributedApplicationConventionExtensions.ConfigureDistributedApplication(ConventionContextBuilder, Action<IDistributedApplicationBuilder>, int)
  nameWithType.vb: DistributedApplicationConventionExtensions.ConfigureDistributedApplication(ConventionContextBuilder, Action(Of IDistributedApplicationBuilder), Integer)
- uid: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Aspire.Hosting.IDistributedApplicationBuilder,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureDistributedApplication(ConventionContextBuilder, Func<IDistributedApplicationBuilder, CancellationToken, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.html#Rocket_Surgery_Conventions_DistributedApplicationConventionExtensions_ConfigureDistributedApplication_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Aspire_Hosting_IDistributedApplicationBuilder_System_Threading_CancellationToken_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Aspire.Hosting.IDistributedApplicationBuilder,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureDistributedApplication(ConventionContextBuilder, Func(Of IDistributedApplicationBuilder, CancellationToken, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Aspire.Hosting.IDistributedApplicationBuilder, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Aspire.Hosting.IDistributedApplicationBuilder, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: DistributedApplicationConventionExtensions.ConfigureDistributedApplication(ConventionContextBuilder, Func<IDistributedApplicationBuilder, CancellationToken, ValueTask>, int)
  nameWithType.vb: DistributedApplicationConventionExtensions.ConfigureDistributedApplication(ConventionContextBuilder, Func(Of IDistributedApplicationBuilder, CancellationToken, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Aspire.Hosting.IDistributedApplicationBuilder,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureDistributedApplication(ConventionContextBuilder, Func<IDistributedApplicationBuilder, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.html#Rocket_Surgery_Conventions_DistributedApplicationConventionExtensions_ConfigureDistributedApplication_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Aspire_Hosting_IDistributedApplicationBuilder_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Aspire.Hosting.IDistributedApplicationBuilder,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureDistributedApplication(ConventionContextBuilder, Func(Of IDistributedApplicationBuilder, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Aspire.Hosting.IDistributedApplicationBuilder, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Aspire.Hosting.IDistributedApplicationBuilder, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: DistributedApplicationConventionExtensions.ConfigureDistributedApplication(ConventionContextBuilder, Func<IDistributedApplicationBuilder, ValueTask>, int)
  nameWithType.vb: DistributedApplicationConventionExtensions.ConfigureDistributedApplication(ConventionContextBuilder, Func(Of IDistributedApplicationBuilder, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication*
  name: ConfigureDistributedApplication
  href: api/Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.html#Rocket_Surgery_Conventions_DistributedApplicationConventionExtensions_ConfigureDistributedApplication_
  commentId: Overload:Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.DistributedApplicationConventionExtensions.ConfigureDistributedApplication
  nameWithType: DistributedApplicationConventionExtensions.ConfigureDistributedApplication
- uid: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions
  name: DistributedApplicationTestingConventionExtensions
  href: api/Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.html
  commentId: T:Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions
  fullName: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions
  nameWithType: DistributedApplicationTestingConventionExtensions
- uid: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Aspire.Hosting.Testing.DistributedApplicationTestingAsyncConvention,System.Int32)
  name: ConfigureDistributedTestingApplication(ConventionContextBuilder, DistributedApplicationTestingAsyncConvention, int)
  href: api/Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.html#Rocket_Surgery_Conventions_DistributedApplicationTestingConventionExtensions_ConfigureDistributedTestingApplication_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Aspire_Hosting_Testing_DistributedApplicationTestingAsyncConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Aspire.Hosting.Testing.DistributedApplicationTestingAsyncConvention,System.Int32)
  name.vb: ConfigureDistributedTestingApplication(ConventionContextBuilder, DistributedApplicationTestingAsyncConvention, Integer)
  fullName: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Aspire.Hosting.Testing.DistributedApplicationTestingAsyncConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Aspire.Hosting.Testing.DistributedApplicationTestingAsyncConvention, Integer)
  nameWithType: DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(ConventionContextBuilder, DistributedApplicationTestingAsyncConvention, int)
  nameWithType.vb: DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(ConventionContextBuilder, DistributedApplicationTestingAsyncConvention, Integer)
- uid: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Aspire.Hosting.Testing.DistributedApplicationTestingConvention,System.Int32)
  name: ConfigureDistributedTestingApplication(ConventionContextBuilder, DistributedApplicationTestingConvention, int)
  href: api/Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.html#Rocket_Surgery_Conventions_DistributedApplicationTestingConventionExtensions_ConfigureDistributedTestingApplication_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Aspire_Hosting_Testing_DistributedApplicationTestingConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Aspire.Hosting.Testing.DistributedApplicationTestingConvention,System.Int32)
  name.vb: ConfigureDistributedTestingApplication(ConventionContextBuilder, DistributedApplicationTestingConvention, Integer)
  fullName: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Aspire.Hosting.Testing.DistributedApplicationTestingConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Aspire.Hosting.Testing.DistributedApplicationTestingConvention, Integer)
  nameWithType: DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(ConventionContextBuilder, DistributedApplicationTestingConvention, int)
  nameWithType.vb: DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(ConventionContextBuilder, DistributedApplicationTestingConvention, Integer)
- uid: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder},System.Int32)
  name: ConfigureDistributedTestingApplication(ConventionContextBuilder, Action<IDistributedApplicationTestingBuilder>, int)
  href: api/Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.html#Rocket_Surgery_Conventions_DistributedApplicationTestingConventionExtensions_ConfigureDistributedTestingApplication_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_Aspire_Hosting_Testing_IDistributedApplicationTestingBuilder__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder},System.Int32)
  name.vb: ConfigureDistributedTestingApplication(ConventionContextBuilder, Action(Of IDistributedApplicationTestingBuilder), Integer)
  fullName: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder>, int)
  fullName.vb: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder), Integer)
  nameWithType: DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(ConventionContextBuilder, Action<IDistributedApplicationTestingBuilder>, int)
  nameWithType.vb: DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(ConventionContextBuilder, Action(Of IDistributedApplicationTestingBuilder), Integer)
- uid: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureDistributedTestingApplication(ConventionContextBuilder, Func<IDistributedApplicationTestingBuilder, CancellationToken, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.html#Rocket_Surgery_Conventions_DistributedApplicationTestingConventionExtensions_ConfigureDistributedTestingApplication_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Aspire_Hosting_Testing_IDistributedApplicationTestingBuilder_System_Threading_CancellationToken_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureDistributedTestingApplication(ConventionContextBuilder, Func(Of IDistributedApplicationTestingBuilder, CancellationToken, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(ConventionContextBuilder, Func<IDistributedApplicationTestingBuilder, CancellationToken, ValueTask>, int)
  nameWithType.vb: DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(ConventionContextBuilder, Func(Of IDistributedApplicationTestingBuilder, CancellationToken, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureDistributedTestingApplication(ConventionContextBuilder, Func<IDistributedApplicationTestingBuilder, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.html#Rocket_Surgery_Conventions_DistributedApplicationTestingConventionExtensions_ConfigureDistributedTestingApplication_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Aspire_Hosting_Testing_IDistributedApplicationTestingBuilder_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureDistributedTestingApplication(ConventionContextBuilder, Func(Of IDistributedApplicationTestingBuilder, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(ConventionContextBuilder, Func<IDistributedApplicationTestingBuilder, ValueTask>, int)
  nameWithType.vb: DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication(ConventionContextBuilder, Func(Of IDistributedApplicationTestingBuilder, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication*
  name: ConfigureDistributedTestingApplication
  href: api/Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.html#Rocket_Surgery_Conventions_DistributedApplicationTestingConventionExtensions_ConfigureDistributedTestingApplication_
  commentId: Overload:Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication
  nameWithType: DistributedApplicationTestingConventionExtensions.ConfigureDistributedTestingApplication
- uid: Rocket.Surgery.Conventions.DryIoc
  name: Rocket.Surgery.Conventions.DryIoc
  href: api/Rocket.Surgery.Conventions.DryIoc.html
  commentId: N:Rocket.Surgery.Conventions.DryIoc
  fullName: Rocket.Surgery.Conventions.DryIoc
  nameWithType: Rocket.Surgery.Conventions.DryIoc
- uid: Rocket.Surgery.Conventions.DryIoc.DryIocAsyncConvention
  name: DryIocAsyncConvention
  href: api/Rocket.Surgery.Conventions.DryIoc.DryIocAsyncConvention.html
  commentId: T:Rocket.Surgery.Conventions.DryIoc.DryIocAsyncConvention
  fullName: Rocket.Surgery.Conventions.DryIoc.DryIocAsyncConvention
  nameWithType: DryIocAsyncConvention
- uid: Rocket.Surgery.Conventions.DryIoc.DryIocConvention
  name: DryIocConvention
  href: api/Rocket.Surgery.Conventions.DryIoc.DryIocConvention.html
  commentId: T:Rocket.Surgery.Conventions.DryIoc.DryIocConvention
  fullName: Rocket.Surgery.Conventions.DryIoc.DryIocConvention
  nameWithType: DryIocConvention
- uid: Rocket.Surgery.Conventions.DryIoc.DryIocExtensions
  name: DryIocExtensions
  href: api/Rocket.Surgery.Conventions.DryIoc.DryIocExtensions.html
  commentId: T:Rocket.Surgery.Conventions.DryIoc.DryIocExtensions
  fullName: Rocket.Surgery.Conventions.DryIoc.DryIocExtensions
  nameWithType: DryIocExtensions
- uid: Rocket.Surgery.Conventions.DryIoc.DryIocExtensions.ApplyConventionsAsync(DryIoc.IContainer,Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.CancellationToken)
  name: ApplyConventionsAsync(IContainer, IConventionContext, IServiceCollection, CancellationToken)
  href: api/Rocket.Surgery.Conventions.DryIoc.DryIocExtensions.html#Rocket_Surgery_Conventions_DryIoc_DryIocExtensions_ApplyConventionsAsync_DryIoc_IContainer_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.DryIoc.DryIocExtensions.ApplyConventionsAsync(DryIoc.IContainer,Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Conventions.DryIoc.DryIocExtensions.ApplyConventionsAsync(DryIoc.IContainer, Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Threading.CancellationToken)
  nameWithType: DryIocExtensions.ApplyConventionsAsync(IContainer, IConventionContext, IServiceCollection, CancellationToken)
- uid: Rocket.Surgery.Conventions.DryIoc.DryIocExtensions.ApplyConventionsAsync*
  name: ApplyConventionsAsync
  href: api/Rocket.Surgery.Conventions.DryIoc.DryIocExtensions.html#Rocket_Surgery_Conventions_DryIoc_DryIocExtensions_ApplyConventionsAsync_
  commentId: Overload:Rocket.Surgery.Conventions.DryIoc.DryIocExtensions.ApplyConventionsAsync
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.DryIoc.DryIocExtensions.ApplyConventionsAsync
  nameWithType: DryIocExtensions.ApplyConventionsAsync
- uid: Rocket.Surgery.Conventions.DryIoc.DryIocOptions
  name: DryIocOptions
  href: api/Rocket.Surgery.Conventions.DryIoc.DryIocOptions.html
  commentId: T:Rocket.Surgery.Conventions.DryIoc.DryIocOptions
  fullName: Rocket.Surgery.Conventions.DryIoc.DryIocOptions
  nameWithType: DryIocOptions
- uid: Rocket.Surgery.Conventions.DryIoc.DryIocOptions.NoMoreRegistrationAllowed
  name: NoMoreRegistrationAllowed
  href: api/Rocket.Surgery.Conventions.DryIoc.DryIocOptions.html#Rocket_Surgery_Conventions_DryIoc_DryIocOptions_NoMoreRegistrationAllowed
  commentId: P:Rocket.Surgery.Conventions.DryIoc.DryIocOptions.NoMoreRegistrationAllowed
  fullName: Rocket.Surgery.Conventions.DryIoc.DryIocOptions.NoMoreRegistrationAllowed
  nameWithType: DryIocOptions.NoMoreRegistrationAllowed
- uid: Rocket.Surgery.Conventions.DryIoc.DryIocOptions.NoMoreRegistrationAllowed*
  name: NoMoreRegistrationAllowed
  href: api/Rocket.Surgery.Conventions.DryIoc.DryIocOptions.html#Rocket_Surgery_Conventions_DryIoc_DryIocOptions_NoMoreRegistrationAllowed_
  commentId: Overload:Rocket.Surgery.Conventions.DryIoc.DryIocOptions.NoMoreRegistrationAllowed
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.DryIoc.DryIocOptions.NoMoreRegistrationAllowed
  nameWithType: DryIocOptions.NoMoreRegistrationAllowed
- uid: Rocket.Surgery.Conventions.DryIoc.IDryIocAsyncConvention
  name: IDryIocAsyncConvention
  href: api/Rocket.Surgery.Conventions.DryIoc.IDryIocAsyncConvention.html
  commentId: T:Rocket.Surgery.Conventions.DryIoc.IDryIocAsyncConvention
  fullName: Rocket.Surgery.Conventions.DryIoc.IDryIocAsyncConvention
  nameWithType: IDryIocAsyncConvention
- uid: Rocket.Surgery.Conventions.DryIoc.IDryIocAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,DryIoc.IContainer,System.Threading.CancellationToken)
  name: Register(IConventionContext, IConfiguration, IServiceCollection, IContainer, CancellationToken)
  href: api/Rocket.Surgery.Conventions.DryIoc.IDryIocAsyncConvention.html#Rocket_Surgery_Conventions_DryIoc_IDryIocAsyncConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_IServiceCollection_DryIoc_IContainer_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.DryIoc.IDryIocAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,DryIoc.IContainer,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Conventions.DryIoc.IDryIocAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection, DryIoc.IContainer, System.Threading.CancellationToken)
  nameWithType: IDryIocAsyncConvention.Register(IConventionContext, IConfiguration, IServiceCollection, IContainer, CancellationToken)
- uid: Rocket.Surgery.Conventions.DryIoc.IDryIocAsyncConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Conventions.DryIoc.IDryIocAsyncConvention.html#Rocket_Surgery_Conventions_DryIoc_IDryIocAsyncConvention_Register_
  commentId: Overload:Rocket.Surgery.Conventions.DryIoc.IDryIocAsyncConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.DryIoc.IDryIocAsyncConvention.Register
  nameWithType: IDryIocAsyncConvention.Register
- uid: Rocket.Surgery.Conventions.DryIoc.IDryIocConvention
  name: IDryIocConvention
  href: api/Rocket.Surgery.Conventions.DryIoc.IDryIocConvention.html
  commentId: T:Rocket.Surgery.Conventions.DryIoc.IDryIocConvention
  fullName: Rocket.Surgery.Conventions.DryIoc.IDryIocConvention
  nameWithType: IDryIocConvention
- uid: Rocket.Surgery.Conventions.DryIoc.IDryIocConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,DryIoc.IContainer)
  name: Register(IConventionContext, IConfiguration, IServiceCollection, IContainer)
  href: api/Rocket.Surgery.Conventions.DryIoc.IDryIocConvention.html#Rocket_Surgery_Conventions_DryIoc_IDryIocConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_IServiceCollection_DryIoc_IContainer_
  commentId: M:Rocket.Surgery.Conventions.DryIoc.IDryIocConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,DryIoc.IContainer)
  fullName: Rocket.Surgery.Conventions.DryIoc.IDryIocConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection, DryIoc.IContainer)
  nameWithType: IDryIocConvention.Register(IConventionContext, IConfiguration, IServiceCollection, IContainer)
- uid: Rocket.Surgery.Conventions.DryIoc.IDryIocConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Conventions.DryIoc.IDryIocConvention.html#Rocket_Surgery_Conventions_DryIoc_IDryIocConvention_Register_
  commentId: Overload:Rocket.Surgery.Conventions.DryIoc.IDryIocConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.DryIoc.IDryIocConvention.Register
  nameWithType: IDryIocConvention.Register
- uid: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions
  name: DryIocConventionRocketHostExtensions
  href: api/Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.html
  commentId: T:Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions
  fullName: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions
  nameWithType: DryIocConventionRocketHostExtensions
- uid: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.DryIoc.DryIocConvention,System.Int32)
  name: ConfigureDryIoc(ConventionContextBuilder, DryIocConvention, int)
  href: api/Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_DryIocConventionRocketHostExtensions_ConfigureDryIoc_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Conventions_DryIoc_DryIocConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.DryIoc.DryIocConvention,System.Int32)
  name.vb: ConfigureDryIoc(ConventionContextBuilder, DryIocConvention, Integer)
  fullName: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.DryIoc.DryIocConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.DryIoc.DryIocConvention, Integer)
  nameWithType: DryIocConventionRocketHostExtensions.ConfigureDryIoc(ConventionContextBuilder, DryIocConvention, int)
  nameWithType.vb: DryIocConventionRocketHostExtensions.ConfigureDryIoc(ConventionContextBuilder, DryIocConvention, Integer)
- uid: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{DryIoc.IContainer},System.Int32)
  name: ConfigureDryIoc(ConventionContextBuilder, Action<IContainer>, int)
  href: api/Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_DryIocConventionRocketHostExtensions_ConfigureDryIoc_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_DryIoc_IContainer__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{DryIoc.IContainer},System.Int32)
  name.vb: ConfigureDryIoc(ConventionContextBuilder, Action(Of IContainer), Integer)
  fullName: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<DryIoc.IContainer>, int)
  fullName.vb: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of DryIoc.IContainer), Integer)
  nameWithType: DryIocConventionRocketHostExtensions.ConfigureDryIoc(ConventionContextBuilder, Action<IContainer>, int)
  nameWithType.vb: DryIocConventionRocketHostExtensions.ConfigureDryIoc(ConventionContextBuilder, Action(Of IContainer), Integer)
- uid: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,DryIoc.IContainer},System.Int32)
  name: ConfigureDryIoc(ConventionContextBuilder, Action<IConfiguration, IServiceCollection, IContainer>, int)
  href: api/Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_DryIocConventionRocketHostExtensions_ConfigureDryIoc_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_IServiceCollection_DryIoc_IContainer__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,DryIoc.IContainer},System.Int32)
  name.vb: ConfigureDryIoc(ConventionContextBuilder, Action(Of IConfiguration, IServiceCollection, IContainer), Integer)
  fullName: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection, DryIoc.IContainer>, int)
  fullName.vb: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection, DryIoc.IContainer), Integer)
  nameWithType: DryIocConventionRocketHostExtensions.ConfigureDryIoc(ConventionContextBuilder, Action<IConfiguration, IServiceCollection, IContainer>, int)
  nameWithType.vb: DryIocConventionRocketHostExtensions.ConfigureDryIoc(ConventionContextBuilder, Action(Of IConfiguration, IServiceCollection, IContainer), Integer)
- uid: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection,DryIoc.IContainer},System.Int32)
  name: ConfigureDryIoc(ConventionContextBuilder, Action<IServiceCollection, IContainer>, int)
  href: api/Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_DryIocConventionRocketHostExtensions_ConfigureDryIoc_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_Microsoft_Extensions_DependencyInjection_IServiceCollection_DryIoc_IContainer__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection,DryIoc.IContainer},System.Int32)
  name.vb: ConfigureDryIoc(ConventionContextBuilder, Action(Of IServiceCollection, IContainer), Integer)
  fullName: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection, DryIoc.IContainer>, int)
  fullName.vb: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection, DryIoc.IContainer), Integer)
  nameWithType: DryIocConventionRocketHostExtensions.ConfigureDryIoc(ConventionContextBuilder, Action<IServiceCollection, IContainer>, int)
  nameWithType.vb: DryIocConventionRocketHostExtensions.ConfigureDryIoc(ConventionContextBuilder, Action(Of IServiceCollection, IContainer), Integer)
- uid: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,DryIoc.IContainer},System.Int32)
  name: ConfigureDryIoc(ConventionContextBuilder, Action<IConventionContext, IConfiguration, IServiceCollection, IContainer>, int)
  href: api/Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_DryIocConventionRocketHostExtensions_ConfigureDryIoc_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_IServiceCollection_DryIoc_IContainer__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,DryIoc.IContainer},System.Int32)
  name.vb: ConfigureDryIoc(ConventionContextBuilder, Action(Of IConventionContext, IConfiguration, IServiceCollection, IContainer), Integer)
  fullName: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection, DryIoc.IContainer>, int)
  fullName.vb: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection, DryIoc.IContainer), Integer)
  nameWithType: DryIocConventionRocketHostExtensions.ConfigureDryIoc(ConventionContextBuilder, Action<IConventionContext, IConfiguration, IServiceCollection, IContainer>, int)
  nameWithType.vb: DryIocConventionRocketHostExtensions.ConfigureDryIoc(ConventionContextBuilder, Action(Of IConventionContext, IConfiguration, IServiceCollection, IContainer), Integer)
- uid: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{DryIoc.IContainer,DryIoc.IContainer},System.Int32)
  name: ConfigureDryIoc(ConventionContextBuilder, Func<IContainer, IContainer>, int)
  href: api/Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_DryIocConventionRocketHostExtensions_ConfigureDryIoc_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_DryIoc_IContainer_DryIoc_IContainer__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{DryIoc.IContainer,DryIoc.IContainer},System.Int32)
  name.vb: ConfigureDryIoc(ConventionContextBuilder, Func(Of IContainer, IContainer), Integer)
  fullName: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<DryIoc.IContainer, DryIoc.IContainer>, int)
  fullName.vb: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of DryIoc.IContainer, DryIoc.IContainer), Integer)
  nameWithType: DryIocConventionRocketHostExtensions.ConfigureDryIoc(ConventionContextBuilder, Func<IContainer, IContainer>, int)
  nameWithType.vb: DryIocConventionRocketHostExtensions.ConfigureDryIoc(ConventionContextBuilder, Func(Of IContainer, IContainer), Integer)
- uid: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,DryIoc.IContainer,DryIoc.IContainer},System.Int32)
  name: ConfigureDryIoc(ConventionContextBuilder, Func<IConfiguration, IServiceCollection, IContainer, IContainer>, int)
  href: api/Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_DryIocConventionRocketHostExtensions_ConfigureDryIoc_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_IServiceCollection_DryIoc_IContainer_DryIoc_IContainer__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IServiceCollection,DryIoc.IContainer,DryIoc.IContainer},System.Int32)
  name.vb: ConfigureDryIoc(ConventionContextBuilder, Func(Of IConfiguration, IServiceCollection, IContainer, IContainer), Integer)
  fullName: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection, DryIoc.IContainer, DryIoc.IContainer>, int)
  fullName.vb: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.IServiceCollection, DryIoc.IContainer, DryIoc.IContainer), Integer)
  nameWithType: DryIocConventionRocketHostExtensions.ConfigureDryIoc(ConventionContextBuilder, Func<IConfiguration, IServiceCollection, IContainer, IContainer>, int)
  nameWithType.vb: DryIocConventionRocketHostExtensions.ConfigureDryIoc(ConventionContextBuilder, Func(Of IConfiguration, IServiceCollection, IContainer, IContainer), Integer)
- uid: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.DependencyInjection.IServiceCollection,DryIoc.IContainer,DryIoc.IContainer},System.Int32)
  name: ConfigureDryIoc(ConventionContextBuilder, Func<IServiceCollection, IContainer, IContainer>, int)
  href: api/Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_DryIocConventionRocketHostExtensions_ConfigureDryIoc_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_Extensions_DependencyInjection_IServiceCollection_DryIoc_IContainer_DryIoc_IContainer__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.DependencyInjection.IServiceCollection,DryIoc.IContainer,DryIoc.IContainer},System.Int32)
  name.vb: ConfigureDryIoc(ConventionContextBuilder, Func(Of IServiceCollection, IContainer, IContainer), Integer)
  fullName: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.Extensions.DependencyInjection.IServiceCollection, DryIoc.IContainer, DryIoc.IContainer>, int)
  fullName.vb: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.Extensions.DependencyInjection.IServiceCollection, DryIoc.IContainer, DryIoc.IContainer), Integer)
  nameWithType: DryIocConventionRocketHostExtensions.ConfigureDryIoc(ConventionContextBuilder, Func<IServiceCollection, IContainer, IContainer>, int)
  nameWithType.vb: DryIocConventionRocketHostExtensions.ConfigureDryIoc(ConventionContextBuilder, Func(Of IServiceCollection, IContainer, IContainer), Integer)
- uid: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc*
  name: ConfigureDryIoc
  href: api/Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_DryIocConventionRocketHostExtensions_ConfigureDryIoc_
  commentId: Overload:Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.ConfigureDryIoc
  nameWithType: DryIocConventionRocketHostExtensions.ConfigureDryIoc
- uid: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.UseDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,DryIoc.IContainer)
  name: UseDryIoc(ConventionContextBuilder, IContainer?)
  href: api/Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_DryIocConventionRocketHostExtensions_UseDryIoc_Rocket_Surgery_Conventions_ConventionContextBuilder_DryIoc_IContainer_
  commentId: M:Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.UseDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder,DryIoc.IContainer)
  name.vb: UseDryIoc(ConventionContextBuilder, IContainer)
  fullName: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.UseDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, DryIoc.IContainer?)
  fullName.vb: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.UseDryIoc(Rocket.Surgery.Conventions.ConventionContextBuilder, DryIoc.IContainer)
  nameWithType: DryIocConventionRocketHostExtensions.UseDryIoc(ConventionContextBuilder, IContainer?)
  nameWithType.vb: DryIocConventionRocketHostExtensions.UseDryIoc(ConventionContextBuilder, IContainer)
- uid: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.UseDryIoc*
  name: UseDryIoc
  href: api/Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.html#Rocket_Surgery_Conventions_DryIocConventionRocketHostExtensions_UseDryIoc_
  commentId: Overload:Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.UseDryIoc
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.DryIocConventionRocketHostExtensions.UseDryIoc
  nameWithType: DryIocConventionRocketHostExtensions.UseDryIoc
- uid: Rocket.Surgery.Conventions.ExportConventionAttribute
  name: ExportConventionAttribute
  href: api/Rocket.Surgery.Conventions.ExportConventionAttribute.html
  commentId: T:Rocket.Surgery.Conventions.ExportConventionAttribute
  fullName: Rocket.Surgery.Conventions.ExportConventionAttribute
  nameWithType: ExportConventionAttribute
- uid: Rocket.Surgery.Conventions.ExportConventionsAttribute
  name: ExportConventionsAttribute
  href: api/Rocket.Surgery.Conventions.ExportConventionsAttribute.html
  commentId: T:Rocket.Surgery.Conventions.ExportConventionsAttribute
  fullName: Rocket.Surgery.Conventions.ExportConventionsAttribute
  nameWithType: ExportConventionsAttribute
- uid: Rocket.Surgery.Conventions.ExportedConventionsAttribute
  name: ExportedConventionsAttribute
  href: api/Rocket.Surgery.Conventions.ExportedConventionsAttribute.html
  commentId: T:Rocket.Surgery.Conventions.ExportedConventionsAttribute
  fullName: Rocket.Surgery.Conventions.ExportedConventionsAttribute
  nameWithType: ExportedConventionsAttribute
- uid: Rocket.Surgery.Conventions.ExportedConventionsAttribute.#ctor(System.Type[])
  name: ExportedConventionsAttribute(params Type[])
  href: api/Rocket.Surgery.Conventions.ExportedConventionsAttribute.html#Rocket_Surgery_Conventions_ExportedConventionsAttribute__ctor_System_Type___
  commentId: M:Rocket.Surgery.Conventions.ExportedConventionsAttribute.#ctor(System.Type[])
  name.vb: New(ParamArray Type())
  fullName: Rocket.Surgery.Conventions.ExportedConventionsAttribute.ExportedConventionsAttribute(params System.Type[])
  fullName.vb: Rocket.Surgery.Conventions.ExportedConventionsAttribute.New(ParamArray System.Type())
  nameWithType: ExportedConventionsAttribute.ExportedConventionsAttribute(params Type[])
  nameWithType.vb: ExportedConventionsAttribute.New(ParamArray Type())
- uid: Rocket.Surgery.Conventions.ExportedConventionsAttribute.#ctor*
  name: ExportedConventionsAttribute
  href: api/Rocket.Surgery.Conventions.ExportedConventionsAttribute.html#Rocket_Surgery_Conventions_ExportedConventionsAttribute__ctor_
  commentId: Overload:Rocket.Surgery.Conventions.ExportedConventionsAttribute.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Rocket.Surgery.Conventions.ExportedConventionsAttribute.ExportedConventionsAttribute
  fullName.vb: Rocket.Surgery.Conventions.ExportedConventionsAttribute.New
  nameWithType: ExportedConventionsAttribute.ExportedConventionsAttribute
  nameWithType.vb: ExportedConventionsAttribute.New
- uid: Rocket.Surgery.Conventions.ExportedConventionsAttribute.ExportedConventions
  name: ExportedConventions
  href: api/Rocket.Surgery.Conventions.ExportedConventionsAttribute.html#Rocket_Surgery_Conventions_ExportedConventionsAttribute_ExportedConventions
  commentId: P:Rocket.Surgery.Conventions.ExportedConventionsAttribute.ExportedConventions
  fullName: Rocket.Surgery.Conventions.ExportedConventionsAttribute.ExportedConventions
  nameWithType: ExportedConventionsAttribute.ExportedConventions
- uid: Rocket.Surgery.Conventions.ExportedConventionsAttribute.ExportedConventions*
  name: ExportedConventions
  href: api/Rocket.Surgery.Conventions.ExportedConventionsAttribute.html#Rocket_Surgery_Conventions_ExportedConventionsAttribute_ExportedConventions_
  commentId: Overload:Rocket.Surgery.Conventions.ExportedConventionsAttribute.ExportedConventions
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ExportedConventionsAttribute.ExportedConventions
  nameWithType: ExportedConventionsAttribute.ExportedConventions
- uid: Rocket.Surgery.Conventions.HostType
  name: HostType
  href: api/Rocket.Surgery.Conventions.HostType.html
  commentId: T:Rocket.Surgery.Conventions.HostType
  fullName: Rocket.Surgery.Conventions.HostType
  nameWithType: HostType
- uid: Rocket.Surgery.Conventions.HostType.Live
  name: Live
  href: api/Rocket.Surgery.Conventions.HostType.html#Rocket_Surgery_Conventions_HostType_Live
  commentId: F:Rocket.Surgery.Conventions.HostType.Live
  fullName: Rocket.Surgery.Conventions.HostType.Live
  nameWithType: HostType.Live
- uid: Rocket.Surgery.Conventions.HostType.Undefined
  name: Undefined
  href: api/Rocket.Surgery.Conventions.HostType.html#Rocket_Surgery_Conventions_HostType_Undefined
  commentId: F:Rocket.Surgery.Conventions.HostType.Undefined
  fullName: Rocket.Surgery.Conventions.HostType.Undefined
  nameWithType: HostType.Undefined
- uid: Rocket.Surgery.Conventions.HostType.UnitTest
  name: UnitTest
  href: api/Rocket.Surgery.Conventions.HostType.html#Rocket_Surgery_Conventions_HostType_UnitTest
  commentId: F:Rocket.Surgery.Conventions.HostType.UnitTest
  fullName: Rocket.Surgery.Conventions.HostType.UnitTest
  nameWithType: HostType.UnitTest
- uid: Rocket.Surgery.Conventions.Hosting
  name: Rocket.Surgery.Conventions.Hosting
  href: api/Rocket.Surgery.Conventions.Hosting.html
  commentId: N:Rocket.Surgery.Conventions.Hosting
  fullName: Rocket.Surgery.Conventions.Hosting
  nameWithType: Rocket.Surgery.Conventions.Hosting
- uid: Rocket.Surgery.Conventions.Hosting.HostCreatedAsyncConvention`1
  name: HostCreatedAsyncConvention<THost>
  href: api/Rocket.Surgery.Conventions.Hosting.HostCreatedAsyncConvention-1.html
  commentId: T:Rocket.Surgery.Conventions.Hosting.HostCreatedAsyncConvention`1
  name.vb: HostCreatedAsyncConvention(Of THost)
  fullName: Rocket.Surgery.Conventions.Hosting.HostCreatedAsyncConvention<THost>
  fullName.vb: Rocket.Surgery.Conventions.Hosting.HostCreatedAsyncConvention(Of THost)
  nameWithType: HostCreatedAsyncConvention<THost>
  nameWithType.vb: HostCreatedAsyncConvention(Of THost)
- uid: Rocket.Surgery.Conventions.Hosting.HostCreatedConvention`1
  name: HostCreatedConvention<THost>
  href: api/Rocket.Surgery.Conventions.Hosting.HostCreatedConvention-1.html
  commentId: T:Rocket.Surgery.Conventions.Hosting.HostCreatedConvention`1
  name.vb: HostCreatedConvention(Of THost)
  fullName: Rocket.Surgery.Conventions.Hosting.HostCreatedConvention<THost>
  fullName.vb: Rocket.Surgery.Conventions.Hosting.HostCreatedConvention(Of THost)
  nameWithType: HostCreatedConvention<THost>
  nameWithType.vb: HostCreatedConvention(Of THost)
- uid: Rocket.Surgery.Conventions.Hosting.IHostCreatedAsyncConvention`1
  name: IHostCreatedAsyncConvention<THost>
  href: api/Rocket.Surgery.Conventions.Hosting.IHostCreatedAsyncConvention-1.html
  commentId: T:Rocket.Surgery.Conventions.Hosting.IHostCreatedAsyncConvention`1
  name.vb: IHostCreatedAsyncConvention(Of THost)
  fullName: Rocket.Surgery.Conventions.Hosting.IHostCreatedAsyncConvention<THost>
  fullName.vb: Rocket.Surgery.Conventions.Hosting.IHostCreatedAsyncConvention(Of THost)
  nameWithType: IHostCreatedAsyncConvention<THost>
  nameWithType.vb: IHostCreatedAsyncConvention(Of THost)
- uid: Rocket.Surgery.Conventions.Hosting.IHostCreatedAsyncConvention`1.Register(Rocket.Surgery.Conventions.IConventionContext,`0,System.Threading.CancellationToken)
  name: Register(IConventionContext, THost, CancellationToken)
  href: api/Rocket.Surgery.Conventions.Hosting.IHostCreatedAsyncConvention-1.html#Rocket_Surgery_Conventions_Hosting_IHostCreatedAsyncConvention_1_Register_Rocket_Surgery_Conventions_IConventionContext__0_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.Hosting.IHostCreatedAsyncConvention`1.Register(Rocket.Surgery.Conventions.IConventionContext,`0,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Conventions.Hosting.IHostCreatedAsyncConvention<THost>.Register(Rocket.Surgery.Conventions.IConventionContext, THost, System.Threading.CancellationToken)
  fullName.vb: Rocket.Surgery.Conventions.Hosting.IHostCreatedAsyncConvention(Of THost).Register(Rocket.Surgery.Conventions.IConventionContext, THost, System.Threading.CancellationToken)
  nameWithType: IHostCreatedAsyncConvention<THost>.Register(IConventionContext, THost, CancellationToken)
  nameWithType.vb: IHostCreatedAsyncConvention(Of THost).Register(IConventionContext, THost, CancellationToken)
- uid: Rocket.Surgery.Conventions.Hosting.IHostCreatedAsyncConvention`1.Register*
  name: Register
  href: api/Rocket.Surgery.Conventions.Hosting.IHostCreatedAsyncConvention-1.html#Rocket_Surgery_Conventions_Hosting_IHostCreatedAsyncConvention_1_Register_
  commentId: Overload:Rocket.Surgery.Conventions.Hosting.IHostCreatedAsyncConvention`1.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Hosting.IHostCreatedAsyncConvention<THost>.Register
  fullName.vb: Rocket.Surgery.Conventions.Hosting.IHostCreatedAsyncConvention(Of THost).Register
  nameWithType: IHostCreatedAsyncConvention<THost>.Register
  nameWithType.vb: IHostCreatedAsyncConvention(Of THost).Register
- uid: Rocket.Surgery.Conventions.Hosting.IHostCreatedConvention`1
  name: IHostCreatedConvention<THost>
  href: api/Rocket.Surgery.Conventions.Hosting.IHostCreatedConvention-1.html
  commentId: T:Rocket.Surgery.Conventions.Hosting.IHostCreatedConvention`1
  name.vb: IHostCreatedConvention(Of THost)
  fullName: Rocket.Surgery.Conventions.Hosting.IHostCreatedConvention<THost>
  fullName.vb: Rocket.Surgery.Conventions.Hosting.IHostCreatedConvention(Of THost)
  nameWithType: IHostCreatedConvention<THost>
  nameWithType.vb: IHostCreatedConvention(Of THost)
- uid: Rocket.Surgery.Conventions.Hosting.IHostCreatedConvention`1.Register(Rocket.Surgery.Conventions.IConventionContext,`0)
  name: Register(IConventionContext, THost)
  href: api/Rocket.Surgery.Conventions.Hosting.IHostCreatedConvention-1.html#Rocket_Surgery_Conventions_Hosting_IHostCreatedConvention_1_Register_Rocket_Surgery_Conventions_IConventionContext__0_
  commentId: M:Rocket.Surgery.Conventions.Hosting.IHostCreatedConvention`1.Register(Rocket.Surgery.Conventions.IConventionContext,`0)
  fullName: Rocket.Surgery.Conventions.Hosting.IHostCreatedConvention<THost>.Register(Rocket.Surgery.Conventions.IConventionContext, THost)
  fullName.vb: Rocket.Surgery.Conventions.Hosting.IHostCreatedConvention(Of THost).Register(Rocket.Surgery.Conventions.IConventionContext, THost)
  nameWithType: IHostCreatedConvention<THost>.Register(IConventionContext, THost)
  nameWithType.vb: IHostCreatedConvention(Of THost).Register(IConventionContext, THost)
- uid: Rocket.Surgery.Conventions.Hosting.IHostCreatedConvention`1.Register*
  name: Register
  href: api/Rocket.Surgery.Conventions.Hosting.IHostCreatedConvention-1.html#Rocket_Surgery_Conventions_Hosting_IHostCreatedConvention_1_Register_
  commentId: Overload:Rocket.Surgery.Conventions.Hosting.IHostCreatedConvention`1.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Hosting.IHostCreatedConvention<THost>.Register
  fullName.vb: Rocket.Surgery.Conventions.Hosting.IHostCreatedConvention(Of THost).Register
  nameWithType: IHostCreatedConvention<THost>.Register
  nameWithType.vb: IHostCreatedConvention(Of THost).Register
- uid: Rocket.Surgery.Conventions.HostingConventionExtensions
  name: HostingConventionExtensions
  href: api/Rocket.Surgery.Conventions.HostingConventionExtensions.html
  commentId: T:Rocket.Surgery.Conventions.HostingConventionExtensions
  fullName: Rocket.Surgery.Conventions.HostingConventionExtensions
  nameWithType: HostingConventionExtensions
- uid: Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication*
  name: ConfigureApplication
  href: api/Rocket.Surgery.Conventions.HostingConventionExtensions.html#Rocket_Surgery_Conventions_HostingConventionExtensions_ConfigureApplication_
  commentId: Overload:Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication
  nameWithType: HostingConventionExtensions.ConfigureApplication
- uid: Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication``1(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Hosting.HostApplicationAsyncConvention{``0},System.Int32)
  name: ConfigureApplication<TBuilder>(ConventionContextBuilder, HostApplicationAsyncConvention<TBuilder>, int)
  href: api/Rocket.Surgery.Conventions.HostingConventionExtensions.html#Rocket_Surgery_Conventions_HostingConventionExtensions_ConfigureApplication__1_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Hosting_HostApplicationAsyncConvention___0__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication``1(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Hosting.HostApplicationAsyncConvention{``0},System.Int32)
  name.vb: ConfigureApplication(Of TBuilder)(ConventionContextBuilder, HostApplicationAsyncConvention(Of TBuilder), Integer)
  fullName: Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication<TBuilder>(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Hosting.HostApplicationAsyncConvention<TBuilder>, int)
  fullName.vb: Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication(Of TBuilder)(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Hosting.HostApplicationAsyncConvention(Of TBuilder), Integer)
  nameWithType: HostingConventionExtensions.ConfigureApplication<TBuilder>(ConventionContextBuilder, HostApplicationAsyncConvention<TBuilder>, int)
  nameWithType.vb: HostingConventionExtensions.ConfigureApplication(Of TBuilder)(ConventionContextBuilder, HostApplicationAsyncConvention(Of TBuilder), Integer)
- uid: Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication``1(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Hosting.HostApplicationConvention{``0},System.Int32)
  name: ConfigureApplication<TBuilder>(ConventionContextBuilder, HostApplicationConvention<TBuilder>, int)
  href: api/Rocket.Surgery.Conventions.HostingConventionExtensions.html#Rocket_Surgery_Conventions_HostingConventionExtensions_ConfigureApplication__1_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Hosting_HostApplicationConvention___0__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication``1(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Hosting.HostApplicationConvention{``0},System.Int32)
  name.vb: ConfigureApplication(Of TBuilder)(ConventionContextBuilder, HostApplicationConvention(Of TBuilder), Integer)
  fullName: Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication<TBuilder>(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Hosting.HostApplicationConvention<TBuilder>, int)
  fullName.vb: Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication(Of TBuilder)(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Hosting.HostApplicationConvention(Of TBuilder), Integer)
  nameWithType: HostingConventionExtensions.ConfigureApplication<TBuilder>(ConventionContextBuilder, HostApplicationConvention<TBuilder>, int)
  nameWithType.vb: HostingConventionExtensions.ConfigureApplication(Of TBuilder)(ConventionContextBuilder, HostApplicationConvention(Of TBuilder), Integer)
- uid: Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{``0},System.Int32)
  name: ConfigureApplication<TBuilder>(ConventionContextBuilder, Action<TBuilder>, int)
  href: api/Rocket.Surgery.Conventions.HostingConventionExtensions.html#Rocket_Surgery_Conventions_HostingConventionExtensions_ConfigureApplication__1_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action___0__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{``0},System.Int32)
  name.vb: ConfigureApplication(Of TBuilder)(ConventionContextBuilder, Action(Of TBuilder), Integer)
  fullName: Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication<TBuilder>(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<TBuilder>, int)
  fullName.vb: Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication(Of TBuilder)(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of TBuilder), Integer)
  nameWithType: HostingConventionExtensions.ConfigureApplication<TBuilder>(ConventionContextBuilder, Action<TBuilder>, int)
  nameWithType.vb: HostingConventionExtensions.ConfigureApplication(Of TBuilder)(ConventionContextBuilder, Action(Of TBuilder), Integer)
- uid: Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Hosting.IHostApplicationBuilder,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureApplication<TBuilder>(ConventionContextBuilder, Func<IHostApplicationBuilder, CancellationToken, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.HostingConventionExtensions.html#Rocket_Surgery_Conventions_HostingConventionExtensions_ConfigureApplication__1_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_Extensions_Hosting_IHostApplicationBuilder_System_Threading_CancellationToken_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Hosting.IHostApplicationBuilder,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureApplication(Of TBuilder)(ConventionContextBuilder, Func(Of IHostApplicationBuilder, CancellationToken, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication<TBuilder>(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.Extensions.Hosting.IHostApplicationBuilder, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication(Of TBuilder)(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.Extensions.Hosting.IHostApplicationBuilder, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: HostingConventionExtensions.ConfigureApplication<TBuilder>(ConventionContextBuilder, Func<IHostApplicationBuilder, CancellationToken, ValueTask>, int)
  nameWithType.vb: HostingConventionExtensions.ConfigureApplication(Of TBuilder)(ConventionContextBuilder, Func(Of IHostApplicationBuilder, CancellationToken, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Hosting.IHostApplicationBuilder,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureApplication<TBuilder>(ConventionContextBuilder, Func<IHostApplicationBuilder, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.HostingConventionExtensions.html#Rocket_Surgery_Conventions_HostingConventionExtensions_ConfigureApplication__1_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_Extensions_Hosting_IHostApplicationBuilder_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication``1(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.Extensions.Hosting.IHostApplicationBuilder,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureApplication(Of TBuilder)(ConventionContextBuilder, Func(Of IHostApplicationBuilder, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication<TBuilder>(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.Extensions.Hosting.IHostApplicationBuilder, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.HostingConventionExtensions.ConfigureApplication(Of TBuilder)(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.Extensions.Hosting.IHostApplicationBuilder, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: HostingConventionExtensions.ConfigureApplication<TBuilder>(ConventionContextBuilder, Func<IHostApplicationBuilder, ValueTask>, int)
  nameWithType.vb: HostingConventionExtensions.ConfigureApplication(Of TBuilder)(ConventionContextBuilder, Func(Of IHostApplicationBuilder, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.IAssemblyProvider
  name: IAssemblyProvider
  href: api/Rocket.Surgery.Conventions.IAssemblyProvider.html
  commentId: T:Rocket.Surgery.Conventions.IAssemblyProvider
  fullName: Rocket.Surgery.Conventions.IAssemblyProvider
  nameWithType: IAssemblyProvider
- uid: Rocket.Surgery.Conventions.IAssemblyProvider.GetAssemblies(System.Action{Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector},System.Int32,System.String,System.String)
  name: GetAssemblies(Action<IAssemblyProviderAssemblySelector>, int, string, string)
  href: api/Rocket.Surgery.Conventions.IAssemblyProvider.html#Rocket_Surgery_Conventions_IAssemblyProvider_GetAssemblies_System_Action_Rocket_Surgery_Conventions_Reflection_IAssemblyProviderAssemblySelector__System_Int32_System_String_System_String_
  commentId: M:Rocket.Surgery.Conventions.IAssemblyProvider.GetAssemblies(System.Action{Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector},System.Int32,System.String,System.String)
  name.vb: GetAssemblies(Action(Of IAssemblyProviderAssemblySelector), Integer, String, String)
  fullName: Rocket.Surgery.Conventions.IAssemblyProvider.GetAssemblies(System.Action<Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector>, int, string, string)
  fullName.vb: Rocket.Surgery.Conventions.IAssemblyProvider.GetAssemblies(System.Action(Of Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector), Integer, String, String)
  nameWithType: IAssemblyProvider.GetAssemblies(Action<IAssemblyProviderAssemblySelector>, int, string, string)
  nameWithType.vb: IAssemblyProvider.GetAssemblies(Action(Of IAssemblyProviderAssemblySelector), Integer, String, String)
- uid: Rocket.Surgery.Conventions.IAssemblyProvider.GetAssemblies*
  name: GetAssemblies
  href: api/Rocket.Surgery.Conventions.IAssemblyProvider.html#Rocket_Surgery_Conventions_IAssemblyProvider_GetAssemblies_
  commentId: Overload:Rocket.Surgery.Conventions.IAssemblyProvider.GetAssemblies
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.IAssemblyProvider.GetAssemblies
  nameWithType: IAssemblyProvider.GetAssemblies
- uid: Rocket.Surgery.Conventions.IAssemblyProvider.GetTypes(System.Func{Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector,System.Collections.Generic.IEnumerable{System.Type}},System.Int32,System.String,System.String)
  name: GetTypes(Func<ITypeProviderAssemblySelector, IEnumerable<Type>>, int, string, string)
  href: api/Rocket.Surgery.Conventions.IAssemblyProvider.html#Rocket_Surgery_Conventions_IAssemblyProvider_GetTypes_System_Func_Rocket_Surgery_Conventions_Reflection_ITypeProviderAssemblySelector_System_Collections_Generic_IEnumerable_System_Type___System_Int32_System_String_System_String_
  commentId: M:Rocket.Surgery.Conventions.IAssemblyProvider.GetTypes(System.Func{Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector,System.Collections.Generic.IEnumerable{System.Type}},System.Int32,System.String,System.String)
  name.vb: GetTypes(Func(Of ITypeProviderAssemblySelector, IEnumerable(Of Type)), Integer, String, String)
  fullName: Rocket.Surgery.Conventions.IAssemblyProvider.GetTypes(System.Func<Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector, System.Collections.Generic.IEnumerable<System.Type>>, int, string, string)
  fullName.vb: Rocket.Surgery.Conventions.IAssemblyProvider.GetTypes(System.Func(Of Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector, System.Collections.Generic.IEnumerable(Of System.Type)), Integer, String, String)
  nameWithType: IAssemblyProvider.GetTypes(Func<ITypeProviderAssemblySelector, IEnumerable<Type>>, int, string, string)
  nameWithType.vb: IAssemblyProvider.GetTypes(Func(Of ITypeProviderAssemblySelector, IEnumerable(Of Type)), Integer, String, String)
- uid: Rocket.Surgery.Conventions.IAssemblyProvider.GetTypes*
  name: GetTypes
  href: api/Rocket.Surgery.Conventions.IAssemblyProvider.html#Rocket_Surgery_Conventions_IAssemblyProvider_GetTypes_
  commentId: Overload:Rocket.Surgery.Conventions.IAssemblyProvider.GetTypes
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.IAssemblyProvider.GetTypes
  nameWithType: IAssemblyProvider.GetTypes
- uid: Rocket.Surgery.Conventions.IConvention
  name: IConvention
  href: api/Rocket.Surgery.Conventions.IConvention.html
  commentId: T:Rocket.Surgery.Conventions.IConvention
  fullName: Rocket.Surgery.Conventions.IConvention
  nameWithType: IConvention
- uid: Rocket.Surgery.Conventions.IConvention.Priority
  name: Priority
  href: api/Rocket.Surgery.Conventions.IConvention.html#Rocket_Surgery_Conventions_IConvention_Priority
  commentId: P:Rocket.Surgery.Conventions.IConvention.Priority
  fullName: Rocket.Surgery.Conventions.IConvention.Priority
  nameWithType: IConvention.Priority
- uid: Rocket.Surgery.Conventions.IConvention.Priority*
  name: Priority
  href: api/Rocket.Surgery.Conventions.IConvention.html#Rocket_Surgery_Conventions_IConvention_Priority_
  commentId: Overload:Rocket.Surgery.Conventions.IConvention.Priority
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.IConvention.Priority
  nameWithType: IConvention.Priority
- uid: Rocket.Surgery.Conventions.IConventionContext
  name: IConventionContext
  href: api/Rocket.Surgery.Conventions.IConventionContext.html
  commentId: T:Rocket.Surgery.Conventions.IConventionContext
  fullName: Rocket.Surgery.Conventions.IConventionContext
  nameWithType: IConventionContext
- uid: Rocket.Surgery.Conventions.IConventionContext.AssemblyProvider
  name: AssemblyProvider
  href: api/Rocket.Surgery.Conventions.IConventionContext.html#Rocket_Surgery_Conventions_IConventionContext_AssemblyProvider
  commentId: P:Rocket.Surgery.Conventions.IConventionContext.AssemblyProvider
  fullName: Rocket.Surgery.Conventions.IConventionContext.AssemblyProvider
  nameWithType: IConventionContext.AssemblyProvider
- uid: Rocket.Surgery.Conventions.IConventionContext.AssemblyProvider*
  name: AssemblyProvider
  href: api/Rocket.Surgery.Conventions.IConventionContext.html#Rocket_Surgery_Conventions_IConventionContext_AssemblyProvider_
  commentId: Overload:Rocket.Surgery.Conventions.IConventionContext.AssemblyProvider
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.IConventionContext.AssemblyProvider
  nameWithType: IConventionContext.AssemblyProvider
- uid: Rocket.Surgery.Conventions.IConventionContext.Conventions
  name: Conventions
  href: api/Rocket.Surgery.Conventions.IConventionContext.html#Rocket_Surgery_Conventions_IConventionContext_Conventions
  commentId: P:Rocket.Surgery.Conventions.IConventionContext.Conventions
  fullName: Rocket.Surgery.Conventions.IConventionContext.Conventions
  nameWithType: IConventionContext.Conventions
- uid: Rocket.Surgery.Conventions.IConventionContext.Conventions*
  name: Conventions
  href: api/Rocket.Surgery.Conventions.IConventionContext.html#Rocket_Surgery_Conventions_IConventionContext_Conventions_
  commentId: Overload:Rocket.Surgery.Conventions.IConventionContext.Conventions
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.IConventionContext.Conventions
  nameWithType: IConventionContext.Conventions
- uid: Rocket.Surgery.Conventions.IConventionContext.Item(System.Object)
  name: this[object]
  href: api/Rocket.Surgery.Conventions.IConventionContext.html#Rocket_Surgery_Conventions_IConventionContext_Item_System_Object_
  commentId: P:Rocket.Surgery.Conventions.IConventionContext.Item(System.Object)
  name.vb: this[](Object)
  fullName: Rocket.Surgery.Conventions.IConventionContext.this[object]
  fullName.vb: Rocket.Surgery.Conventions.IConventionContext.this[](Object)
  nameWithType: IConventionContext.this[object]
  nameWithType.vb: IConventionContext.this[](Object)
- uid: Rocket.Surgery.Conventions.IConventionContext.Item*
  name: this
  href: api/Rocket.Surgery.Conventions.IConventionContext.html#Rocket_Surgery_Conventions_IConventionContext_Item_
  commentId: Overload:Rocket.Surgery.Conventions.IConventionContext.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Rocket.Surgery.Conventions.IConventionContext.this
  fullName.vb: Rocket.Surgery.Conventions.IConventionContext.this[]
  nameWithType: IConventionContext.this
  nameWithType.vb: IConventionContext.this[]
- uid: Rocket.Surgery.Conventions.IConventionContext.Logger
  name: Logger
  href: api/Rocket.Surgery.Conventions.IConventionContext.html#Rocket_Surgery_Conventions_IConventionContext_Logger
  commentId: P:Rocket.Surgery.Conventions.IConventionContext.Logger
  fullName: Rocket.Surgery.Conventions.IConventionContext.Logger
  nameWithType: IConventionContext.Logger
- uid: Rocket.Surgery.Conventions.IConventionContext.Logger*
  name: Logger
  href: api/Rocket.Surgery.Conventions.IConventionContext.html#Rocket_Surgery_Conventions_IConventionContext_Logger_
  commentId: Overload:Rocket.Surgery.Conventions.IConventionContext.Logger
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.IConventionContext.Logger
  nameWithType: IConventionContext.Logger
- uid: Rocket.Surgery.Conventions.IConventionContext.Properties
  name: Properties
  href: api/Rocket.Surgery.Conventions.IConventionContext.html#Rocket_Surgery_Conventions_IConventionContext_Properties
  commentId: P:Rocket.Surgery.Conventions.IConventionContext.Properties
  fullName: Rocket.Surgery.Conventions.IConventionContext.Properties
  nameWithType: IConventionContext.Properties
- uid: Rocket.Surgery.Conventions.IConventionContext.Properties*
  name: Properties
  href: api/Rocket.Surgery.Conventions.IConventionContext.html#Rocket_Surgery_Conventions_IConventionContext_Properties_
  commentId: Overload:Rocket.Surgery.Conventions.IConventionContext.Properties
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.IConventionContext.Properties
  nameWithType: IConventionContext.Properties
- uid: Rocket.Surgery.Conventions.IConventionContext.ToBuilder
  name: ToBuilder()
  href: api/Rocket.Surgery.Conventions.IConventionContext.html#Rocket_Surgery_Conventions_IConventionContext_ToBuilder
  commentId: M:Rocket.Surgery.Conventions.IConventionContext.ToBuilder
  fullName: Rocket.Surgery.Conventions.IConventionContext.ToBuilder()
  nameWithType: IConventionContext.ToBuilder()
- uid: Rocket.Surgery.Conventions.IConventionContext.ToBuilder*
  name: ToBuilder
  href: api/Rocket.Surgery.Conventions.IConventionContext.html#Rocket_Surgery_Conventions_IConventionContext_ToBuilder_
  commentId: Overload:Rocket.Surgery.Conventions.IConventionContext.ToBuilder
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.IConventionContext.ToBuilder
  nameWithType: IConventionContext.ToBuilder
- uid: Rocket.Surgery.Conventions.IConventionDependency
  name: IConventionDependency
  href: api/Rocket.Surgery.Conventions.IConventionDependency.html
  commentId: T:Rocket.Surgery.Conventions.IConventionDependency
  fullName: Rocket.Surgery.Conventions.IConventionDependency
  nameWithType: IConventionDependency
- uid: Rocket.Surgery.Conventions.IConventionDependency.Direction
  name: Direction
  href: api/Rocket.Surgery.Conventions.IConventionDependency.html#Rocket_Surgery_Conventions_IConventionDependency_Direction
  commentId: P:Rocket.Surgery.Conventions.IConventionDependency.Direction
  fullName: Rocket.Surgery.Conventions.IConventionDependency.Direction
  nameWithType: IConventionDependency.Direction
- uid: Rocket.Surgery.Conventions.IConventionDependency.Direction*
  name: Direction
  href: api/Rocket.Surgery.Conventions.IConventionDependency.html#Rocket_Surgery_Conventions_IConventionDependency_Direction_
  commentId: Overload:Rocket.Surgery.Conventions.IConventionDependency.Direction
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.IConventionDependency.Direction
  nameWithType: IConventionDependency.Direction
- uid: Rocket.Surgery.Conventions.IConventionDependency.Type
  name: Type
  href: api/Rocket.Surgery.Conventions.IConventionDependency.html#Rocket_Surgery_Conventions_IConventionDependency_Type
  commentId: P:Rocket.Surgery.Conventions.IConventionDependency.Type
  fullName: Rocket.Surgery.Conventions.IConventionDependency.Type
  nameWithType: IConventionDependency.Type
- uid: Rocket.Surgery.Conventions.IConventionDependency.Type*
  name: Type
  href: api/Rocket.Surgery.Conventions.IConventionDependency.html#Rocket_Surgery_Conventions_IConventionDependency_Type_
  commentId: Overload:Rocket.Surgery.Conventions.IConventionDependency.Type
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.IConventionDependency.Type
  nameWithType: IConventionDependency.Type
- uid: Rocket.Surgery.Conventions.IConventionFactory
  name: IConventionFactory
  href: api/Rocket.Surgery.Conventions.IConventionFactory.html
  commentId: T:Rocket.Surgery.Conventions.IConventionFactory
  fullName: Rocket.Surgery.Conventions.IConventionFactory
  nameWithType: IConventionFactory
- uid: Rocket.Surgery.Conventions.IConventionFactory.CreateAssemblyProvider(Rocket.Surgery.Conventions.ConventionContextBuilder)
  name: CreateAssemblyProvider(ConventionContextBuilder)
  href: api/Rocket.Surgery.Conventions.IConventionFactory.html#Rocket_Surgery_Conventions_IConventionFactory_CreateAssemblyProvider_Rocket_Surgery_Conventions_ConventionContextBuilder_
  commentId: M:Rocket.Surgery.Conventions.IConventionFactory.CreateAssemblyProvider(Rocket.Surgery.Conventions.ConventionContextBuilder)
  fullName: Rocket.Surgery.Conventions.IConventionFactory.CreateAssemblyProvider(Rocket.Surgery.Conventions.ConventionContextBuilder)
  nameWithType: IConventionFactory.CreateAssemblyProvider(ConventionContextBuilder)
- uid: Rocket.Surgery.Conventions.IConventionFactory.CreateAssemblyProvider*
  name: CreateAssemblyProvider
  href: api/Rocket.Surgery.Conventions.IConventionFactory.html#Rocket_Surgery_Conventions_IConventionFactory_CreateAssemblyProvider_
  commentId: Overload:Rocket.Surgery.Conventions.IConventionFactory.CreateAssemblyProvider
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.IConventionFactory.CreateAssemblyProvider
  nameWithType: IConventionFactory.CreateAssemblyProvider
- uid: Rocket.Surgery.Conventions.IConventionFactory.LoadConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  name: LoadConventions(ConventionContextBuilder)
  href: api/Rocket.Surgery.Conventions.IConventionFactory.html#Rocket_Surgery_Conventions_IConventionFactory_LoadConventions_Rocket_Surgery_Conventions_ConventionContextBuilder_
  commentId: M:Rocket.Surgery.Conventions.IConventionFactory.LoadConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  fullName: Rocket.Surgery.Conventions.IConventionFactory.LoadConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  nameWithType: IConventionFactory.LoadConventions(ConventionContextBuilder)
- uid: Rocket.Surgery.Conventions.IConventionFactory.LoadConventions*
  name: LoadConventions
  href: api/Rocket.Surgery.Conventions.IConventionFactory.html#Rocket_Surgery_Conventions_IConventionFactory_LoadConventions_
  commentId: Overload:Rocket.Surgery.Conventions.IConventionFactory.LoadConventions
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.IConventionFactory.LoadConventions
  nameWithType: IConventionFactory.LoadConventions
- uid: Rocket.Surgery.Conventions.IConventionMetadata
  name: IConventionMetadata
  href: api/Rocket.Surgery.Conventions.IConventionMetadata.html
  commentId: T:Rocket.Surgery.Conventions.IConventionMetadata
  fullName: Rocket.Surgery.Conventions.IConventionMetadata
  nameWithType: IConventionMetadata
- uid: Rocket.Surgery.Conventions.IConventionMetadata.Convention
  name: Convention
  href: api/Rocket.Surgery.Conventions.IConventionMetadata.html#Rocket_Surgery_Conventions_IConventionMetadata_Convention
  commentId: P:Rocket.Surgery.Conventions.IConventionMetadata.Convention
  fullName: Rocket.Surgery.Conventions.IConventionMetadata.Convention
  nameWithType: IConventionMetadata.Convention
- uid: Rocket.Surgery.Conventions.IConventionMetadata.Convention*
  name: Convention
  href: api/Rocket.Surgery.Conventions.IConventionMetadata.html#Rocket_Surgery_Conventions_IConventionMetadata_Convention_
  commentId: Overload:Rocket.Surgery.Conventions.IConventionMetadata.Convention
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.IConventionMetadata.Convention
  nameWithType: IConventionMetadata.Convention
- uid: Rocket.Surgery.Conventions.IConventionMetadata.Dependencies
  name: Dependencies
  href: api/Rocket.Surgery.Conventions.IConventionMetadata.html#Rocket_Surgery_Conventions_IConventionMetadata_Dependencies
  commentId: P:Rocket.Surgery.Conventions.IConventionMetadata.Dependencies
  fullName: Rocket.Surgery.Conventions.IConventionMetadata.Dependencies
  nameWithType: IConventionMetadata.Dependencies
- uid: Rocket.Surgery.Conventions.IConventionMetadata.Dependencies*
  name: Dependencies
  href: api/Rocket.Surgery.Conventions.IConventionMetadata.html#Rocket_Surgery_Conventions_IConventionMetadata_Dependencies_
  commentId: Overload:Rocket.Surgery.Conventions.IConventionMetadata.Dependencies
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.IConventionMetadata.Dependencies
  nameWithType: IConventionMetadata.Dependencies
- uid: Rocket.Surgery.Conventions.IConventionMetadata.HostType
  name: HostType
  href: api/Rocket.Surgery.Conventions.IConventionMetadata.html#Rocket_Surgery_Conventions_IConventionMetadata_HostType
  commentId: P:Rocket.Surgery.Conventions.IConventionMetadata.HostType
  fullName: Rocket.Surgery.Conventions.IConventionMetadata.HostType
  nameWithType: IConventionMetadata.HostType
- uid: Rocket.Surgery.Conventions.IConventionMetadata.HostType*
  name: HostType
  href: api/Rocket.Surgery.Conventions.IConventionMetadata.html#Rocket_Surgery_Conventions_IConventionMetadata_HostType_
  commentId: Overload:Rocket.Surgery.Conventions.IConventionMetadata.HostType
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.IConventionMetadata.HostType
  nameWithType: IConventionMetadata.HostType
- uid: Rocket.Surgery.Conventions.IConventionProvider
  name: IConventionProvider
  href: api/Rocket.Surgery.Conventions.IConventionProvider.html
  commentId: T:Rocket.Surgery.Conventions.IConventionProvider
  fullName: Rocket.Surgery.Conventions.IConventionProvider
  nameWithType: IConventionProvider
- uid: Rocket.Surgery.Conventions.IConventionProvider.Get*
  name: Get
  href: api/Rocket.Surgery.Conventions.IConventionProvider.html#Rocket_Surgery_Conventions_IConventionProvider_Get_
  commentId: Overload:Rocket.Surgery.Conventions.IConventionProvider.Get
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.IConventionProvider.Get
  nameWithType: IConventionProvider.Get
- uid: Rocket.Surgery.Conventions.IConventionProvider.GetAll
  name: GetAll()
  href: api/Rocket.Surgery.Conventions.IConventionProvider.html#Rocket_Surgery_Conventions_IConventionProvider_GetAll
  commentId: M:Rocket.Surgery.Conventions.IConventionProvider.GetAll
  fullName: Rocket.Surgery.Conventions.IConventionProvider.GetAll()
  nameWithType: IConventionProvider.GetAll()
- uid: Rocket.Surgery.Conventions.IConventionProvider.GetAll*
  name: GetAll
  href: api/Rocket.Surgery.Conventions.IConventionProvider.html#Rocket_Surgery_Conventions_IConventionProvider_GetAll_
  commentId: Overload:Rocket.Surgery.Conventions.IConventionProvider.GetAll
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.IConventionProvider.GetAll
  nameWithType: IConventionProvider.GetAll
- uid: Rocket.Surgery.Conventions.IConventionProvider.Get``2
  name: Get<TContribution, TDelegate>()
  href: api/Rocket.Surgery.Conventions.IConventionProvider.html#Rocket_Surgery_Conventions_IConventionProvider_Get__2
  commentId: M:Rocket.Surgery.Conventions.IConventionProvider.Get``2
  name.vb: Get(Of TContribution, TDelegate)()
  fullName: Rocket.Surgery.Conventions.IConventionProvider.Get<TContribution, TDelegate>()
  fullName.vb: Rocket.Surgery.Conventions.IConventionProvider.Get(Of TContribution, TDelegate)()
  nameWithType: IConventionProvider.Get<TContribution, TDelegate>()
  nameWithType.vb: IConventionProvider.Get(Of TContribution, TDelegate)()
- uid: Rocket.Surgery.Conventions.IConventionProvider.Get``4
  name: Get<TContribution, TDelegate, TAsyncContribution, TAsyncDelegate>()
  href: api/Rocket.Surgery.Conventions.IConventionProvider.html#Rocket_Surgery_Conventions_IConventionProvider_Get__4
  commentId: M:Rocket.Surgery.Conventions.IConventionProvider.Get``4
  name.vb: Get(Of TContribution, TDelegate, TAsyncContribution, TAsyncDelegate)()
  fullName: Rocket.Surgery.Conventions.IConventionProvider.Get<TContribution, TDelegate, TAsyncContribution, TAsyncDelegate>()
  fullName.vb: Rocket.Surgery.Conventions.IConventionProvider.Get(Of TContribution, TDelegate, TAsyncContribution, TAsyncDelegate)()
  nameWithType: IConventionProvider.Get<TContribution, TDelegate, TAsyncContribution, TAsyncDelegate>()
  nameWithType.vb: IConventionProvider.Get(Of TContribution, TDelegate, TAsyncContribution, TAsyncDelegate)()
- uid: Rocket.Surgery.Conventions.IReadOnlyServiceProviderDictionary
  name: IReadOnlyServiceProviderDictionary
  href: api/Rocket.Surgery.Conventions.IReadOnlyServiceProviderDictionary.html
  commentId: T:Rocket.Surgery.Conventions.IReadOnlyServiceProviderDictionary
  fullName: Rocket.Surgery.Conventions.IReadOnlyServiceProviderDictionary
  nameWithType: IReadOnlyServiceProviderDictionary
- uid: Rocket.Surgery.Conventions.IServiceProviderDictionary
  name: IServiceProviderDictionary
  href: api/Rocket.Surgery.Conventions.IServiceProviderDictionary.html
  commentId: T:Rocket.Surgery.Conventions.IServiceProviderDictionary
  fullName: Rocket.Surgery.Conventions.IServiceProviderDictionary
  nameWithType: IServiceProviderDictionary
- uid: Rocket.Surgery.Conventions.ImportConventionsAttribute
  name: ImportConventionsAttribute
  href: api/Rocket.Surgery.Conventions.ImportConventionsAttribute.html
  commentId: T:Rocket.Surgery.Conventions.ImportConventionsAttribute
  fullName: Rocket.Surgery.Conventions.ImportConventionsAttribute
  nameWithType: ImportConventionsAttribute
- uid: Rocket.Surgery.Conventions.LiveConventionAttribute
  name: LiveConventionAttribute
  href: api/Rocket.Surgery.Conventions.LiveConventionAttribute.html
  commentId: T:Rocket.Surgery.Conventions.LiveConventionAttribute
  fullName: Rocket.Surgery.Conventions.LiveConventionAttribute
  nameWithType: LiveConventionAttribute
- uid: Rocket.Surgery.Conventions.Logging
  name: Rocket.Surgery.Conventions.Logging
  href: api/Rocket.Surgery.Conventions.Logging.html
  commentId: N:Rocket.Surgery.Conventions.Logging
  fullName: Rocket.Surgery.Conventions.Logging
  nameWithType: Rocket.Surgery.Conventions.Logging
- uid: Rocket.Surgery.Conventions.Logging.ILoggingAsyncConvention
  name: ILoggingAsyncConvention
  href: api/Rocket.Surgery.Conventions.Logging.ILoggingAsyncConvention.html
  commentId: T:Rocket.Surgery.Conventions.Logging.ILoggingAsyncConvention
  fullName: Rocket.Surgery.Conventions.Logging.ILoggingAsyncConvention
  nameWithType: ILoggingAsyncConvention
- uid: Rocket.Surgery.Conventions.Logging.ILoggingAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggingBuilder,System.Threading.CancellationToken)
  name: Register(IConventionContext, IConfiguration, ILoggingBuilder, CancellationToken)
  href: api/Rocket.Surgery.Conventions.Logging.ILoggingAsyncConvention.html#Rocket_Surgery_Conventions_Logging_ILoggingAsyncConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_Logging_ILoggingBuilder_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.Logging.ILoggingAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggingBuilder,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Conventions.Logging.ILoggingAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Logging.ILoggingBuilder, System.Threading.CancellationToken)
  nameWithType: ILoggingAsyncConvention.Register(IConventionContext, IConfiguration, ILoggingBuilder, CancellationToken)
- uid: Rocket.Surgery.Conventions.Logging.ILoggingAsyncConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Conventions.Logging.ILoggingAsyncConvention.html#Rocket_Surgery_Conventions_Logging_ILoggingAsyncConvention_Register_
  commentId: Overload:Rocket.Surgery.Conventions.Logging.ILoggingAsyncConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Logging.ILoggingAsyncConvention.Register
  nameWithType: ILoggingAsyncConvention.Register
- uid: Rocket.Surgery.Conventions.Logging.ILoggingConvention
  name: ILoggingConvention
  href: api/Rocket.Surgery.Conventions.Logging.ILoggingConvention.html
  commentId: T:Rocket.Surgery.Conventions.Logging.ILoggingConvention
  fullName: Rocket.Surgery.Conventions.Logging.ILoggingConvention
  nameWithType: ILoggingConvention
- uid: Rocket.Surgery.Conventions.Logging.ILoggingConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggingBuilder)
  name: Register(IConventionContext, IConfiguration, ILoggingBuilder)
  href: api/Rocket.Surgery.Conventions.Logging.ILoggingConvention.html#Rocket_Surgery_Conventions_Logging_ILoggingConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_Logging_ILoggingBuilder_
  commentId: M:Rocket.Surgery.Conventions.Logging.ILoggingConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggingBuilder)
  fullName: Rocket.Surgery.Conventions.Logging.ILoggingConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Logging.ILoggingBuilder)
  nameWithType: ILoggingConvention.Register(IConventionContext, IConfiguration, ILoggingBuilder)
- uid: Rocket.Surgery.Conventions.Logging.ILoggingConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Conventions.Logging.ILoggingConvention.html#Rocket_Surgery_Conventions_Logging_ILoggingConvention_Register_
  commentId: Overload:Rocket.Surgery.Conventions.Logging.ILoggingConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Logging.ILoggingConvention.Register
  nameWithType: ILoggingConvention.Register
- uid: Rocket.Surgery.Conventions.Logging.LoggingAsyncConvention
  name: LoggingAsyncConvention
  href: api/Rocket.Surgery.Conventions.Logging.LoggingAsyncConvention.html
  commentId: T:Rocket.Surgery.Conventions.Logging.LoggingAsyncConvention
  fullName: Rocket.Surgery.Conventions.Logging.LoggingAsyncConvention
  nameWithType: LoggingAsyncConvention
- uid: Rocket.Surgery.Conventions.Logging.LoggingConvention
  name: LoggingConvention
  href: api/Rocket.Surgery.Conventions.Logging.LoggingConvention.html
  commentId: T:Rocket.Surgery.Conventions.Logging.LoggingConvention
  fullName: Rocket.Surgery.Conventions.Logging.LoggingConvention
  nameWithType: LoggingConvention
- uid: Rocket.Surgery.Conventions.Logging.RocketLoggingOptions
  name: RocketLoggingOptions
  href: api/Rocket.Surgery.Conventions.Logging.RocketLoggingOptions.html
  commentId: T:Rocket.Surgery.Conventions.Logging.RocketLoggingOptions
  fullName: Rocket.Surgery.Conventions.Logging.RocketLoggingOptions
  nameWithType: RocketLoggingOptions
- uid: Rocket.Surgery.Conventions.Logging.RocketLoggingOptions.GetLogLevel
  name: GetLogLevel
  href: api/Rocket.Surgery.Conventions.Logging.RocketLoggingOptions.html#Rocket_Surgery_Conventions_Logging_RocketLoggingOptions_GetLogLevel
  commentId: P:Rocket.Surgery.Conventions.Logging.RocketLoggingOptions.GetLogLevel
  fullName: Rocket.Surgery.Conventions.Logging.RocketLoggingOptions.GetLogLevel
  nameWithType: RocketLoggingOptions.GetLogLevel
- uid: Rocket.Surgery.Conventions.Logging.RocketLoggingOptions.GetLogLevel*
  name: GetLogLevel
  href: api/Rocket.Surgery.Conventions.Logging.RocketLoggingOptions.html#Rocket_Surgery_Conventions_Logging_RocketLoggingOptions_GetLogLevel_
  commentId: Overload:Rocket.Surgery.Conventions.Logging.RocketLoggingOptions.GetLogLevel
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Logging.RocketLoggingOptions.GetLogLevel
  nameWithType: RocketLoggingOptions.GetLogLevel
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary
  name: ReadOnlyServiceProviderDictionary
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html
  commentId: T:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary
  nameWithType: ReadOnlyServiceProviderDictionary
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.#ctor
  name: ReadOnlyServiceProviderDictionary()
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary__ctor
  commentId: M:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.#ctor
  name.vb: New()
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.ReadOnlyServiceProviderDictionary()
  fullName.vb: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.New()
  nameWithType: ReadOnlyServiceProviderDictionary.ReadOnlyServiceProviderDictionary()
  nameWithType.vb: ReadOnlyServiceProviderDictionary.New()
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.#ctor(System.Collections.Generic.IDictionary{System.Object,System.Object})
  name: ReadOnlyServiceProviderDictionary(IDictionary<object, object>?)
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary__ctor_System_Collections_Generic_IDictionary_System_Object_System_Object__
  commentId: M:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.#ctor(System.Collections.Generic.IDictionary{System.Object,System.Object})
  name.vb: New(IDictionary(Of Object, Object))
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.ReadOnlyServiceProviderDictionary(System.Collections.Generic.IDictionary<object, object>?)
  fullName.vb: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.New(System.Collections.Generic.IDictionary(Of Object, Object))
  nameWithType: ReadOnlyServiceProviderDictionary.ReadOnlyServiceProviderDictionary(IDictionary<object, object>?)
  nameWithType.vb: ReadOnlyServiceProviderDictionary.New(IDictionary(Of Object, Object))
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.#ctor*
  name: ReadOnlyServiceProviderDictionary
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary__ctor_
  commentId: Overload:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.ReadOnlyServiceProviderDictionary
  fullName.vb: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.New
  nameWithType: ReadOnlyServiceProviderDictionary.ReadOnlyServiceProviderDictionary
  nameWithType.vb: ReadOnlyServiceProviderDictionary.New
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.ContainsKey(System.Object)
  name: ContainsKey(object)
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary_ContainsKey_System_Object_
  commentId: M:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.ContainsKey(System.Object)
  name.vb: ContainsKey(Object)
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.ContainsKey(object)
  fullName.vb: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.ContainsKey(Object)
  nameWithType: ReadOnlyServiceProviderDictionary.ContainsKey(object)
  nameWithType.vb: ReadOnlyServiceProviderDictionary.ContainsKey(Object)
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.ContainsKey*
  name: ContainsKey
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary_ContainsKey_
  commentId: Overload:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.ContainsKey
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.ContainsKey
  nameWithType: ReadOnlyServiceProviderDictionary.ContainsKey
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Count
  name: Count
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary_Count
  commentId: P:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Count
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Count
  nameWithType: ReadOnlyServiceProviderDictionary.Count
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Count*
  name: Count
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary_Count_
  commentId: Overload:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Count
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Count
  nameWithType: ReadOnlyServiceProviderDictionary.Count
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.GetEnumerator
  name: GetEnumerator()
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary_GetEnumerator
  commentId: M:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.GetEnumerator
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.GetEnumerator()
  nameWithType: ReadOnlyServiceProviderDictionary.GetEnumerator()
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.GetEnumerator*
  name: GetEnumerator
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary_GetEnumerator_
  commentId: Overload:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.GetEnumerator
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.GetEnumerator
  nameWithType: ReadOnlyServiceProviderDictionary.GetEnumerator
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.GetService(System.Type)
  name: GetService(Type)
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary_GetService_System_Type_
  commentId: M:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.GetService(System.Type)
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.GetService(System.Type)
  nameWithType: ReadOnlyServiceProviderDictionary.GetService(Type)
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.GetService*
  name: GetService
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary_GetService_
  commentId: Overload:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.GetService
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.GetService
  nameWithType: ReadOnlyServiceProviderDictionary.GetService
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Item(System.Object)
  name: this[object]
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary_Item_System_Object_
  commentId: P:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Item(System.Object)
  name.vb: this[](Object)
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.this[object]
  fullName.vb: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.this[](Object)
  nameWithType: ReadOnlyServiceProviderDictionary.this[object]
  nameWithType.vb: ReadOnlyServiceProviderDictionary.this[](Object)
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Item*
  name: this
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary_Item_
  commentId: Overload:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.this
  fullName.vb: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.this[]
  nameWithType: ReadOnlyServiceProviderDictionary.this
  nameWithType.vb: ReadOnlyServiceProviderDictionary.this[]
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Keys
  name: Keys
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary_Keys
  commentId: P:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Keys
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Keys
  nameWithType: ReadOnlyServiceProviderDictionary.Keys
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Keys*
  name: Keys
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary_Keys_
  commentId: Overload:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Keys
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Keys
  nameWithType: ReadOnlyServiceProviderDictionary.Keys
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.TryGetValue(System.Object,System.Object@)
  name: TryGetValue(object, out object)
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary_TryGetValue_System_Object_System_Object__
  commentId: M:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.TryGetValue(System.Object,System.Object@)
  name.vb: TryGetValue(Object, Object)
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.TryGetValue(object, out object)
  fullName.vb: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.TryGetValue(Object, Object)
  nameWithType: ReadOnlyServiceProviderDictionary.TryGetValue(object, out object)
  nameWithType.vb: ReadOnlyServiceProviderDictionary.TryGetValue(Object, Object)
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.TryGetValue*
  name: TryGetValue
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary_TryGetValue_
  commentId: Overload:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.TryGetValue
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.TryGetValue
  nameWithType: ReadOnlyServiceProviderDictionary.TryGetValue
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Values
  name: Values
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary_Values
  commentId: P:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Values
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Values
  nameWithType: ReadOnlyServiceProviderDictionary.Values
- uid: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Values*
  name: Values
  href: api/Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.html#Rocket_Surgery_Conventions_ReadOnlyServiceProviderDictionary_Values_
  commentId: Overload:Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Values
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ReadOnlyServiceProviderDictionary.Values
  nameWithType: ReadOnlyServiceProviderDictionary.Values
- uid: Rocket.Surgery.Conventions.Reflection
  name: Rocket.Surgery.Conventions.Reflection
  href: api/Rocket.Surgery.Conventions.Reflection.html
  commentId: N:Rocket.Surgery.Conventions.Reflection
  fullName: Rocket.Surgery.Conventions.Reflection
  nameWithType: Rocket.Surgery.Conventions.Reflection
- uid: Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory
  name: AppDomainConventionFactory
  href: api/Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.html
  commentId: T:Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory
  fullName: Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory
  nameWithType: AppDomainConventionFactory
- uid: Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.#ctor(System.AppDomain)
  name: AppDomainConventionFactory(AppDomain)
  href: api/Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.html#Rocket_Surgery_Conventions_Reflection_AppDomainConventionFactory__ctor_System_AppDomain_
  commentId: M:Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.#ctor(System.AppDomain)
  name.vb: New(AppDomain)
  fullName: Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.AppDomainConventionFactory(System.AppDomain)
  fullName.vb: Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.New(System.AppDomain)
  nameWithType: AppDomainConventionFactory.AppDomainConventionFactory(AppDomain)
  nameWithType.vb: AppDomainConventionFactory.New(AppDomain)
- uid: Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.#ctor*
  name: AppDomainConventionFactory
  href: api/Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.html#Rocket_Surgery_Conventions_Reflection_AppDomainConventionFactory__ctor_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.AppDomainConventionFactory
  fullName.vb: Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.New
  nameWithType: AppDomainConventionFactory.AppDomainConventionFactory
  nameWithType.vb: AppDomainConventionFactory.New
- uid: Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.CreateAssemblyProvider(Rocket.Surgery.Conventions.ConventionContextBuilder)
  name: CreateAssemblyProvider(ConventionContextBuilder)
  href: api/Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.html#Rocket_Surgery_Conventions_Reflection_AppDomainConventionFactory_CreateAssemblyProvider_Rocket_Surgery_Conventions_ConventionContextBuilder_
  commentId: M:Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.CreateAssemblyProvider(Rocket.Surgery.Conventions.ConventionContextBuilder)
  fullName: Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.CreateAssemblyProvider(Rocket.Surgery.Conventions.ConventionContextBuilder)
  nameWithType: AppDomainConventionFactory.CreateAssemblyProvider(ConventionContextBuilder)
- uid: Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.CreateAssemblyProvider*
  name: CreateAssemblyProvider
  href: api/Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.html#Rocket_Surgery_Conventions_Reflection_AppDomainConventionFactory_CreateAssemblyProvider_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.CreateAssemblyProvider
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.AppDomainConventionFactory.CreateAssemblyProvider
  nameWithType: AppDomainConventionFactory.CreateAssemblyProvider
- uid: Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory
  name: AssemblyConventionFactory
  href: api/Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.html
  commentId: T:Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory
  fullName: Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory
  nameWithType: AssemblyConventionFactory
- uid: Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name: AssemblyConventionFactory(IEnumerable<Assembly>)
  href: api/Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.html#Rocket_Surgery_Conventions_Reflection_AssemblyConventionFactory__ctor_System_Collections_Generic_IEnumerable_System_Reflection_Assembly__
  commentId: M:Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name.vb: New(IEnumerable(Of Assembly))
  fullName: Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.AssemblyConventionFactory(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)
  fullName.vb: Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.New(System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly))
  nameWithType: AssemblyConventionFactory.AssemblyConventionFactory(IEnumerable<Assembly>)
  nameWithType.vb: AssemblyConventionFactory.New(IEnumerable(Of Assembly))
- uid: Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.#ctor*
  name: AssemblyConventionFactory
  href: api/Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.html#Rocket_Surgery_Conventions_Reflection_AssemblyConventionFactory__ctor_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.AssemblyConventionFactory
  fullName.vb: Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.New
  nameWithType: AssemblyConventionFactory.AssemblyConventionFactory
  nameWithType.vb: AssemblyConventionFactory.New
- uid: Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.CreateAssemblyProvider(Rocket.Surgery.Conventions.ConventionContextBuilder)
  name: CreateAssemblyProvider(ConventionContextBuilder)
  href: api/Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.html#Rocket_Surgery_Conventions_Reflection_AssemblyConventionFactory_CreateAssemblyProvider_Rocket_Surgery_Conventions_ConventionContextBuilder_
  commentId: M:Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.CreateAssemblyProvider(Rocket.Surgery.Conventions.ConventionContextBuilder)
  fullName: Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.CreateAssemblyProvider(Rocket.Surgery.Conventions.ConventionContextBuilder)
  nameWithType: AssemblyConventionFactory.CreateAssemblyProvider(ConventionContextBuilder)
- uid: Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.CreateAssemblyProvider*
  name: CreateAssemblyProvider
  href: api/Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.html#Rocket_Surgery_Conventions_Reflection_AssemblyConventionFactory_CreateAssemblyProvider_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.CreateAssemblyProvider
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.AssemblyConventionFactory.CreateAssemblyProvider
  nameWithType: AssemblyConventionFactory.CreateAssemblyProvider
- uid: Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase
  name: ConventionFactoryBase
  href: api/Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase.html
  commentId: T:Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase
  fullName: Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase
  nameWithType: ConventionFactoryBase
- uid: Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase.CreateAssemblyProvider(Rocket.Surgery.Conventions.ConventionContextBuilder)
  name: CreateAssemblyProvider(ConventionContextBuilder)
  href: api/Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase.html#Rocket_Surgery_Conventions_Reflection_ConventionFactoryBase_CreateAssemblyProvider_Rocket_Surgery_Conventions_ConventionContextBuilder_
  commentId: M:Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase.CreateAssemblyProvider(Rocket.Surgery.Conventions.ConventionContextBuilder)
  fullName: Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase.CreateAssemblyProvider(Rocket.Surgery.Conventions.ConventionContextBuilder)
  nameWithType: ConventionFactoryBase.CreateAssemblyProvider(ConventionContextBuilder)
- uid: Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase.CreateAssemblyProvider*
  name: CreateAssemblyProvider
  href: api/Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase.html#Rocket_Surgery_Conventions_Reflection_ConventionFactoryBase_CreateAssemblyProvider_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase.CreateAssemblyProvider
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase.CreateAssemblyProvider
  nameWithType: ConventionFactoryBase.CreateAssemblyProvider
- uid: Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase.LoadConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  name: LoadConventions(ConventionContextBuilder)
  href: api/Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase.html#Rocket_Surgery_Conventions_Reflection_ConventionFactoryBase_LoadConventions_Rocket_Surgery_Conventions_ConventionContextBuilder_
  commentId: M:Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase.LoadConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  fullName: Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase.LoadConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  nameWithType: ConventionFactoryBase.LoadConventions(ConventionContextBuilder)
- uid: Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase.LoadConventions*
  name: LoadConventions
  href: api/Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase.html#Rocket_Surgery_Conventions_Reflection_ConventionFactoryBase_LoadConventions_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase.LoadConventions
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ConventionFactoryBase.LoadConventions
  nameWithType: ConventionFactoryBase.LoadConventions
- uid: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector
  name: IAssemblyProviderAssemblySelector
  href: api/Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.html
  commentId: T:Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector
  fullName: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector
  nameWithType: IAssemblyProviderAssemblySelector
- uid: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblies
  name: FromAssemblies()
  href: api/Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_IAssemblyProviderAssemblySelector_FromAssemblies
  commentId: M:Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblies
  fullName: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblies()
  nameWithType: IAssemblyProviderAssemblySelector.FromAssemblies()
- uid: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblies*
  name: FromAssemblies
  href: api/Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_IAssemblyProviderAssemblySelector_FromAssemblies_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblies
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblies
  nameWithType: IAssemblyProviderAssemblySelector.FromAssemblies
- uid: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssembly
  name: FromAssembly()
  href: api/Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_IAssemblyProviderAssemblySelector_FromAssembly
  commentId: M:Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssembly
  fullName: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssembly()
  nameWithType: IAssemblyProviderAssemblySelector.FromAssembly()
- uid: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssembly*
  name: FromAssembly
  href: api/Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_IAssemblyProviderAssemblySelector_FromAssembly_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssembly
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssembly
  nameWithType: IAssemblyProviderAssemblySelector.FromAssembly
- uid: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyDependenciesOf(System.Type)
  name: FromAssemblyDependenciesOf(Type)
  href: api/Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_IAssemblyProviderAssemblySelector_FromAssemblyDependenciesOf_System_Type_
  commentId: M:Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyDependenciesOf(System.Type)
  fullName: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyDependenciesOf(System.Type)
  nameWithType: IAssemblyProviderAssemblySelector.FromAssemblyDependenciesOf(Type)
- uid: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyDependenciesOf*
  name: FromAssemblyDependenciesOf
  href: api/Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_IAssemblyProviderAssemblySelector_FromAssemblyDependenciesOf_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyDependenciesOf
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyDependenciesOf
  nameWithType: IAssemblyProviderAssemblySelector.FromAssemblyDependenciesOf
- uid: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyDependenciesOf``1
  name: FromAssemblyDependenciesOf<T>()
  href: api/Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_IAssemblyProviderAssemblySelector_FromAssemblyDependenciesOf__1
  commentId: M:Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyDependenciesOf``1
  name.vb: FromAssemblyDependenciesOf(Of T)()
  fullName: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyDependenciesOf<T>()
  fullName.vb: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyDependenciesOf(Of T)()
  nameWithType: IAssemblyProviderAssemblySelector.FromAssemblyDependenciesOf<T>()
  nameWithType.vb: IAssemblyProviderAssemblySelector.FromAssemblyDependenciesOf(Of T)()
- uid: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyOf(System.Type)
  name: FromAssemblyOf(Type)
  href: api/Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_IAssemblyProviderAssemblySelector_FromAssemblyOf_System_Type_
  commentId: M:Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyOf(System.Type)
  fullName: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyOf(System.Type)
  nameWithType: IAssemblyProviderAssemblySelector.FromAssemblyOf(Type)
- uid: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyOf*
  name: FromAssemblyOf
  href: api/Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_IAssemblyProviderAssemblySelector_FromAssemblyOf_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyOf
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyOf
  nameWithType: IAssemblyProviderAssemblySelector.FromAssemblyOf
- uid: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyOf``1
  name: FromAssemblyOf<T>()
  href: api/Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_IAssemblyProviderAssemblySelector_FromAssemblyOf__1
  commentId: M:Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyOf``1
  name.vb: FromAssemblyOf(Of T)()
  fullName: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyOf<T>()
  fullName.vb: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.FromAssemblyOf(Of T)()
  nameWithType: IAssemblyProviderAssemblySelector.FromAssemblyOf<T>()
  nameWithType.vb: IAssemblyProviderAssemblySelector.FromAssemblyOf(Of T)()
- uid: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.IncludeSystemAssemblies
  name: IncludeSystemAssemblies()
  href: api/Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_IAssemblyProviderAssemblySelector_IncludeSystemAssemblies
  commentId: M:Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.IncludeSystemAssemblies
  fullName: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.IncludeSystemAssemblies()
  nameWithType: IAssemblyProviderAssemblySelector.IncludeSystemAssemblies()
- uid: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.IncludeSystemAssemblies*
  name: IncludeSystemAssemblies
  href: api/Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_IAssemblyProviderAssemblySelector_IncludeSystemAssemblies_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.IncludeSystemAssemblies
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.IncludeSystemAssemblies
  nameWithType: IAssemblyProviderAssemblySelector.IncludeSystemAssemblies
- uid: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.NotFromAssemblyOf(System.Type)
  name: NotFromAssemblyOf(Type)
  href: api/Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_IAssemblyProviderAssemblySelector_NotFromAssemblyOf_System_Type_
  commentId: M:Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.NotFromAssemblyOf(System.Type)
  fullName: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.NotFromAssemblyOf(System.Type)
  nameWithType: IAssemblyProviderAssemblySelector.NotFromAssemblyOf(Type)
- uid: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.NotFromAssemblyOf*
  name: NotFromAssemblyOf
  href: api/Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_IAssemblyProviderAssemblySelector_NotFromAssemblyOf_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.NotFromAssemblyOf
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.NotFromAssemblyOf
  nameWithType: IAssemblyProviderAssemblySelector.NotFromAssemblyOf
- uid: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.NotFromAssemblyOf``1
  name: NotFromAssemblyOf<T>()
  href: api/Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_IAssemblyProviderAssemblySelector_NotFromAssemblyOf__1
  commentId: M:Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.NotFromAssemblyOf``1
  name.vb: NotFromAssemblyOf(Of T)()
  fullName: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.NotFromAssemblyOf<T>()
  fullName.vb: Rocket.Surgery.Conventions.Reflection.IAssemblyProviderAssemblySelector.NotFromAssemblyOf(Of T)()
  nameWithType: IAssemblyProviderAssemblySelector.NotFromAssemblyOf<T>()
  nameWithType.vb: IAssemblyProviderAssemblySelector.NotFromAssemblyOf(Of T)()
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter
  name: ITypeFilter
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html
  commentId: T:Rocket.Surgery.Conventions.Reflection.ITypeFilter
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter
  nameWithType: ITypeFilter
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.AssignableTo(System.Type)
  name: AssignableTo(Type)
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_AssignableTo_System_Type_
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.AssignableTo(System.Type)
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.AssignableTo(System.Type)
  nameWithType: ITypeFilter.AssignableTo(Type)
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.AssignableTo*
  name: AssignableTo
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_AssignableTo_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.AssignableTo
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.AssignableTo
  nameWithType: ITypeFilter.AssignableTo
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.AssignableToAny(System.Type,System.Type[])
  name: AssignableToAny(Type, params Type[])
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_AssignableToAny_System_Type_System_Type___
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.AssignableToAny(System.Type,System.Type[])
  name.vb: AssignableToAny(Type, ParamArray Type())
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.AssignableToAny(System.Type, params System.Type[])
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.AssignableToAny(System.Type, ParamArray System.Type())
  nameWithType: ITypeFilter.AssignableToAny(Type, params Type[])
  nameWithType.vb: ITypeFilter.AssignableToAny(Type, ParamArray Type())
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.AssignableToAny*
  name: AssignableToAny
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_AssignableToAny_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.AssignableToAny
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.AssignableToAny
  nameWithType: ITypeFilter.AssignableToAny
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.AssignableTo``1
  name: AssignableTo<T>()
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_AssignableTo__1
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.AssignableTo``1
  name.vb: AssignableTo(Of T)()
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.AssignableTo<T>()
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.AssignableTo(Of T)()
  nameWithType: ITypeFilter.AssignableTo<T>()
  nameWithType.vb: ITypeFilter.AssignableTo(Of T)()
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.Contains(System.String,System.String[])
  name: Contains(string, params string[])
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_Contains_System_String_System_String___
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.Contains(System.String,System.String[])
  name.vb: Contains(String, ParamArray String())
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.Contains(string, params string[])
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.Contains(String, ParamArray String())
  nameWithType: ITypeFilter.Contains(string, params string[])
  nameWithType.vb: ITypeFilter.Contains(String, ParamArray String())
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.Contains*
  name: Contains
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_Contains_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.Contains
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.Contains
  nameWithType: ITypeFilter.Contains
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.EndsWith(System.String,System.String[])
  name: EndsWith(string, params string[])
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_EndsWith_System_String_System_String___
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.EndsWith(System.String,System.String[])
  name.vb: EndsWith(String, ParamArray String())
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.EndsWith(string, params string[])
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.EndsWith(String, ParamArray String())
  nameWithType: ITypeFilter.EndsWith(string, params string[])
  nameWithType.vb: ITypeFilter.EndsWith(String, ParamArray String())
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.EndsWith*
  name: EndsWith
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_EndsWith_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.EndsWith
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.EndsWith
  nameWithType: ITypeFilter.EndsWith
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaceOf(System.Type,System.Type[])
  name: InExactNamespaceOf(Type, params Type[])
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_InExactNamespaceOf_System_Type_System_Type___
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaceOf(System.Type,System.Type[])
  name.vb: InExactNamespaceOf(Type, ParamArray Type())
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaceOf(System.Type, params System.Type[])
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaceOf(System.Type, ParamArray System.Type())
  nameWithType: ITypeFilter.InExactNamespaceOf(Type, params Type[])
  nameWithType.vb: ITypeFilter.InExactNamespaceOf(Type, ParamArray Type())
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaceOf*
  name: InExactNamespaceOf
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_InExactNamespaceOf_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaceOf
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaceOf
  nameWithType: ITypeFilter.InExactNamespaceOf
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaceOf``1
  name: InExactNamespaceOf<T>()
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_InExactNamespaceOf__1
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaceOf``1
  name.vb: InExactNamespaceOf(Of T)()
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaceOf<T>()
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaceOf(Of T)()
  nameWithType: ITypeFilter.InExactNamespaceOf<T>()
  nameWithType.vb: ITypeFilter.InExactNamespaceOf(Of T)()
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaces(System.String,System.String[])
  name: InExactNamespaces(string, params string[])
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_InExactNamespaces_System_String_System_String___
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaces(System.String,System.String[])
  name.vb: InExactNamespaces(String, ParamArray String())
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaces(string, params string[])
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaces(String, ParamArray String())
  nameWithType: ITypeFilter.InExactNamespaces(string, params string[])
  nameWithType.vb: ITypeFilter.InExactNamespaces(String, ParamArray String())
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaces*
  name: InExactNamespaces
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_InExactNamespaces_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaces
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InExactNamespaces
  nameWithType: ITypeFilter.InExactNamespaces
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaceOf(System.Type,System.Type[])
  name: InNamespaceOf(Type, params Type[])
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_InNamespaceOf_System_Type_System_Type___
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaceOf(System.Type,System.Type[])
  name.vb: InNamespaceOf(Type, ParamArray Type())
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaceOf(System.Type, params System.Type[])
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaceOf(System.Type, ParamArray System.Type())
  nameWithType: ITypeFilter.InNamespaceOf(Type, params Type[])
  nameWithType.vb: ITypeFilter.InNamespaceOf(Type, ParamArray Type())
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaceOf*
  name: InNamespaceOf
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_InNamespaceOf_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaceOf
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaceOf
  nameWithType: ITypeFilter.InNamespaceOf
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaceOf``1
  name: InNamespaceOf<T>()
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_InNamespaceOf__1
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaceOf``1
  name.vb: InNamespaceOf(Of T)()
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaceOf<T>()
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaceOf(Of T)()
  nameWithType: ITypeFilter.InNamespaceOf<T>()
  nameWithType.vb: ITypeFilter.InNamespaceOf(Of T)()
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaces(System.String,System.String[])
  name: InNamespaces(string, params string[])
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_InNamespaces_System_String_System_String___
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaces(System.String,System.String[])
  name.vb: InNamespaces(String, ParamArray String())
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaces(string, params string[])
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaces(String, ParamArray String())
  nameWithType: ITypeFilter.InNamespaces(string, params string[])
  nameWithType.vb: ITypeFilter.InNamespaces(String, ParamArray String())
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaces*
  name: InNamespaces
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_InNamespaces_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaces
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InNamespaces
  nameWithType: ITypeFilter.InNamespaces
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InfoOf(Rocket.Surgery.Conventions.Reflection.TypeInfoFilter,Rocket.Surgery.Conventions.Reflection.TypeInfoFilter[])
  name: InfoOf(TypeInfoFilter, params TypeInfoFilter[])
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_InfoOf_Rocket_Surgery_Conventions_Reflection_TypeInfoFilter_Rocket_Surgery_Conventions_Reflection_TypeInfoFilter___
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.InfoOf(Rocket.Surgery.Conventions.Reflection.TypeInfoFilter,Rocket.Surgery.Conventions.Reflection.TypeInfoFilter[])
  name.vb: InfoOf(TypeInfoFilter, ParamArray TypeInfoFilter())
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InfoOf(Rocket.Surgery.Conventions.Reflection.TypeInfoFilter, params Rocket.Surgery.Conventions.Reflection.TypeInfoFilter[])
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InfoOf(Rocket.Surgery.Conventions.Reflection.TypeInfoFilter, ParamArray Rocket.Surgery.Conventions.Reflection.TypeInfoFilter())
  nameWithType: ITypeFilter.InfoOf(TypeInfoFilter, params TypeInfoFilter[])
  nameWithType.vb: ITypeFilter.InfoOf(TypeInfoFilter, ParamArray TypeInfoFilter())
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InfoOf*
  name: InfoOf
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_InfoOf_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.InfoOf
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.InfoOf
  nameWithType: ITypeFilter.InfoOf
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.KindOf(Rocket.Surgery.Conventions.Reflection.TypeKindFilter,Rocket.Surgery.Conventions.Reflection.TypeKindFilter[])
  name: KindOf(TypeKindFilter, params TypeKindFilter[])
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_KindOf_Rocket_Surgery_Conventions_Reflection_TypeKindFilter_Rocket_Surgery_Conventions_Reflection_TypeKindFilter___
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.KindOf(Rocket.Surgery.Conventions.Reflection.TypeKindFilter,Rocket.Surgery.Conventions.Reflection.TypeKindFilter[])
  name.vb: KindOf(TypeKindFilter, ParamArray TypeKindFilter())
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.KindOf(Rocket.Surgery.Conventions.Reflection.TypeKindFilter, params Rocket.Surgery.Conventions.Reflection.TypeKindFilter[])
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.KindOf(Rocket.Surgery.Conventions.Reflection.TypeKindFilter, ParamArray Rocket.Surgery.Conventions.Reflection.TypeKindFilter())
  nameWithType: ITypeFilter.KindOf(TypeKindFilter, params TypeKindFilter[])
  nameWithType.vb: ITypeFilter.KindOf(TypeKindFilter, ParamArray TypeKindFilter())
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.KindOf*
  name: KindOf
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_KindOf_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.KindOf
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.KindOf
  nameWithType: ITypeFilter.KindOf
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotAssignableTo(System.Type)
  name: NotAssignableTo(Type)
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_NotAssignableTo_System_Type_
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotAssignableTo(System.Type)
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotAssignableTo(System.Type)
  nameWithType: ITypeFilter.NotAssignableTo(Type)
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotAssignableTo*
  name: NotAssignableTo
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_NotAssignableTo_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotAssignableTo
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotAssignableTo
  nameWithType: ITypeFilter.NotAssignableTo
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotAssignableToAny(System.Type,System.Type[])
  name: NotAssignableToAny(Type, params Type[])
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_NotAssignableToAny_System_Type_System_Type___
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotAssignableToAny(System.Type,System.Type[])
  name.vb: NotAssignableToAny(Type, ParamArray Type())
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotAssignableToAny(System.Type, params System.Type[])
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotAssignableToAny(System.Type, ParamArray System.Type())
  nameWithType: ITypeFilter.NotAssignableToAny(Type, params Type[])
  nameWithType.vb: ITypeFilter.NotAssignableToAny(Type, ParamArray Type())
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotAssignableToAny*
  name: NotAssignableToAny
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_NotAssignableToAny_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotAssignableToAny
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotAssignableToAny
  nameWithType: ITypeFilter.NotAssignableToAny
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotAssignableTo``1
  name: NotAssignableTo<T>()
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_NotAssignableTo__1
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotAssignableTo``1
  name.vb: NotAssignableTo(Of T)()
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotAssignableTo<T>()
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotAssignableTo(Of T)()
  nameWithType: ITypeFilter.NotAssignableTo<T>()
  nameWithType.vb: ITypeFilter.NotAssignableTo(Of T)()
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaceOf(System.Type,System.Type[])
  name: NotInNamespaceOf(Type, params Type[])
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_NotInNamespaceOf_System_Type_System_Type___
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaceOf(System.Type,System.Type[])
  name.vb: NotInNamespaceOf(Type, ParamArray Type())
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaceOf(System.Type, params System.Type[])
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaceOf(System.Type, ParamArray System.Type())
  nameWithType: ITypeFilter.NotInNamespaceOf(Type, params Type[])
  nameWithType.vb: ITypeFilter.NotInNamespaceOf(Type, ParamArray Type())
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaceOf*
  name: NotInNamespaceOf
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_NotInNamespaceOf_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaceOf
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaceOf
  nameWithType: ITypeFilter.NotInNamespaceOf
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaceOf``1
  name: NotInNamespaceOf<T>()
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_NotInNamespaceOf__1
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaceOf``1
  name.vb: NotInNamespaceOf(Of T)()
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaceOf<T>()
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaceOf(Of T)()
  nameWithType: ITypeFilter.NotInNamespaceOf<T>()
  nameWithType.vb: ITypeFilter.NotInNamespaceOf(Of T)()
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaces(System.String,System.String[])
  name: NotInNamespaces(string, params string[])
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_NotInNamespaces_System_String_System_String___
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaces(System.String,System.String[])
  name.vb: NotInNamespaces(String, ParamArray String())
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaces(string, params string[])
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaces(String, ParamArray String())
  nameWithType: ITypeFilter.NotInNamespaces(string, params string[])
  nameWithType.vb: ITypeFilter.NotInNamespaces(String, ParamArray String())
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaces*
  name: NotInNamespaces
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_NotInNamespaces_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaces
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInNamespaces
  nameWithType: ITypeFilter.NotInNamespaces
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInfoOf(Rocket.Surgery.Conventions.Reflection.TypeInfoFilter,Rocket.Surgery.Conventions.Reflection.TypeInfoFilter[])
  name: NotInfoOf(TypeInfoFilter, params TypeInfoFilter[])
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_NotInfoOf_Rocket_Surgery_Conventions_Reflection_TypeInfoFilter_Rocket_Surgery_Conventions_Reflection_TypeInfoFilter___
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInfoOf(Rocket.Surgery.Conventions.Reflection.TypeInfoFilter,Rocket.Surgery.Conventions.Reflection.TypeInfoFilter[])
  name.vb: NotInfoOf(TypeInfoFilter, ParamArray TypeInfoFilter())
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInfoOf(Rocket.Surgery.Conventions.Reflection.TypeInfoFilter, params Rocket.Surgery.Conventions.Reflection.TypeInfoFilter[])
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInfoOf(Rocket.Surgery.Conventions.Reflection.TypeInfoFilter, ParamArray Rocket.Surgery.Conventions.Reflection.TypeInfoFilter())
  nameWithType: ITypeFilter.NotInfoOf(TypeInfoFilter, params TypeInfoFilter[])
  nameWithType.vb: ITypeFilter.NotInfoOf(TypeInfoFilter, ParamArray TypeInfoFilter())
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInfoOf*
  name: NotInfoOf
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_NotInfoOf_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInfoOf
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotInfoOf
  nameWithType: ITypeFilter.NotInfoOf
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotKindOf(Rocket.Surgery.Conventions.Reflection.TypeKindFilter,Rocket.Surgery.Conventions.Reflection.TypeKindFilter[])
  name: NotKindOf(TypeKindFilter, params TypeKindFilter[])
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_NotKindOf_Rocket_Surgery_Conventions_Reflection_TypeKindFilter_Rocket_Surgery_Conventions_Reflection_TypeKindFilter___
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotKindOf(Rocket.Surgery.Conventions.Reflection.TypeKindFilter,Rocket.Surgery.Conventions.Reflection.TypeKindFilter[])
  name.vb: NotKindOf(TypeKindFilter, ParamArray TypeKindFilter())
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotKindOf(Rocket.Surgery.Conventions.Reflection.TypeKindFilter, params Rocket.Surgery.Conventions.Reflection.TypeKindFilter[])
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotKindOf(Rocket.Surgery.Conventions.Reflection.TypeKindFilter, ParamArray Rocket.Surgery.Conventions.Reflection.TypeKindFilter())
  nameWithType: ITypeFilter.NotKindOf(TypeKindFilter, params TypeKindFilter[])
  nameWithType.vb: ITypeFilter.NotKindOf(TypeKindFilter, ParamArray TypeKindFilter())
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotKindOf*
  name: NotKindOf
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_NotKindOf_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotKindOf
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.NotKindOf
  nameWithType: ITypeFilter.NotKindOf
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.StartsWith(System.String,System.String[])
  name: StartsWith(string, params string[])
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_StartsWith_System_String_System_String___
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.StartsWith(System.String,System.String[])
  name.vb: StartsWith(String, ParamArray String())
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.StartsWith(string, params string[])
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.StartsWith(String, ParamArray String())
  nameWithType: ITypeFilter.StartsWith(string, params string[])
  nameWithType.vb: ITypeFilter.StartsWith(String, ParamArray String())
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.StartsWith*
  name: StartsWith
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_StartsWith_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.StartsWith
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.StartsWith
  nameWithType: ITypeFilter.StartsWith
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithAttribute(System.String)
  name: WithAttribute(string?)
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_WithAttribute_System_String_
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithAttribute(System.String)
  name.vb: WithAttribute(String)
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithAttribute(string?)
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithAttribute(String)
  nameWithType: ITypeFilter.WithAttribute(string?)
  nameWithType.vb: ITypeFilter.WithAttribute(String)
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithAttribute(System.Type)
  name: WithAttribute(Type)
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_WithAttribute_System_Type_
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithAttribute(System.Type)
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithAttribute(System.Type)
  nameWithType: ITypeFilter.WithAttribute(Type)
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithAttribute*
  name: WithAttribute
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_WithAttribute_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithAttribute
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithAttribute
  nameWithType: ITypeFilter.WithAttribute
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithAttribute``1
  name: WithAttribute<T>()
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_WithAttribute__1
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithAttribute``1
  name.vb: WithAttribute(Of T)()
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithAttribute<T>()
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithAttribute(Of T)()
  nameWithType: ITypeFilter.WithAttribute<T>()
  nameWithType.vb: ITypeFilter.WithAttribute(Of T)()
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithoutAttribute(System.String)
  name: WithoutAttribute(string?)
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_WithoutAttribute_System_String_
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithoutAttribute(System.String)
  name.vb: WithoutAttribute(String)
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithoutAttribute(string?)
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithoutAttribute(String)
  nameWithType: ITypeFilter.WithoutAttribute(string?)
  nameWithType.vb: ITypeFilter.WithoutAttribute(String)
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithoutAttribute(System.Type)
  name: WithoutAttribute(Type)
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_WithoutAttribute_System_Type_
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithoutAttribute(System.Type)
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithoutAttribute(System.Type)
  nameWithType: ITypeFilter.WithoutAttribute(Type)
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithoutAttribute*
  name: WithoutAttribute
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_WithoutAttribute_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithoutAttribute
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithoutAttribute
  nameWithType: ITypeFilter.WithoutAttribute
- uid: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithoutAttribute``1
  name: WithoutAttribute<T>()
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeFilter.html#Rocket_Surgery_Conventions_Reflection_ITypeFilter_WithoutAttribute__1
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithoutAttribute``1
  name.vb: WithoutAttribute(Of T)()
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithoutAttribute<T>()
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeFilter.WithoutAttribute(Of T)()
  nameWithType: ITypeFilter.WithoutAttribute<T>()
  nameWithType.vb: ITypeFilter.WithoutAttribute(Of T)()
- uid: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector
  name: ITypeProviderAssemblySelector
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.html
  commentId: T:Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector
  nameWithType: ITypeProviderAssemblySelector
- uid: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblies
  name: FromAssemblies()
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_ITypeProviderAssemblySelector_FromAssemblies
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblies
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblies()
  nameWithType: ITypeProviderAssemblySelector.FromAssemblies()
- uid: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblies*
  name: FromAssemblies
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_ITypeProviderAssemblySelector_FromAssemblies_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblies
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblies
  nameWithType: ITypeProviderAssemblySelector.FromAssemblies
- uid: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssembly
  name: FromAssembly()
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_ITypeProviderAssemblySelector_FromAssembly
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssembly
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssembly()
  nameWithType: ITypeProviderAssemblySelector.FromAssembly()
- uid: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssembly*
  name: FromAssembly
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_ITypeProviderAssemblySelector_FromAssembly_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssembly
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssembly
  nameWithType: ITypeProviderAssemblySelector.FromAssembly
- uid: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyDependenciesOf(System.Type)
  name: FromAssemblyDependenciesOf(Type)
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_ITypeProviderAssemblySelector_FromAssemblyDependenciesOf_System_Type_
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyDependenciesOf(System.Type)
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyDependenciesOf(System.Type)
  nameWithType: ITypeProviderAssemblySelector.FromAssemblyDependenciesOf(Type)
- uid: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyDependenciesOf*
  name: FromAssemblyDependenciesOf
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_ITypeProviderAssemblySelector_FromAssemblyDependenciesOf_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyDependenciesOf
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyDependenciesOf
  nameWithType: ITypeProviderAssemblySelector.FromAssemblyDependenciesOf
- uid: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyDependenciesOf``1
  name: FromAssemblyDependenciesOf<T>()
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_ITypeProviderAssemblySelector_FromAssemblyDependenciesOf__1
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyDependenciesOf``1
  name.vb: FromAssemblyDependenciesOf(Of T)()
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyDependenciesOf<T>()
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyDependenciesOf(Of T)()
  nameWithType: ITypeProviderAssemblySelector.FromAssemblyDependenciesOf<T>()
  nameWithType.vb: ITypeProviderAssemblySelector.FromAssemblyDependenciesOf(Of T)()
- uid: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyOf(System.Type)
  name: FromAssemblyOf(Type)
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_ITypeProviderAssemblySelector_FromAssemblyOf_System_Type_
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyOf(System.Type)
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyOf(System.Type)
  nameWithType: ITypeProviderAssemblySelector.FromAssemblyOf(Type)
- uid: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyOf*
  name: FromAssemblyOf
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_ITypeProviderAssemblySelector_FromAssemblyOf_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyOf
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyOf
  nameWithType: ITypeProviderAssemblySelector.FromAssemblyOf
- uid: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyOf``1
  name: FromAssemblyOf<T>()
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_ITypeProviderAssemblySelector_FromAssemblyOf__1
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyOf``1
  name.vb: FromAssemblyOf(Of T)()
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyOf<T>()
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.FromAssemblyOf(Of T)()
  nameWithType: ITypeProviderAssemblySelector.FromAssemblyOf<T>()
  nameWithType.vb: ITypeProviderAssemblySelector.FromAssemblyOf(Of T)()
- uid: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.IncludeSystemAssemblies
  name: IncludeSystemAssemblies()
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_ITypeProviderAssemblySelector_IncludeSystemAssemblies
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.IncludeSystemAssemblies
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.IncludeSystemAssemblies()
  nameWithType: ITypeProviderAssemblySelector.IncludeSystemAssemblies()
- uid: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.IncludeSystemAssemblies*
  name: IncludeSystemAssemblies
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_ITypeProviderAssemblySelector_IncludeSystemAssemblies_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.IncludeSystemAssemblies
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.IncludeSystemAssemblies
  nameWithType: ITypeProviderAssemblySelector.IncludeSystemAssemblies
- uid: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.NotFromAssemblyOf(System.Type)
  name: NotFromAssemblyOf(Type)
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_ITypeProviderAssemblySelector_NotFromAssemblyOf_System_Type_
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.NotFromAssemblyOf(System.Type)
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.NotFromAssemblyOf(System.Type)
  nameWithType: ITypeProviderAssemblySelector.NotFromAssemblyOf(Type)
- uid: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.NotFromAssemblyOf*
  name: NotFromAssemblyOf
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_ITypeProviderAssemblySelector_NotFromAssemblyOf_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.NotFromAssemblyOf
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.NotFromAssemblyOf
  nameWithType: ITypeProviderAssemblySelector.NotFromAssemblyOf
- uid: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.NotFromAssemblyOf``1
  name: NotFromAssemblyOf<T>()
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.html#Rocket_Surgery_Conventions_Reflection_ITypeProviderAssemblySelector_NotFromAssemblyOf__1
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.NotFromAssemblyOf``1
  name.vb: NotFromAssemblyOf(Of T)()
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.NotFromAssemblyOf<T>()
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeProviderAssemblySelector.NotFromAssemblyOf(Of T)()
  nameWithType: ITypeProviderAssemblySelector.NotFromAssemblyOf<T>()
  nameWithType.vb: ITypeProviderAssemblySelector.NotFromAssemblyOf(Of T)()
- uid: Rocket.Surgery.Conventions.Reflection.ITypeSelector
  name: ITypeSelector
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeSelector.html
  commentId: T:Rocket.Surgery.Conventions.Reflection.ITypeSelector
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeSelector
  nameWithType: ITypeSelector
- uid: Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes
  name: GetTypes()
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeSelector.html#Rocket_Surgery_Conventions_Reflection_ITypeSelector_GetTypes
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes()
  nameWithType: ITypeSelector.GetTypes()
- uid: Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes(System.Action{Rocket.Surgery.Conventions.Reflection.ITypeFilter})
  name: GetTypes(Action<ITypeFilter>)
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeSelector.html#Rocket_Surgery_Conventions_Reflection_ITypeSelector_GetTypes_System_Action_Rocket_Surgery_Conventions_Reflection_ITypeFilter__
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes(System.Action{Rocket.Surgery.Conventions.Reflection.ITypeFilter})
  name.vb: GetTypes(Action(Of ITypeFilter))
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes(System.Action<Rocket.Surgery.Conventions.Reflection.ITypeFilter>)
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes(System.Action(Of Rocket.Surgery.Conventions.Reflection.ITypeFilter))
  nameWithType: ITypeSelector.GetTypes(Action<ITypeFilter>)
  nameWithType.vb: ITypeSelector.GetTypes(Action(Of ITypeFilter))
- uid: Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes(System.Boolean)
  name: GetTypes(bool)
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeSelector.html#Rocket_Surgery_Conventions_Reflection_ITypeSelector_GetTypes_System_Boolean_
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes(System.Boolean)
  name.vb: GetTypes(Boolean)
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes(bool)
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes(Boolean)
  nameWithType: ITypeSelector.GetTypes(bool)
  nameWithType.vb: ITypeSelector.GetTypes(Boolean)
- uid: Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes(System.Boolean,System.Action{Rocket.Surgery.Conventions.Reflection.ITypeFilter})
  name: GetTypes(bool, Action<ITypeFilter>)
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeSelector.html#Rocket_Surgery_Conventions_Reflection_ITypeSelector_GetTypes_System_Boolean_System_Action_Rocket_Surgery_Conventions_Reflection_ITypeFilter__
  commentId: M:Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes(System.Boolean,System.Action{Rocket.Surgery.Conventions.Reflection.ITypeFilter})
  name.vb: GetTypes(Boolean, Action(Of ITypeFilter))
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes(bool, System.Action<Rocket.Surgery.Conventions.Reflection.ITypeFilter>)
  fullName.vb: Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes(Boolean, System.Action(Of Rocket.Surgery.Conventions.Reflection.ITypeFilter))
  nameWithType: ITypeSelector.GetTypes(bool, Action<ITypeFilter>)
  nameWithType.vb: ITypeSelector.GetTypes(Boolean, Action(Of ITypeFilter))
- uid: Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes*
  name: GetTypes
  href: api/Rocket.Surgery.Conventions.Reflection.ITypeSelector.html#Rocket_Surgery_Conventions_Reflection_ITypeSelector_GetTypes_
  commentId: Overload:Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Reflection.ITypeSelector.GetTypes
  nameWithType: ITypeSelector.GetTypes
- uid: Rocket.Surgery.Conventions.Reflection.TypeInfoFilter
  name: TypeInfoFilter
  href: api/Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.html
  commentId: T:Rocket.Surgery.Conventions.Reflection.TypeInfoFilter
  fullName: Rocket.Surgery.Conventions.Reflection.TypeInfoFilter
  nameWithType: TypeInfoFilter
- uid: Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.Abstract
  name: Abstract
  href: api/Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.html#Rocket_Surgery_Conventions_Reflection_TypeInfoFilter_Abstract
  commentId: F:Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.Abstract
  fullName: Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.Abstract
  nameWithType: TypeInfoFilter.Abstract
- uid: Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.GenericType
  name: GenericType
  href: api/Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.html#Rocket_Surgery_Conventions_Reflection_TypeInfoFilter_GenericType
  commentId: F:Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.GenericType
  fullName: Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.GenericType
  nameWithType: TypeInfoFilter.GenericType
- uid: Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.Sealed
  name: Sealed
  href: api/Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.html#Rocket_Surgery_Conventions_Reflection_TypeInfoFilter_Sealed
  commentId: F:Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.Sealed
  fullName: Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.Sealed
  nameWithType: TypeInfoFilter.Sealed
- uid: Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.Unknown
  name: Unknown
  href: api/Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.html#Rocket_Surgery_Conventions_Reflection_TypeInfoFilter_Unknown
  commentId: F:Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.Unknown
  fullName: Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.Unknown
  nameWithType: TypeInfoFilter.Unknown
- uid: Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.ValueType
  name: ValueType
  href: api/Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.html#Rocket_Surgery_Conventions_Reflection_TypeInfoFilter_ValueType
  commentId: F:Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.ValueType
  fullName: Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.ValueType
  nameWithType: TypeInfoFilter.ValueType
- uid: Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.Visible
  name: Visible
  href: api/Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.html#Rocket_Surgery_Conventions_Reflection_TypeInfoFilter_Visible
  commentId: F:Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.Visible
  fullName: Rocket.Surgery.Conventions.Reflection.TypeInfoFilter.Visible
  nameWithType: TypeInfoFilter.Visible
- uid: Rocket.Surgery.Conventions.Reflection.TypeKindFilter
  name: TypeKindFilter
  href: api/Rocket.Surgery.Conventions.Reflection.TypeKindFilter.html
  commentId: T:Rocket.Surgery.Conventions.Reflection.TypeKindFilter
  fullName: Rocket.Surgery.Conventions.Reflection.TypeKindFilter
  nameWithType: TypeKindFilter
- uid: Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Array
  name: Array
  href: api/Rocket.Surgery.Conventions.Reflection.TypeKindFilter.html#Rocket_Surgery_Conventions_Reflection_TypeKindFilter_Array
  commentId: F:Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Array
  fullName: Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Array
  nameWithType: TypeKindFilter.Array
- uid: Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Class
  name: Class
  href: api/Rocket.Surgery.Conventions.Reflection.TypeKindFilter.html#Rocket_Surgery_Conventions_Reflection_TypeKindFilter_Class
  commentId: F:Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Class
  fullName: Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Class
  nameWithType: TypeKindFilter.Class
- uid: Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Delegate
  name: Delegate
  href: api/Rocket.Surgery.Conventions.Reflection.TypeKindFilter.html#Rocket_Surgery_Conventions_Reflection_TypeKindFilter_Delegate
  commentId: F:Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Delegate
  fullName: Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Delegate
  nameWithType: TypeKindFilter.Delegate
- uid: Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Enum
  name: Enum
  href: api/Rocket.Surgery.Conventions.Reflection.TypeKindFilter.html#Rocket_Surgery_Conventions_Reflection_TypeKindFilter_Enum
  commentId: F:Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Enum
  fullName: Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Enum
  nameWithType: TypeKindFilter.Enum
- uid: Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Interface
  name: Interface
  href: api/Rocket.Surgery.Conventions.Reflection.TypeKindFilter.html#Rocket_Surgery_Conventions_Reflection_TypeKindFilter_Interface
  commentId: F:Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Interface
  fullName: Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Interface
  nameWithType: TypeKindFilter.Interface
- uid: Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Struct
  name: Struct
  href: api/Rocket.Surgery.Conventions.Reflection.TypeKindFilter.html#Rocket_Surgery_Conventions_Reflection_TypeKindFilter_Struct
  commentId: F:Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Struct
  fullName: Rocket.Surgery.Conventions.Reflection.TypeKindFilter.Struct
  nameWithType: TypeKindFilter.Struct
- uid: Rocket.Surgery.Conventions.RocketSurgeryConfigurationExtensions
  name: RocketSurgeryConfigurationExtensions
  href: api/Rocket.Surgery.Conventions.RocketSurgeryConfigurationExtensions.html
  commentId: T:Rocket.Surgery.Conventions.RocketSurgeryConfigurationExtensions
  fullName: Rocket.Surgery.Conventions.RocketSurgeryConfigurationExtensions
  nameWithType: RocketSurgeryConfigurationExtensions
- uid: Rocket.Surgery.Conventions.RocketSurgeryConfigurationExtensions.ApplyConventionsAsync(Microsoft.Extensions.Configuration.IConfigurationBuilder,Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,System.Threading.CancellationToken)
  name: ApplyConventionsAsync(IConfigurationBuilder, IConventionContext, IConfiguration?, CancellationToken)
  href: api/Rocket.Surgery.Conventions.RocketSurgeryConfigurationExtensions.html#Rocket_Surgery_Conventions_RocketSurgeryConfigurationExtensions_ApplyConventionsAsync_Microsoft_Extensions_Configuration_IConfigurationBuilder_Rocket_Surgery_Conventions_IConventionContext_Microsoft_Extensions_Configuration_IConfiguration_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.RocketSurgeryConfigurationExtensions.ApplyConventionsAsync(Microsoft.Extensions.Configuration.IConfigurationBuilder,Rocket.Surgery.Conventions.IConventionContext,Microsoft.Extensions.Configuration.IConfiguration,System.Threading.CancellationToken)
  name.vb: ApplyConventionsAsync(IConfigurationBuilder, IConventionContext, IConfiguration, CancellationToken)
  fullName: Rocket.Surgery.Conventions.RocketSurgeryConfigurationExtensions.ApplyConventionsAsync(Microsoft.Extensions.Configuration.IConfigurationBuilder, Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.Configuration.IConfiguration?, System.Threading.CancellationToken)
  fullName.vb: Rocket.Surgery.Conventions.RocketSurgeryConfigurationExtensions.ApplyConventionsAsync(Microsoft.Extensions.Configuration.IConfigurationBuilder, Rocket.Surgery.Conventions.IConventionContext, Microsoft.Extensions.Configuration.IConfiguration, System.Threading.CancellationToken)
  nameWithType: RocketSurgeryConfigurationExtensions.ApplyConventionsAsync(IConfigurationBuilder, IConventionContext, IConfiguration?, CancellationToken)
  nameWithType.vb: RocketSurgeryConfigurationExtensions.ApplyConventionsAsync(IConfigurationBuilder, IConventionContext, IConfiguration, CancellationToken)
- uid: Rocket.Surgery.Conventions.RocketSurgeryConfigurationExtensions.ApplyConventionsAsync*
  name: ApplyConventionsAsync
  href: api/Rocket.Surgery.Conventions.RocketSurgeryConfigurationExtensions.html#Rocket_Surgery_Conventions_RocketSurgeryConfigurationExtensions_ApplyConventionsAsync_
  commentId: Overload:Rocket.Surgery.Conventions.RocketSurgeryConfigurationExtensions.ApplyConventionsAsync
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.RocketSurgeryConfigurationExtensions.ApplyConventionsAsync
  nameWithType: RocketSurgeryConfigurationExtensions.ApplyConventionsAsync
- uid: Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationExtensions
  name: RocketSurgeryDistributedApplicationExtensions
  href: api/Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationExtensions.html
  commentId: T:Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationExtensions
  fullName: Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationExtensions
  nameWithType: RocketSurgeryDistributedApplicationExtensions
- uid: Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationExtensions.ApplyConventionsAsync(Aspire.Hosting.IDistributedApplicationBuilder,Rocket.Surgery.Conventions.IConventionContext,System.Threading.CancellationToken)
  name: ApplyConventionsAsync(IDistributedApplicationBuilder, IConventionContext, CancellationToken)
  href: api/Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationExtensions.html#Rocket_Surgery_Conventions_RocketSurgeryDistributedApplicationExtensions_ApplyConventionsAsync_Aspire_Hosting_IDistributedApplicationBuilder_Rocket_Surgery_Conventions_IConventionContext_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationExtensions.ApplyConventionsAsync(Aspire.Hosting.IDistributedApplicationBuilder,Rocket.Surgery.Conventions.IConventionContext,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationExtensions.ApplyConventionsAsync(Aspire.Hosting.IDistributedApplicationBuilder, Rocket.Surgery.Conventions.IConventionContext, System.Threading.CancellationToken)
  nameWithType: RocketSurgeryDistributedApplicationExtensions.ApplyConventionsAsync(IDistributedApplicationBuilder, IConventionContext, CancellationToken)
- uid: Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationExtensions.ApplyConventionsAsync*
  name: ApplyConventionsAsync
  href: api/Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationExtensions.html#Rocket_Surgery_Conventions_RocketSurgeryDistributedApplicationExtensions_ApplyConventionsAsync_
  commentId: Overload:Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationExtensions.ApplyConventionsAsync
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationExtensions.ApplyConventionsAsync
  nameWithType: RocketSurgeryDistributedApplicationExtensions.ApplyConventionsAsync
- uid: Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationTestingExtensions
  name: RocketSurgeryDistributedApplicationTestingExtensions
  href: api/Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationTestingExtensions.html
  commentId: T:Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationTestingExtensions
  fullName: Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationTestingExtensions
  nameWithType: RocketSurgeryDistributedApplicationTestingExtensions
- uid: Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationTestingExtensions.ApplyConventionsAsync(Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder,Rocket.Surgery.Conventions.IConventionContext,System.Threading.CancellationToken)
  name: ApplyConventionsAsync(IDistributedApplicationTestingBuilder, IConventionContext, CancellationToken)
  href: api/Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationTestingExtensions.html#Rocket_Surgery_Conventions_RocketSurgeryDistributedApplicationTestingExtensions_ApplyConventionsAsync_Aspire_Hosting_Testing_IDistributedApplicationTestingBuilder_Rocket_Surgery_Conventions_IConventionContext_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationTestingExtensions.ApplyConventionsAsync(Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder,Rocket.Surgery.Conventions.IConventionContext,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationTestingExtensions.ApplyConventionsAsync(Aspire.Hosting.Testing.IDistributedApplicationTestingBuilder, Rocket.Surgery.Conventions.IConventionContext, System.Threading.CancellationToken)
  nameWithType: RocketSurgeryDistributedApplicationTestingExtensions.ApplyConventionsAsync(IDistributedApplicationTestingBuilder, IConventionContext, CancellationToken)
- uid: Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationTestingExtensions.ApplyConventionsAsync*
  name: ApplyConventionsAsync
  href: api/Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationTestingExtensions.html#Rocket_Surgery_Conventions_RocketSurgeryDistributedApplicationTestingExtensions_ApplyConventionsAsync_
  commentId: Overload:Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationTestingExtensions.ApplyConventionsAsync
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.RocketSurgeryDistributedApplicationTestingExtensions.ApplyConventionsAsync
  nameWithType: RocketSurgeryDistributedApplicationTestingExtensions.ApplyConventionsAsync
- uid: Rocket.Surgery.Conventions.RocketSurgeryHostApplicationExtensions
  name: RocketSurgeryHostApplicationExtensions
  href: api/Rocket.Surgery.Conventions.RocketSurgeryHostApplicationExtensions.html
  commentId: T:Rocket.Surgery.Conventions.RocketSurgeryHostApplicationExtensions
  fullName: Rocket.Surgery.Conventions.RocketSurgeryHostApplicationExtensions
  nameWithType: RocketSurgeryHostApplicationExtensions
- uid: Rocket.Surgery.Conventions.RocketSurgeryHostApplicationExtensions.ApplyConventionsAsync*
  name: ApplyConventionsAsync
  href: api/Rocket.Surgery.Conventions.RocketSurgeryHostApplicationExtensions.html#Rocket_Surgery_Conventions_RocketSurgeryHostApplicationExtensions_ApplyConventionsAsync_
  commentId: Overload:Rocket.Surgery.Conventions.RocketSurgeryHostApplicationExtensions.ApplyConventionsAsync
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.RocketSurgeryHostApplicationExtensions.ApplyConventionsAsync
  nameWithType: RocketSurgeryHostApplicationExtensions.ApplyConventionsAsync
- uid: Rocket.Surgery.Conventions.RocketSurgeryHostApplicationExtensions.ApplyConventionsAsync``1(``0,Rocket.Surgery.Conventions.IConventionContext,System.Threading.CancellationToken)
  name: ApplyConventionsAsync<TBuilder>(TBuilder, IConventionContext, CancellationToken)
  href: api/Rocket.Surgery.Conventions.RocketSurgeryHostApplicationExtensions.html#Rocket_Surgery_Conventions_RocketSurgeryHostApplicationExtensions_ApplyConventionsAsync__1___0_Rocket_Surgery_Conventions_IConventionContext_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.RocketSurgeryHostApplicationExtensions.ApplyConventionsAsync``1(``0,Rocket.Surgery.Conventions.IConventionContext,System.Threading.CancellationToken)
  name.vb: ApplyConventionsAsync(Of TBuilder)(TBuilder, IConventionContext, CancellationToken)
  fullName: Rocket.Surgery.Conventions.RocketSurgeryHostApplicationExtensions.ApplyConventionsAsync<TBuilder>(TBuilder, Rocket.Surgery.Conventions.IConventionContext, System.Threading.CancellationToken)
  fullName.vb: Rocket.Surgery.Conventions.RocketSurgeryHostApplicationExtensions.ApplyConventionsAsync(Of TBuilder)(TBuilder, Rocket.Surgery.Conventions.IConventionContext, System.Threading.CancellationToken)
  nameWithType: RocketSurgeryHostApplicationExtensions.ApplyConventionsAsync<TBuilder>(TBuilder, IConventionContext, CancellationToken)
  nameWithType.vb: RocketSurgeryHostApplicationExtensions.ApplyConventionsAsync(Of TBuilder)(TBuilder, IConventionContext, CancellationToken)
- uid: Rocket.Surgery.Conventions.RocketSurgeryLoggingExtensions
  name: RocketSurgeryLoggingExtensions
  href: api/Rocket.Surgery.Conventions.RocketSurgeryLoggingExtensions.html
  commentId: T:Rocket.Surgery.Conventions.RocketSurgeryLoggingExtensions
  fullName: Rocket.Surgery.Conventions.RocketSurgeryLoggingExtensions
  nameWithType: RocketSurgeryLoggingExtensions
- uid: Rocket.Surgery.Conventions.RocketSurgeryLoggingExtensions.ApplyConventionsAsync(Microsoft.Extensions.Logging.ILoggingBuilder,Rocket.Surgery.Conventions.IConventionContext,System.Threading.CancellationToken)
  name: ApplyConventionsAsync(ILoggingBuilder, IConventionContext, CancellationToken)
  href: api/Rocket.Surgery.Conventions.RocketSurgeryLoggingExtensions.html#Rocket_Surgery_Conventions_RocketSurgeryLoggingExtensions_ApplyConventionsAsync_Microsoft_Extensions_Logging_ILoggingBuilder_Rocket_Surgery_Conventions_IConventionContext_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.RocketSurgeryLoggingExtensions.ApplyConventionsAsync(Microsoft.Extensions.Logging.ILoggingBuilder,Rocket.Surgery.Conventions.IConventionContext,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Conventions.RocketSurgeryLoggingExtensions.ApplyConventionsAsync(Microsoft.Extensions.Logging.ILoggingBuilder, Rocket.Surgery.Conventions.IConventionContext, System.Threading.CancellationToken)
  nameWithType: RocketSurgeryLoggingExtensions.ApplyConventionsAsync(ILoggingBuilder, IConventionContext, CancellationToken)
- uid: Rocket.Surgery.Conventions.RocketSurgeryLoggingExtensions.ApplyConventionsAsync*
  name: ApplyConventionsAsync
  href: api/Rocket.Surgery.Conventions.RocketSurgeryLoggingExtensions.html#Rocket_Surgery_Conventions_RocketSurgeryLoggingExtensions_ApplyConventionsAsync_
  commentId: Overload:Rocket.Surgery.Conventions.RocketSurgeryLoggingExtensions.ApplyConventionsAsync
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.RocketSurgeryLoggingExtensions.ApplyConventionsAsync
  nameWithType: RocketSurgeryLoggingExtensions.ApplyConventionsAsync
- uid: Rocket.Surgery.Conventions.RocketSurgeryServiceCollectionExtensions
  name: RocketSurgeryServiceCollectionExtensions
  href: api/Rocket.Surgery.Conventions.RocketSurgeryServiceCollectionExtensions.html
  commentId: T:Rocket.Surgery.Conventions.RocketSurgeryServiceCollectionExtensions
  fullName: Rocket.Surgery.Conventions.RocketSurgeryServiceCollectionExtensions
  nameWithType: RocketSurgeryServiceCollectionExtensions
- uid: Rocket.Surgery.Conventions.RocketSurgeryServiceCollectionExtensions.ApplyConventionsAsync(Microsoft.Extensions.DependencyInjection.IServiceCollection,Rocket.Surgery.Conventions.IConventionContext,System.Threading.CancellationToken)
  name: ApplyConventionsAsync(IServiceCollection, IConventionContext, CancellationToken)
  href: api/Rocket.Surgery.Conventions.RocketSurgeryServiceCollectionExtensions.html#Rocket_Surgery_Conventions_RocketSurgeryServiceCollectionExtensions_ApplyConventionsAsync_Microsoft_Extensions_DependencyInjection_IServiceCollection_Rocket_Surgery_Conventions_IConventionContext_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.RocketSurgeryServiceCollectionExtensions.ApplyConventionsAsync(Microsoft.Extensions.DependencyInjection.IServiceCollection,Rocket.Surgery.Conventions.IConventionContext,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Conventions.RocketSurgeryServiceCollectionExtensions.ApplyConventionsAsync(Microsoft.Extensions.DependencyInjection.IServiceCollection, Rocket.Surgery.Conventions.IConventionContext, System.Threading.CancellationToken)
  nameWithType: RocketSurgeryServiceCollectionExtensions.ApplyConventionsAsync(IServiceCollection, IConventionContext, CancellationToken)
- uid: Rocket.Surgery.Conventions.RocketSurgeryServiceCollectionExtensions.ApplyConventionsAsync*
  name: ApplyConventionsAsync
  href: api/Rocket.Surgery.Conventions.RocketSurgeryServiceCollectionExtensions.html#Rocket_Surgery_Conventions_RocketSurgeryServiceCollectionExtensions_ApplyConventionsAsync_
  commentId: Overload:Rocket.Surgery.Conventions.RocketSurgeryServiceCollectionExtensions.ApplyConventionsAsync
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.RocketSurgeryServiceCollectionExtensions.ApplyConventionsAsync
  nameWithType: RocketSurgeryServiceCollectionExtensions.ApplyConventionsAsync
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary
  name: ServiceProviderDictionary
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html
  commentId: T:Rocket.Surgery.Conventions.ServiceProviderDictionary
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary
  nameWithType: ServiceProviderDictionary
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.#ctor
  name: ServiceProviderDictionary()
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary__ctor
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionary.#ctor
  name.vb: New()
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.ServiceProviderDictionary()
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionary.New()
  nameWithType: ServiceProviderDictionary.ServiceProviderDictionary()
  nameWithType.vb: ServiceProviderDictionary.New()
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.#ctor(System.Collections.Generic.IDictionary{System.Object,System.Object})
  name: ServiceProviderDictionary(IDictionary<object, object>?)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary__ctor_System_Collections_Generic_IDictionary_System_Object_System_Object__
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionary.#ctor(System.Collections.Generic.IDictionary{System.Object,System.Object})
  name.vb: New(IDictionary(Of Object, Object))
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.ServiceProviderDictionary(System.Collections.Generic.IDictionary<object, object>?)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionary.New(System.Collections.Generic.IDictionary(Of Object, Object))
  nameWithType: ServiceProviderDictionary.ServiceProviderDictionary(IDictionary<object, object>?)
  nameWithType.vb: ServiceProviderDictionary.New(IDictionary(Of Object, Object))
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.#ctor*
  name: ServiceProviderDictionary
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary__ctor_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionary.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.ServiceProviderDictionary
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionary.New
  nameWithType: ServiceProviderDictionary.ServiceProviderDictionary
  nameWithType.vb: ServiceProviderDictionary.New
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Object,System.Object})
  name: Add(KeyValuePair<object, object>)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Add_System_Collections_Generic_KeyValuePair_System_Object_System_Object__
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Object,System.Object})
  name.vb: Add(KeyValuePair(Of Object, Object))
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.Add(System.Collections.Generic.KeyValuePair<object, object>)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionary.Add(System.Collections.Generic.KeyValuePair(Of Object, Object))
  nameWithType: ServiceProviderDictionary.Add(KeyValuePair<object, object>)
  nameWithType.vb: ServiceProviderDictionary.Add(KeyValuePair(Of Object, Object))
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Add(System.Object,System.Object)
  name: Add(object, object)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Add_System_Object_System_Object_
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionary.Add(System.Object,System.Object)
  name.vb: Add(Object, Object)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.Add(object, object)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionary.Add(Object, Object)
  nameWithType: ServiceProviderDictionary.Add(object, object)
  nameWithType.vb: ServiceProviderDictionary.Add(Object, Object)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Add*
  name: Add
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Add_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionary.Add
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.Add
  nameWithType: ServiceProviderDictionary.Add
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Clear
  name: Clear()
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Clear
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionary.Clear
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.Clear()
  nameWithType: ServiceProviderDictionary.Clear()
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Clear*
  name: Clear
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Clear_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionary.Clear
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.Clear
  nameWithType: ServiceProviderDictionary.Clear
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Object,System.Object})
  name: Contains(KeyValuePair<object, object>)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Contains_System_Collections_Generic_KeyValuePair_System_Object_System_Object__
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Object,System.Object})
  name.vb: Contains(KeyValuePair(Of Object, Object))
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.Contains(System.Collections.Generic.KeyValuePair<object, object>)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionary.Contains(System.Collections.Generic.KeyValuePair(Of Object, Object))
  nameWithType: ServiceProviderDictionary.Contains(KeyValuePair<object, object>)
  nameWithType.vb: ServiceProviderDictionary.Contains(KeyValuePair(Of Object, Object))
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Contains*
  name: Contains
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Contains_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionary.Contains
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.Contains
  nameWithType: ServiceProviderDictionary.Contains
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.ContainsKey(System.Object)
  name: ContainsKey(object)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_ContainsKey_System_Object_
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionary.ContainsKey(System.Object)
  name.vb: ContainsKey(Object)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.ContainsKey(object)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionary.ContainsKey(Object)
  nameWithType: ServiceProviderDictionary.ContainsKey(object)
  nameWithType.vb: ServiceProviderDictionary.ContainsKey(Object)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.ContainsKey*
  name: ContainsKey
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_ContainsKey_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionary.ContainsKey
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.ContainsKey
  nameWithType: ServiceProviderDictionary.ContainsKey
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Object,System.Object}[],System.Int32)
  name: CopyTo(KeyValuePair<object, object>[], int)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_CopyTo_System_Collections_Generic_KeyValuePair_System_Object_System_Object____System_Int32_
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Object,System.Object}[],System.Int32)
  name.vb: CopyTo(KeyValuePair(Of Object, Object)(), Integer)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.CopyTo(System.Collections.Generic.KeyValuePair<object, object>[], int)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionary.CopyTo(System.Collections.Generic.KeyValuePair(Of Object, Object)(), Integer)
  nameWithType: ServiceProviderDictionary.CopyTo(KeyValuePair<object, object>[], int)
  nameWithType.vb: ServiceProviderDictionary.CopyTo(KeyValuePair(Of Object, Object)(), Integer)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.CopyTo*
  name: CopyTo
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_CopyTo_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionary.CopyTo
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.CopyTo
  nameWithType: ServiceProviderDictionary.CopyTo
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Count
  name: Count
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Count
  commentId: P:Rocket.Surgery.Conventions.ServiceProviderDictionary.Count
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.Count
  nameWithType: ServiceProviderDictionary.Count
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Count*
  name: Count
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Count_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionary.Count
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.Count
  nameWithType: ServiceProviderDictionary.Count
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.GetEnumerator
  name: GetEnumerator()
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_GetEnumerator
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionary.GetEnumerator
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.GetEnumerator()
  nameWithType: ServiceProviderDictionary.GetEnumerator()
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.GetEnumerator*
  name: GetEnumerator
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_GetEnumerator_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionary.GetEnumerator
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.GetEnumerator
  nameWithType: ServiceProviderDictionary.GetEnumerator
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.GetService(System.Type)
  name: GetService(Type)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_GetService_System_Type_
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionary.GetService(System.Type)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.GetService(System.Type)
  nameWithType: ServiceProviderDictionary.GetService(Type)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.GetService*
  name: GetService
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_GetService_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionary.GetService
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.GetService
  nameWithType: ServiceProviderDictionary.GetService
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.IsReadOnly
  name: IsReadOnly
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_IsReadOnly
  commentId: P:Rocket.Surgery.Conventions.ServiceProviderDictionary.IsReadOnly
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.IsReadOnly
  nameWithType: ServiceProviderDictionary.IsReadOnly
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.IsReadOnly*
  name: IsReadOnly
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_IsReadOnly_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionary.IsReadOnly
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.IsReadOnly
  nameWithType: ServiceProviderDictionary.IsReadOnly
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Item(System.Object)
  name: this[object]
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Item_System_Object_
  commentId: P:Rocket.Surgery.Conventions.ServiceProviderDictionary.Item(System.Object)
  name.vb: this[](Object)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.this[object]
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionary.this[](Object)
  nameWithType: ServiceProviderDictionary.this[object]
  nameWithType.vb: ServiceProviderDictionary.this[](Object)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Item*
  name: this
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Item_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionary.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.this
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionary.this[]
  nameWithType: ServiceProviderDictionary.this
  nameWithType.vb: ServiceProviderDictionary.this[]
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Keys
  name: Keys
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Keys
  commentId: P:Rocket.Surgery.Conventions.ServiceProviderDictionary.Keys
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.Keys
  nameWithType: ServiceProviderDictionary.Keys
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Keys*
  name: Keys
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Keys_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionary.Keys
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.Keys
  nameWithType: ServiceProviderDictionary.Keys
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Object,System.Object})
  name: Remove(KeyValuePair<object, object>)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Remove_System_Collections_Generic_KeyValuePair_System_Object_System_Object__
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Object,System.Object})
  name.vb: Remove(KeyValuePair(Of Object, Object))
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.Remove(System.Collections.Generic.KeyValuePair<object, object>)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionary.Remove(System.Collections.Generic.KeyValuePair(Of Object, Object))
  nameWithType: ServiceProviderDictionary.Remove(KeyValuePair<object, object>)
  nameWithType.vb: ServiceProviderDictionary.Remove(KeyValuePair(Of Object, Object))
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Remove(System.Object)
  name: Remove(object)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Remove_System_Object_
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionary.Remove(System.Object)
  name.vb: Remove(Object)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.Remove(object)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionary.Remove(Object)
  nameWithType: ServiceProviderDictionary.Remove(object)
  nameWithType.vb: ServiceProviderDictionary.Remove(Object)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Remove*
  name: Remove
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Remove_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionary.Remove
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.Remove
  nameWithType: ServiceProviderDictionary.Remove
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.TryGetValue(System.Object,System.Object@)
  name: TryGetValue(object, out object)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_TryGetValue_System_Object_System_Object__
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionary.TryGetValue(System.Object,System.Object@)
  name.vb: TryGetValue(Object, Object)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.TryGetValue(object, out object)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionary.TryGetValue(Object, Object)
  nameWithType: ServiceProviderDictionary.TryGetValue(object, out object)
  nameWithType.vb: ServiceProviderDictionary.TryGetValue(Object, Object)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.TryGetValue*
  name: TryGetValue
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_TryGetValue_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionary.TryGetValue
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.TryGetValue
  nameWithType: ServiceProviderDictionary.TryGetValue
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Values
  name: Values
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Values
  commentId: P:Rocket.Surgery.Conventions.ServiceProviderDictionary.Values
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.Values
  nameWithType: ServiceProviderDictionary.Values
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionary.Values*
  name: Values
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionary.html#Rocket_Surgery_Conventions_ServiceProviderDictionary_Values_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionary.Values
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionary.Values
  nameWithType: ServiceProviderDictionary.Values
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions
  name: ServiceProviderDictionaryExtensions
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html
  commentId: T:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions
  nameWithType: ServiceProviderDictionaryExtensions
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.AddIfMissing(Rocket.Surgery.Conventions.IServiceProviderDictionary,System.Type,System.Object)
  name: AddIfMissing(IServiceProviderDictionary, Type, object)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_AddIfMissing_Rocket_Surgery_Conventions_IServiceProviderDictionary_System_Type_System_Object_
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.AddIfMissing(Rocket.Surgery.Conventions.IServiceProviderDictionary,System.Type,System.Object)
  name.vb: AddIfMissing(IServiceProviderDictionary, Type, Object)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.AddIfMissing(Rocket.Surgery.Conventions.IServiceProviderDictionary, System.Type, object)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.AddIfMissing(Rocket.Surgery.Conventions.IServiceProviderDictionary, System.Type, Object)
  nameWithType: ServiceProviderDictionaryExtensions.AddIfMissing(IServiceProviderDictionary, Type, object)
  nameWithType.vb: ServiceProviderDictionaryExtensions.AddIfMissing(IServiceProviderDictionary, Type, Object)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.AddIfMissing*
  name: AddIfMissing
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_AddIfMissing_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.AddIfMissing
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.AddIfMissing
  nameWithType: ServiceProviderDictionaryExtensions.AddIfMissing
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.AddIfMissing``1(Rocket.Surgery.Conventions.IServiceProviderDictionary,System.String,``0)
  name: AddIfMissing<T>(IServiceProviderDictionary, string, T)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_AddIfMissing__1_Rocket_Surgery_Conventions_IServiceProviderDictionary_System_String___0_
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.AddIfMissing``1(Rocket.Surgery.Conventions.IServiceProviderDictionary,System.String,``0)
  name.vb: AddIfMissing(Of T)(IServiceProviderDictionary, String, T)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.AddIfMissing<T>(Rocket.Surgery.Conventions.IServiceProviderDictionary, string, T)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.AddIfMissing(Of T)(Rocket.Surgery.Conventions.IServiceProviderDictionary, String, T)
  nameWithType: ServiceProviderDictionaryExtensions.AddIfMissing<T>(IServiceProviderDictionary, string, T)
  nameWithType.vb: ServiceProviderDictionaryExtensions.AddIfMissing(Of T)(IServiceProviderDictionary, String, T)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.AddIfMissing``1(Rocket.Surgery.Conventions.IServiceProviderDictionary,``0)
  name: AddIfMissing<T>(IServiceProviderDictionary, T)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_AddIfMissing__1_Rocket_Surgery_Conventions_IServiceProviderDictionary___0_
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.AddIfMissing``1(Rocket.Surgery.Conventions.IServiceProviderDictionary,``0)
  name.vb: AddIfMissing(Of T)(IServiceProviderDictionary, T)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.AddIfMissing<T>(Rocket.Surgery.Conventions.IServiceProviderDictionary, T)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.AddIfMissing(Of T)(Rocket.Surgery.Conventions.IServiceProviderDictionary, T)
  nameWithType: ServiceProviderDictionaryExtensions.AddIfMissing<T>(IServiceProviderDictionary, T)
  nameWithType.vb: ServiceProviderDictionaryExtensions.AddIfMissing(Of T)(IServiceProviderDictionary, T)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get*
  name: Get
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_Get_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get
  nameWithType: ServiceProviderDictionaryExtensions.Get
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.GetOrAdd*
  name: GetOrAdd
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_GetOrAdd_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.GetOrAdd
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.GetOrAdd
  nameWithType: ServiceProviderDictionaryExtensions.GetOrAdd
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.GetOrAdd``1(Rocket.Surgery.Conventions.IServiceProviderDictionary,System.Func{``0})
  name: GetOrAdd<T>(IServiceProviderDictionary, Func<T>)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_GetOrAdd__1_Rocket_Surgery_Conventions_IServiceProviderDictionary_System_Func___0__
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.GetOrAdd``1(Rocket.Surgery.Conventions.IServiceProviderDictionary,System.Func{``0})
  name.vb: GetOrAdd(Of T)(IServiceProviderDictionary, Func(Of T))
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.GetOrAdd<T>(Rocket.Surgery.Conventions.IServiceProviderDictionary, System.Func<T>)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.GetOrAdd(Of T)(Rocket.Surgery.Conventions.IServiceProviderDictionary, System.Func(Of T))
  nameWithType: ServiceProviderDictionaryExtensions.GetOrAdd<T>(IServiceProviderDictionary, Func<T>)
  nameWithType.vb: ServiceProviderDictionaryExtensions.GetOrAdd(Of T)(IServiceProviderDictionary, Func(Of T))
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.GetOrAdd``1(Rocket.Surgery.Conventions.IServiceProviderDictionary,System.String,System.Func{``0})
  name: GetOrAdd<T>(IServiceProviderDictionary, string, Func<T>)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_GetOrAdd__1_Rocket_Surgery_Conventions_IServiceProviderDictionary_System_String_System_Func___0__
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.GetOrAdd``1(Rocket.Surgery.Conventions.IServiceProviderDictionary,System.String,System.Func{``0})
  name.vb: GetOrAdd(Of T)(IServiceProviderDictionary, String, Func(Of T))
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.GetOrAdd<T>(Rocket.Surgery.Conventions.IServiceProviderDictionary, string, System.Func<T>)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.GetOrAdd(Of T)(Rocket.Surgery.Conventions.IServiceProviderDictionary, String, System.Func(Of T))
  nameWithType: ServiceProviderDictionaryExtensions.GetOrAdd<T>(IServiceProviderDictionary, string, Func<T>)
  nameWithType.vb: ServiceProviderDictionaryExtensions.GetOrAdd(Of T)(IServiceProviderDictionary, String, Func(Of T))
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get``1(Rocket.Surgery.Conventions.IReadOnlyServiceProviderDictionary)
  name: Get<T>(IReadOnlyServiceProviderDictionary)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_Get__1_Rocket_Surgery_Conventions_IReadOnlyServiceProviderDictionary_
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get``1(Rocket.Surgery.Conventions.IReadOnlyServiceProviderDictionary)
  name.vb: Get(Of T)(IReadOnlyServiceProviderDictionary)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get<T>(Rocket.Surgery.Conventions.IReadOnlyServiceProviderDictionary)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get(Of T)(Rocket.Surgery.Conventions.IReadOnlyServiceProviderDictionary)
  nameWithType: ServiceProviderDictionaryExtensions.Get<T>(IReadOnlyServiceProviderDictionary)
  nameWithType.vb: ServiceProviderDictionaryExtensions.Get(Of T)(IReadOnlyServiceProviderDictionary)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get``1(Rocket.Surgery.Conventions.IReadOnlyServiceProviderDictionary,System.String)
  name: Get<T>(IReadOnlyServiceProviderDictionary, string)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_Get__1_Rocket_Surgery_Conventions_IReadOnlyServiceProviderDictionary_System_String_
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get``1(Rocket.Surgery.Conventions.IReadOnlyServiceProviderDictionary,System.String)
  name.vb: Get(Of T)(IReadOnlyServiceProviderDictionary, String)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get<T>(Rocket.Surgery.Conventions.IReadOnlyServiceProviderDictionary, string)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get(Of T)(Rocket.Surgery.Conventions.IReadOnlyServiceProviderDictionary, String)
  nameWithType: ServiceProviderDictionaryExtensions.Get<T>(IReadOnlyServiceProviderDictionary, string)
  nameWithType.vb: ServiceProviderDictionaryExtensions.Get(Of T)(IReadOnlyServiceProviderDictionary, String)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get``1(Rocket.Surgery.Conventions.IServiceProviderDictionary)
  name: Get<T>(IServiceProviderDictionary)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_Get__1_Rocket_Surgery_Conventions_IServiceProviderDictionary_
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get``1(Rocket.Surgery.Conventions.IServiceProviderDictionary)
  name.vb: Get(Of T)(IServiceProviderDictionary)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get<T>(Rocket.Surgery.Conventions.IServiceProviderDictionary)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get(Of T)(Rocket.Surgery.Conventions.IServiceProviderDictionary)
  nameWithType: ServiceProviderDictionaryExtensions.Get<T>(IServiceProviderDictionary)
  nameWithType.vb: ServiceProviderDictionaryExtensions.Get(Of T)(IServiceProviderDictionary)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get``1(Rocket.Surgery.Conventions.IServiceProviderDictionary,System.String)
  name: Get<T>(IServiceProviderDictionary, string)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_Get__1_Rocket_Surgery_Conventions_IServiceProviderDictionary_System_String_
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get``1(Rocket.Surgery.Conventions.IServiceProviderDictionary,System.String)
  name.vb: Get(Of T)(IServiceProviderDictionary, String)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get<T>(Rocket.Surgery.Conventions.IServiceProviderDictionary, string)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get(Of T)(Rocket.Surgery.Conventions.IServiceProviderDictionary, String)
  nameWithType: ServiceProviderDictionaryExtensions.Get<T>(IServiceProviderDictionary, string)
  nameWithType.vb: ServiceProviderDictionaryExtensions.Get(Of T)(IServiceProviderDictionary, String)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get``1(Rocket.Surgery.Conventions.ServiceProviderDictionary)
  name: Get<T>(ServiceProviderDictionary)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_Get__1_Rocket_Surgery_Conventions_ServiceProviderDictionary_
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get``1(Rocket.Surgery.Conventions.ServiceProviderDictionary)
  name.vb: Get(Of T)(ServiceProviderDictionary)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get<T>(Rocket.Surgery.Conventions.ServiceProviderDictionary)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get(Of T)(Rocket.Surgery.Conventions.ServiceProviderDictionary)
  nameWithType: ServiceProviderDictionaryExtensions.Get<T>(ServiceProviderDictionary)
  nameWithType.vb: ServiceProviderDictionaryExtensions.Get(Of T)(ServiceProviderDictionary)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get``1(Rocket.Surgery.Conventions.ServiceProviderDictionary,System.String)
  name: Get<T>(ServiceProviderDictionary, string)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_Get__1_Rocket_Surgery_Conventions_ServiceProviderDictionary_System_String_
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get``1(Rocket.Surgery.Conventions.ServiceProviderDictionary,System.String)
  name.vb: Get(Of T)(ServiceProviderDictionary, String)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get<T>(Rocket.Surgery.Conventions.ServiceProviderDictionary, string)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Get(Of T)(Rocket.Surgery.Conventions.ServiceProviderDictionary, String)
  nameWithType: ServiceProviderDictionaryExtensions.Get<T>(ServiceProviderDictionary, string)
  nameWithType.vb: ServiceProviderDictionaryExtensions.Get(Of T)(ServiceProviderDictionary, String)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Set(Rocket.Surgery.Conventions.IServiceProviderDictionary,System.Type,System.Object)
  name: Set(IServiceProviderDictionary, Type, object)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_Set_Rocket_Surgery_Conventions_IServiceProviderDictionary_System_Type_System_Object_
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Set(Rocket.Surgery.Conventions.IServiceProviderDictionary,System.Type,System.Object)
  name.vb: Set(IServiceProviderDictionary, Type, Object)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Set(Rocket.Surgery.Conventions.IServiceProviderDictionary, System.Type, object)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Set(Rocket.Surgery.Conventions.IServiceProviderDictionary, System.Type, Object)
  nameWithType: ServiceProviderDictionaryExtensions.Set(IServiceProviderDictionary, Type, object)
  nameWithType.vb: ServiceProviderDictionaryExtensions.Set(IServiceProviderDictionary, Type, Object)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Set*
  name: Set
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_Set_
  commentId: Overload:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Set
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Set
  nameWithType: ServiceProviderDictionaryExtensions.Set
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Set``1(Rocket.Surgery.Conventions.IServiceProviderDictionary,System.String,``0)
  name: Set<T>(IServiceProviderDictionary, string, T)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_Set__1_Rocket_Surgery_Conventions_IServiceProviderDictionary_System_String___0_
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Set``1(Rocket.Surgery.Conventions.IServiceProviderDictionary,System.String,``0)
  name.vb: Set(Of T)(IServiceProviderDictionary, String, T)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Set<T>(Rocket.Surgery.Conventions.IServiceProviderDictionary, string, T)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Set(Of T)(Rocket.Surgery.Conventions.IServiceProviderDictionary, String, T)
  nameWithType: ServiceProviderDictionaryExtensions.Set<T>(IServiceProviderDictionary, string, T)
  nameWithType.vb: ServiceProviderDictionaryExtensions.Set(Of T)(IServiceProviderDictionary, String, T)
- uid: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Set``1(Rocket.Surgery.Conventions.IServiceProviderDictionary,``0)
  name: Set<T>(IServiceProviderDictionary, T)
  href: api/Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.html#Rocket_Surgery_Conventions_ServiceProviderDictionaryExtensions_Set__1_Rocket_Surgery_Conventions_IServiceProviderDictionary___0_
  commentId: M:Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Set``1(Rocket.Surgery.Conventions.IServiceProviderDictionary,``0)
  name.vb: Set(Of T)(IServiceProviderDictionary, T)
  fullName: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Set<T>(Rocket.Surgery.Conventions.IServiceProviderDictionary, T)
  fullName.vb: Rocket.Surgery.Conventions.ServiceProviderDictionaryExtensions.Set(Of T)(Rocket.Surgery.Conventions.IServiceProviderDictionary, T)
  nameWithType: ServiceProviderDictionaryExtensions.Set<T>(IServiceProviderDictionary, T)
  nameWithType.vb: ServiceProviderDictionaryExtensions.Set(Of T)(IServiceProviderDictionary, T)
- uid: Rocket.Surgery.Conventions.Setup
  name: Rocket.Surgery.Conventions.Setup
  href: api/Rocket.Surgery.Conventions.Setup.html
  commentId: N:Rocket.Surgery.Conventions.Setup
  fullName: Rocket.Surgery.Conventions.Setup
  nameWithType: Rocket.Surgery.Conventions.Setup
- uid: Rocket.Surgery.Conventions.Setup.ISetupAsyncConvention
  name: ISetupAsyncConvention
  href: api/Rocket.Surgery.Conventions.Setup.ISetupAsyncConvention.html
  commentId: T:Rocket.Surgery.Conventions.Setup.ISetupAsyncConvention
  fullName: Rocket.Surgery.Conventions.Setup.ISetupAsyncConvention
  nameWithType: ISetupAsyncConvention
- uid: Rocket.Surgery.Conventions.Setup.ISetupAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,System.Threading.CancellationToken)
  name: Register(IConventionContext, CancellationToken)
  href: api/Rocket.Surgery.Conventions.Setup.ISetupAsyncConvention.html#Rocket_Surgery_Conventions_Setup_ISetupAsyncConvention_Register_Rocket_Surgery_Conventions_IConventionContext_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Conventions.Setup.ISetupAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Conventions.Setup.ISetupAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext, System.Threading.CancellationToken)
  nameWithType: ISetupAsyncConvention.Register(IConventionContext, CancellationToken)
- uid: Rocket.Surgery.Conventions.Setup.ISetupAsyncConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Conventions.Setup.ISetupAsyncConvention.html#Rocket_Surgery_Conventions_Setup_ISetupAsyncConvention_Register_
  commentId: Overload:Rocket.Surgery.Conventions.Setup.ISetupAsyncConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Setup.ISetupAsyncConvention.Register
  nameWithType: ISetupAsyncConvention.Register
- uid: Rocket.Surgery.Conventions.Setup.ISetupConvention
  name: ISetupConvention
  href: api/Rocket.Surgery.Conventions.Setup.ISetupConvention.html
  commentId: T:Rocket.Surgery.Conventions.Setup.ISetupConvention
  fullName: Rocket.Surgery.Conventions.Setup.ISetupConvention
  nameWithType: ISetupConvention
- uid: Rocket.Surgery.Conventions.Setup.ISetupConvention.Register(Rocket.Surgery.Conventions.IConventionContext)
  name: Register(IConventionContext)
  href: api/Rocket.Surgery.Conventions.Setup.ISetupConvention.html#Rocket_Surgery_Conventions_Setup_ISetupConvention_Register_Rocket_Surgery_Conventions_IConventionContext_
  commentId: M:Rocket.Surgery.Conventions.Setup.ISetupConvention.Register(Rocket.Surgery.Conventions.IConventionContext)
  fullName: Rocket.Surgery.Conventions.Setup.ISetupConvention.Register(Rocket.Surgery.Conventions.IConventionContext)
  nameWithType: ISetupConvention.Register(IConventionContext)
- uid: Rocket.Surgery.Conventions.Setup.ISetupConvention.Register*
  name: Register
  href: api/Rocket.Surgery.Conventions.Setup.ISetupConvention.html#Rocket_Surgery_Conventions_Setup_ISetupConvention_Register_
  commentId: Overload:Rocket.Surgery.Conventions.Setup.ISetupConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Setup.ISetupConvention.Register
  nameWithType: ISetupConvention.Register
- uid: Rocket.Surgery.Conventions.Setup.SetupAsyncConvention
  name: SetupAsyncConvention
  href: api/Rocket.Surgery.Conventions.Setup.SetupAsyncConvention.html
  commentId: T:Rocket.Surgery.Conventions.Setup.SetupAsyncConvention
  fullName: Rocket.Surgery.Conventions.Setup.SetupAsyncConvention
  nameWithType: SetupAsyncConvention
- uid: Rocket.Surgery.Conventions.Setup.SetupConvention
  name: SetupConvention
  href: api/Rocket.Surgery.Conventions.Setup.SetupConvention.html
  commentId: T:Rocket.Surgery.Conventions.Setup.SetupConvention
  fullName: Rocket.Surgery.Conventions.Setup.SetupConvention
  nameWithType: SetupConvention
- uid: Rocket.Surgery.Conventions.Testing
  name: Rocket.Surgery.Conventions.Testing
  href: api/Rocket.Surgery.Conventions.Testing.html
  commentId: N:Rocket.Surgery.Conventions.Testing
  fullName: Rocket.Surgery.Conventions.Testing
  nameWithType: Rocket.Surgery.Conventions.Testing
- uid: Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions
  name: DependencyModelTestConventionContextBuilderExtensions
  href: api/Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.html
  commentId: T:Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions
  fullName: Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions
  nameWithType: DependencyModelTestConventionContextBuilderExtensions
- uid: Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder,Microsoft.Extensions.DependencyModel.DependencyContext,Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  name: ForTesting(ConventionContextBuilder, DependencyContext, ILoggerFactory?, string?)
  href: api/Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_DependencyModelTestConventionContextBuilderExtensions_ForTesting_Rocket_Surgery_Conventions_ConventionContextBuilder_Microsoft_Extensions_DependencyModel_DependencyContext_Microsoft_Extensions_Logging_ILoggerFactory_System_String_
  commentId: M:Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder,Microsoft.Extensions.DependencyModel.DependencyContext,Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  name.vb: ForTesting(ConventionContextBuilder, DependencyContext, ILoggerFactory, String)
  fullName: Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder, Microsoft.Extensions.DependencyModel.DependencyContext, Microsoft.Extensions.Logging.ILoggerFactory?, string?)
  fullName.vb: Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder, Microsoft.Extensions.DependencyModel.DependencyContext, Microsoft.Extensions.Logging.ILoggerFactory, String)
  nameWithType: DependencyModelTestConventionContextBuilderExtensions.ForTesting(ConventionContextBuilder, DependencyContext, ILoggerFactory?, string?)
  nameWithType.vb: DependencyModelTestConventionContextBuilderExtensions.ForTesting(ConventionContextBuilder, DependencyContext, ILoggerFactory, String)
- uid: Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Reflection.Assembly,Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  name: ForTesting(ConventionContextBuilder, Assembly, ILoggerFactory?, string?)
  href: api/Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_DependencyModelTestConventionContextBuilderExtensions_ForTesting_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Reflection_Assembly_Microsoft_Extensions_Logging_ILoggerFactory_System_String_
  commentId: M:Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Reflection.Assembly,Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  name.vb: ForTesting(ConventionContextBuilder, Assembly, ILoggerFactory, String)
  fullName: Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Reflection.Assembly, Microsoft.Extensions.Logging.ILoggerFactory?, string?)
  fullName.vb: Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Reflection.Assembly, Microsoft.Extensions.Logging.ILoggerFactory, String)
  nameWithType: DependencyModelTestConventionContextBuilderExtensions.ForTesting(ConventionContextBuilder, Assembly, ILoggerFactory?, string?)
  nameWithType.vb: DependencyModelTestConventionContextBuilderExtensions.ForTesting(ConventionContextBuilder, Assembly, ILoggerFactory, String)
- uid: Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Type,Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  name: ForTesting(ConventionContextBuilder, Type, ILoggerFactory?, string?)
  href: api/Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_DependencyModelTestConventionContextBuilderExtensions_ForTesting_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Type_Microsoft_Extensions_Logging_ILoggerFactory_System_String_
  commentId: M:Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Type,Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  name.vb: ForTesting(ConventionContextBuilder, Type, ILoggerFactory, String)
  fullName: Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Type, Microsoft.Extensions.Logging.ILoggerFactory?, string?)
  fullName.vb: Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Type, Microsoft.Extensions.Logging.ILoggerFactory, String)
  nameWithType: DependencyModelTestConventionContextBuilderExtensions.ForTesting(ConventionContextBuilder, Type, ILoggerFactory?, string?)
  nameWithType.vb: DependencyModelTestConventionContextBuilderExtensions.ForTesting(ConventionContextBuilder, Type, ILoggerFactory, String)
- uid: Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.ForTesting*
  name: ForTesting
  href: api/Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_DependencyModelTestConventionContextBuilderExtensions_ForTesting_
  commentId: Overload:Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.ForTesting
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Testing.DependencyModelTestConventionContextBuilderExtensions.ForTesting
  nameWithType: DependencyModelTestConventionContextBuilderExtensions.ForTesting
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions
  name: TestConventionContextBuilderExtensions
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html
  commentId: T:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions
  nameWithType: TestConventionContextBuilderExtensions
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ExcludeConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  name: ExcludeConventions(ConventionContextBuilder)
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_TestConventionContextBuilderExtensions_ExcludeConventions_Rocket_Surgery_Conventions_ConventionContextBuilder_
  commentId: M:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ExcludeConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ExcludeConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  nameWithType: TestConventionContextBuilderExtensions.ExcludeConventions(ConventionContextBuilder)
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ExcludeConventions*
  name: ExcludeConventions
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_TestConventionContextBuilderExtensions_ExcludeConventions_
  commentId: Overload:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ExcludeConventions
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ExcludeConventions
  nameWithType: TestConventionContextBuilderExtensions.ExcludeConventions
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder,Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  name: ForTesting(ConventionContextBuilder, ILoggerFactory?, string?)
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_TestConventionContextBuilderExtensions_ForTesting_Rocket_Surgery_Conventions_ConventionContextBuilder_Microsoft_Extensions_Logging_ILoggerFactory_System_String_
  commentId: M:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder,Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  name.vb: ForTesting(ConventionContextBuilder, ILoggerFactory, String)
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder, Microsoft.Extensions.Logging.ILoggerFactory?, string?)
  fullName.vb: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder, Microsoft.Extensions.Logging.ILoggerFactory, String)
  nameWithType: TestConventionContextBuilderExtensions.ForTesting(ConventionContextBuilder, ILoggerFactory?, string?)
  nameWithType.vb: TestConventionContextBuilderExtensions.ForTesting(ConventionContextBuilder, ILoggerFactory, String)
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.IConventionFactory,Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  name: ForTesting(ConventionContextBuilder, IConventionFactory, ILoggerFactory?, string?)
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_TestConventionContextBuilderExtensions_ForTesting_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_Conventions_IConventionFactory_Microsoft_Extensions_Logging_ILoggerFactory_System_String_
  commentId: M:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.Conventions.IConventionFactory,Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  name.vb: ForTesting(ConventionContextBuilder, IConventionFactory, ILoggerFactory, String)
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.IConventionFactory, Microsoft.Extensions.Logging.ILoggerFactory?, string?)
  fullName.vb: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.Conventions.IConventionFactory, Microsoft.Extensions.Logging.ILoggerFactory, String)
  nameWithType: TestConventionContextBuilderExtensions.ForTesting(ConventionContextBuilder, IConventionFactory, ILoggerFactory?, string?)
  nameWithType.vb: TestConventionContextBuilderExtensions.ForTesting(ConventionContextBuilder, IConventionFactory, ILoggerFactory, String)
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder,System.AppDomain,Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  name: ForTesting(ConventionContextBuilder, AppDomain, ILoggerFactory?, string?)
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_TestConventionContextBuilderExtensions_ForTesting_Rocket_Surgery_Conventions_ConventionContextBuilder_System_AppDomain_Microsoft_Extensions_Logging_ILoggerFactory_System_String_
  commentId: M:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder,System.AppDomain,Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  name.vb: ForTesting(ConventionContextBuilder, AppDomain, ILoggerFactory, String)
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder, System.AppDomain, Microsoft.Extensions.Logging.ILoggerFactory?, string?)
  fullName.vb: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder, System.AppDomain, Microsoft.Extensions.Logging.ILoggerFactory, String)
  nameWithType: TestConventionContextBuilderExtensions.ForTesting(ConventionContextBuilder, AppDomain, ILoggerFactory?, string?)
  nameWithType.vb: TestConventionContextBuilderExtensions.ForTesting(ConventionContextBuilder, AppDomain, ILoggerFactory, String)
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  name: ForTesting(ConventionContextBuilder, IEnumerable<Assembly>, ILoggerFactory?, string?)
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_TestConventionContextBuilderExtensions_ForTesting_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Collections_Generic_IEnumerable_System_Reflection_Assembly__Microsoft_Extensions_Logging_ILoggerFactory_System_String_
  commentId: M:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  name.vb: ForTesting(ConventionContextBuilder, IEnumerable(Of Assembly), ILoggerFactory, String)
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Collections.Generic.IEnumerable<System.Reflection.Assembly>, Microsoft.Extensions.Logging.ILoggerFactory?, string?)
  fullName.vb: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly), Microsoft.Extensions.Logging.ILoggerFactory, String)
  nameWithType: TestConventionContextBuilderExtensions.ForTesting(ConventionContextBuilder, IEnumerable<Assembly>, ILoggerFactory?, string?)
  nameWithType.vb: TestConventionContextBuilderExtensions.ForTesting(ConventionContextBuilder, IEnumerable(Of Assembly), ILoggerFactory, String)
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting*
  name: ForTesting
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_TestConventionContextBuilderExtensions_ForTesting_
  commentId: Overload:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.ForTesting
  nameWithType: TestConventionContextBuilderExtensions.ForTesting
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.IncludeConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  name: IncludeConventions(ConventionContextBuilder)
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_TestConventionContextBuilderExtensions_IncludeConventions_Rocket_Surgery_Conventions_ConventionContextBuilder_
  commentId: M:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.IncludeConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.IncludeConventions(Rocket.Surgery.Conventions.ConventionContextBuilder)
  nameWithType: TestConventionContextBuilderExtensions.IncludeConventions(ConventionContextBuilder)
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.IncludeConventions*
  name: IncludeConventions
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_TestConventionContextBuilderExtensions_IncludeConventions_
  commentId: Overload:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.IncludeConventions
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.IncludeConventions
  nameWithType: TestConventionContextBuilderExtensions.IncludeConventions
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithContentRoot(Rocket.Surgery.Conventions.ConventionContextBuilder,System.String)
  name: WithContentRoot(ConventionContextBuilder, string?)
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_TestConventionContextBuilderExtensions_WithContentRoot_Rocket_Surgery_Conventions_ConventionContextBuilder_System_String_
  commentId: M:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithContentRoot(Rocket.Surgery.Conventions.ConventionContextBuilder,System.String)
  name.vb: WithContentRoot(ConventionContextBuilder, String)
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithContentRoot(Rocket.Surgery.Conventions.ConventionContextBuilder, string?)
  fullName.vb: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithContentRoot(Rocket.Surgery.Conventions.ConventionContextBuilder, String)
  nameWithType: TestConventionContextBuilderExtensions.WithContentRoot(ConventionContextBuilder, string?)
  nameWithType.vb: TestConventionContextBuilderExtensions.WithContentRoot(ConventionContextBuilder, String)
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithContentRoot*
  name: WithContentRoot
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_TestConventionContextBuilderExtensions_WithContentRoot_
  commentId: Overload:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithContentRoot
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithContentRoot
  nameWithType: TestConventionContextBuilderExtensions.WithContentRoot
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithEnvironmentName(Rocket.Surgery.Conventions.ConventionContextBuilder,System.String)
  name: WithEnvironmentName(ConventionContextBuilder, string)
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_TestConventionContextBuilderExtensions_WithEnvironmentName_Rocket_Surgery_Conventions_ConventionContextBuilder_System_String_
  commentId: M:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithEnvironmentName(Rocket.Surgery.Conventions.ConventionContextBuilder,System.String)
  name.vb: WithEnvironmentName(ConventionContextBuilder, String)
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithEnvironmentName(Rocket.Surgery.Conventions.ConventionContextBuilder, string)
  fullName.vb: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithEnvironmentName(Rocket.Surgery.Conventions.ConventionContextBuilder, String)
  nameWithType: TestConventionContextBuilderExtensions.WithEnvironmentName(ConventionContextBuilder, string)
  nameWithType.vb: TestConventionContextBuilderExtensions.WithEnvironmentName(ConventionContextBuilder, String)
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithEnvironmentName*
  name: WithEnvironmentName
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_TestConventionContextBuilderExtensions_WithEnvironmentName_
  commentId: Overload:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithEnvironmentName
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithEnvironmentName
  nameWithType: TestConventionContextBuilderExtensions.WithEnvironmentName
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithLogger(Rocket.Surgery.Conventions.ConventionContextBuilder,Microsoft.Extensions.Logging.ILogger)
  name: WithLogger(ConventionContextBuilder, ILogger)
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_TestConventionContextBuilderExtensions_WithLogger_Rocket_Surgery_Conventions_ConventionContextBuilder_Microsoft_Extensions_Logging_ILogger_
  commentId: M:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithLogger(Rocket.Surgery.Conventions.ConventionContextBuilder,Microsoft.Extensions.Logging.ILogger)
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithLogger(Rocket.Surgery.Conventions.ConventionContextBuilder, Microsoft.Extensions.Logging.ILogger)
  nameWithType: TestConventionContextBuilderExtensions.WithLogger(ConventionContextBuilder, ILogger)
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithLogger*
  name: WithLogger
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_TestConventionContextBuilderExtensions_WithLogger_
  commentId: Overload:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithLogger
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithLogger
  nameWithType: TestConventionContextBuilderExtensions.WithLogger
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithLoggerFactory(Rocket.Surgery.Conventions.ConventionContextBuilder,Microsoft.Extensions.Logging.ILoggerFactory)
  name: WithLoggerFactory(ConventionContextBuilder, ILoggerFactory)
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_TestConventionContextBuilderExtensions_WithLoggerFactory_Rocket_Surgery_Conventions_ConventionContextBuilder_Microsoft_Extensions_Logging_ILoggerFactory_
  commentId: M:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithLoggerFactory(Rocket.Surgery.Conventions.ConventionContextBuilder,Microsoft.Extensions.Logging.ILoggerFactory)
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithLoggerFactory(Rocket.Surgery.Conventions.ConventionContextBuilder, Microsoft.Extensions.Logging.ILoggerFactory)
  nameWithType: TestConventionContextBuilderExtensions.WithLoggerFactory(ConventionContextBuilder, ILoggerFactory)
- uid: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithLoggerFactory*
  name: WithLoggerFactory
  href: api/Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.html#Rocket_Surgery_Conventions_Testing_TestConventionContextBuilderExtensions_WithLoggerFactory_
  commentId: Overload:Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithLoggerFactory
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.Testing.TestConventionContextBuilderExtensions.WithLoggerFactory
  nameWithType: TestConventionContextBuilderExtensions.WithLoggerFactory
- uid: Rocket.Surgery.Conventions.UnitTestConventionAttribute
  name: UnitTestConventionAttribute
  href: api/Rocket.Surgery.Conventions.UnitTestConventionAttribute.html
  commentId: T:Rocket.Surgery.Conventions.UnitTestConventionAttribute
  fullName: Rocket.Surgery.Conventions.UnitTestConventionAttribute
  nameWithType: UnitTestConventionAttribute
- uid: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions
  name: WebAssemblyHostingConventionExtensions
  href: api/Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.html
  commentId: T:Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions
  fullName: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions
  nameWithType: WebAssemblyHostingConventionExtensions
- uid: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.WebAssembly.Hosting.WebAssemblyHostingAsyncConvention,System.Int32)
  name: ConfigureWebAssembly(ConventionContextBuilder, WebAssemblyHostingAsyncConvention, int)
  href: api/Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.html#Rocket_Surgery_Conventions_WebAssemblyHostingConventionExtensions_ConfigureWebAssembly_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_WebAssembly_Hosting_WebAssemblyHostingAsyncConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.WebAssembly.Hosting.WebAssemblyHostingAsyncConvention,System.Int32)
  name.vb: ConfigureWebAssembly(ConventionContextBuilder, WebAssemblyHostingAsyncConvention, Integer)
  fullName: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.WebAssembly.Hosting.WebAssemblyHostingAsyncConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.WebAssembly.Hosting.WebAssemblyHostingAsyncConvention, Integer)
  nameWithType: WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(ConventionContextBuilder, WebAssemblyHostingAsyncConvention, int)
  nameWithType.vb: WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(ConventionContextBuilder, WebAssemblyHostingAsyncConvention, Integer)
- uid: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.WebAssembly.Hosting.WebAssemblyHostingConvention,System.Int32)
  name: ConfigureWebAssembly(ConventionContextBuilder, WebAssemblyHostingConvention, int)
  href: api/Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.html#Rocket_Surgery_Conventions_WebAssemblyHostingConventionExtensions_ConfigureWebAssembly_Rocket_Surgery_Conventions_ConventionContextBuilder_Rocket_Surgery_WebAssembly_Hosting_WebAssemblyHostingConvention_System_Int32_
  commentId: M:Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder,Rocket.Surgery.WebAssembly.Hosting.WebAssemblyHostingConvention,System.Int32)
  name.vb: ConfigureWebAssembly(ConventionContextBuilder, WebAssemblyHostingConvention, Integer)
  fullName: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.WebAssembly.Hosting.WebAssemblyHostingConvention, int)
  fullName.vb: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder, Rocket.Surgery.WebAssembly.Hosting.WebAssemblyHostingConvention, Integer)
  nameWithType: WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(ConventionContextBuilder, WebAssemblyHostingConvention, int)
  nameWithType.vb: WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(ConventionContextBuilder, WebAssemblyHostingConvention, Integer)
- uid: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder},System.Int32)
  name: ConfigureWebAssembly(ConventionContextBuilder, Action<WebAssemblyHostBuilder>, int)
  href: api/Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.html#Rocket_Surgery_Conventions_WebAssemblyHostingConventionExtensions_ConfigureWebAssembly_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Action_Microsoft_AspNetCore_Components_WebAssembly_Hosting_WebAssemblyHostBuilder__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Action{Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder},System.Int32)
  name.vb: ConfigureWebAssembly(ConventionContextBuilder, Action(Of WebAssemblyHostBuilder), Integer)
  fullName: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action<Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder>, int)
  fullName.vb: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Action(Of Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder), Integer)
  nameWithType: WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(ConventionContextBuilder, Action<WebAssemblyHostBuilder>, int)
  nameWithType.vb: WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(ConventionContextBuilder, Action(Of WebAssemblyHostBuilder), Integer)
- uid: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureWebAssembly(ConventionContextBuilder, Func<WebAssemblyHostBuilder, CancellationToken, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.html#Rocket_Surgery_Conventions_WebAssemblyHostingConventionExtensions_ConfigureWebAssembly_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_AspNetCore_Components_WebAssembly_Hosting_WebAssemblyHostBuilder_System_Threading_CancellationToken_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureWebAssembly(ConventionContextBuilder, Func(Of WebAssemblyHostBuilder, CancellationToken, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(ConventionContextBuilder, Func<WebAssemblyHostBuilder, CancellationToken, ValueTask>, int)
  nameWithType.vb: WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(ConventionContextBuilder, Func(Of WebAssemblyHostBuilder, CancellationToken, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder,System.Threading.Tasks.ValueTask},System.Int32)
  name: ConfigureWebAssembly(ConventionContextBuilder, Func<WebAssemblyHostBuilder, ValueTask>, int)
  href: api/Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.html#Rocket_Surgery_Conventions_WebAssemblyHostingConventionExtensions_ConfigureWebAssembly_Rocket_Surgery_Conventions_ConventionContextBuilder_System_Func_Microsoft_AspNetCore_Components_WebAssembly_Hosting_WebAssemblyHostBuilder_System_Threading_Tasks_ValueTask__System_Int32_
  commentId: M:Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder,System.Func{Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder,System.Threading.Tasks.ValueTask},System.Int32)
  name.vb: ConfigureWebAssembly(ConventionContextBuilder, Func(Of WebAssemblyHostBuilder, ValueTask), Integer)
  fullName: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func<Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder, System.Threading.Tasks.ValueTask>, int)
  fullName.vb: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(Rocket.Surgery.Conventions.ConventionContextBuilder, System.Func(Of Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder, System.Threading.Tasks.ValueTask), Integer)
  nameWithType: WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(ConventionContextBuilder, Func<WebAssemblyHostBuilder, ValueTask>, int)
  nameWithType.vb: WebAssemblyHostingConventionExtensions.ConfigureWebAssembly(ConventionContextBuilder, Func(Of WebAssemblyHostBuilder, ValueTask), Integer)
- uid: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly*
  name: ConfigureWebAssembly
  href: api/Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.html#Rocket_Surgery_Conventions_WebAssemblyHostingConventionExtensions_ConfigureWebAssembly_
  commentId: Overload:Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly
  isSpec: "True"
  fullName: Rocket.Surgery.Conventions.WebAssemblyHostingConventionExtensions.ConfigureWebAssembly
  nameWithType: WebAssemblyHostingConventionExtensions.ConfigureWebAssembly
- uid: Rocket.Surgery.Hosting
  name: Rocket.Surgery.Hosting
  href: api/Rocket.Surgery.Hosting.html
  commentId: N:Rocket.Surgery.Hosting
  fullName: Rocket.Surgery.Hosting
  nameWithType: Rocket.Surgery.Hosting
- uid: Rocket.Surgery.Hosting.HostApplicationAsyncConvention`1
  name: HostApplicationAsyncConvention<TBuilder>
  href: api/Rocket.Surgery.Hosting.HostApplicationAsyncConvention-1.html
  commentId: T:Rocket.Surgery.Hosting.HostApplicationAsyncConvention`1
  name.vb: HostApplicationAsyncConvention(Of TBuilder)
  fullName: Rocket.Surgery.Hosting.HostApplicationAsyncConvention<TBuilder>
  fullName.vb: Rocket.Surgery.Hosting.HostApplicationAsyncConvention(Of TBuilder)
  nameWithType: HostApplicationAsyncConvention<TBuilder>
  nameWithType.vb: HostApplicationAsyncConvention(Of TBuilder)
- uid: Rocket.Surgery.Hosting.HostApplicationConvention`1
  name: HostApplicationConvention<TBuilder>
  href: api/Rocket.Surgery.Hosting.HostApplicationConvention-1.html
  commentId: T:Rocket.Surgery.Hosting.HostApplicationConvention`1
  name.vb: HostApplicationConvention(Of TBuilder)
  fullName: Rocket.Surgery.Hosting.HostApplicationConvention<TBuilder>
  fullName.vb: Rocket.Surgery.Hosting.HostApplicationConvention(Of TBuilder)
  nameWithType: HostApplicationConvention<TBuilder>
  nameWithType.vb: HostApplicationConvention(Of TBuilder)
- uid: Rocket.Surgery.Hosting.IHostApplicationAsyncConvention`1
  name: IHostApplicationAsyncConvention<TBuilder>
  href: api/Rocket.Surgery.Hosting.IHostApplicationAsyncConvention-1.html
  commentId: T:Rocket.Surgery.Hosting.IHostApplicationAsyncConvention`1
  name.vb: IHostApplicationAsyncConvention(Of TBuilder)
  fullName: Rocket.Surgery.Hosting.IHostApplicationAsyncConvention<TBuilder>
  fullName.vb: Rocket.Surgery.Hosting.IHostApplicationAsyncConvention(Of TBuilder)
  nameWithType: IHostApplicationAsyncConvention<TBuilder>
  nameWithType.vb: IHostApplicationAsyncConvention(Of TBuilder)
- uid: Rocket.Surgery.Hosting.IHostApplicationAsyncConvention`1.Register(Rocket.Surgery.Conventions.IConventionContext,`0,System.Threading.CancellationToken)
  name: Register(IConventionContext, TBuilder, CancellationToken)
  href: api/Rocket.Surgery.Hosting.IHostApplicationAsyncConvention-1.html#Rocket_Surgery_Hosting_IHostApplicationAsyncConvention_1_Register_Rocket_Surgery_Conventions_IConventionContext__0_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.Hosting.IHostApplicationAsyncConvention`1.Register(Rocket.Surgery.Conventions.IConventionContext,`0,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.Hosting.IHostApplicationAsyncConvention<TBuilder>.Register(Rocket.Surgery.Conventions.IConventionContext, TBuilder, System.Threading.CancellationToken)
  fullName.vb: Rocket.Surgery.Hosting.IHostApplicationAsyncConvention(Of TBuilder).Register(Rocket.Surgery.Conventions.IConventionContext, TBuilder, System.Threading.CancellationToken)
  nameWithType: IHostApplicationAsyncConvention<TBuilder>.Register(IConventionContext, TBuilder, CancellationToken)
  nameWithType.vb: IHostApplicationAsyncConvention(Of TBuilder).Register(IConventionContext, TBuilder, CancellationToken)
- uid: Rocket.Surgery.Hosting.IHostApplicationAsyncConvention`1.Register*
  name: Register
  href: api/Rocket.Surgery.Hosting.IHostApplicationAsyncConvention-1.html#Rocket_Surgery_Hosting_IHostApplicationAsyncConvention_1_Register_
  commentId: Overload:Rocket.Surgery.Hosting.IHostApplicationAsyncConvention`1.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Hosting.IHostApplicationAsyncConvention<TBuilder>.Register
  fullName.vb: Rocket.Surgery.Hosting.IHostApplicationAsyncConvention(Of TBuilder).Register
  nameWithType: IHostApplicationAsyncConvention<TBuilder>.Register
  nameWithType.vb: IHostApplicationAsyncConvention(Of TBuilder).Register
- uid: Rocket.Surgery.Hosting.IHostApplicationConvention`1
  name: IHostApplicationConvention<TBuilder>
  href: api/Rocket.Surgery.Hosting.IHostApplicationConvention-1.html
  commentId: T:Rocket.Surgery.Hosting.IHostApplicationConvention`1
  name.vb: IHostApplicationConvention(Of TBuilder)
  fullName: Rocket.Surgery.Hosting.IHostApplicationConvention<TBuilder>
  fullName.vb: Rocket.Surgery.Hosting.IHostApplicationConvention(Of TBuilder)
  nameWithType: IHostApplicationConvention<TBuilder>
  nameWithType.vb: IHostApplicationConvention(Of TBuilder)
- uid: Rocket.Surgery.Hosting.IHostApplicationConvention`1.Register(Rocket.Surgery.Conventions.IConventionContext,`0)
  name: Register(IConventionContext, TBuilder)
  href: api/Rocket.Surgery.Hosting.IHostApplicationConvention-1.html#Rocket_Surgery_Hosting_IHostApplicationConvention_1_Register_Rocket_Surgery_Conventions_IConventionContext__0_
  commentId: M:Rocket.Surgery.Hosting.IHostApplicationConvention`1.Register(Rocket.Surgery.Conventions.IConventionContext,`0)
  fullName: Rocket.Surgery.Hosting.IHostApplicationConvention<TBuilder>.Register(Rocket.Surgery.Conventions.IConventionContext, TBuilder)
  fullName.vb: Rocket.Surgery.Hosting.IHostApplicationConvention(Of TBuilder).Register(Rocket.Surgery.Conventions.IConventionContext, TBuilder)
  nameWithType: IHostApplicationConvention<TBuilder>.Register(IConventionContext, TBuilder)
  nameWithType.vb: IHostApplicationConvention(Of TBuilder).Register(IConventionContext, TBuilder)
- uid: Rocket.Surgery.Hosting.IHostApplicationConvention`1.Register*
  name: Register
  href: api/Rocket.Surgery.Hosting.IHostApplicationConvention-1.html#Rocket_Surgery_Hosting_IHostApplicationConvention_1_Register_
  commentId: Overload:Rocket.Surgery.Hosting.IHostApplicationConvention`1.Register
  isSpec: "True"
  fullName: Rocket.Surgery.Hosting.IHostApplicationConvention<TBuilder>.Register
  fullName.vb: Rocket.Surgery.Hosting.IHostApplicationConvention(Of TBuilder).Register
  nameWithType: IHostApplicationConvention<TBuilder>.Register
  nameWithType.vb: IHostApplicationConvention(Of TBuilder).Register
- uid: Rocket.Surgery.Hosting.RocketBooster
  name: RocketBooster
  href: api/Rocket.Surgery.Hosting.RocketBooster.html
  commentId: T:Rocket.Surgery.Hosting.RocketBooster
  fullName: Rocket.Surgery.Hosting.RocketBooster
  nameWithType: RocketBooster
- uid: Rocket.Surgery.Hosting.RocketBooster.For(Microsoft.Extensions.DependencyModel.DependencyContext)
  name: For(DependencyContext)
  href: api/Rocket.Surgery.Hosting.RocketBooster.html#Rocket_Surgery_Hosting_RocketBooster_For_Microsoft_Extensions_DependencyModel_DependencyContext_
  commentId: M:Rocket.Surgery.Hosting.RocketBooster.For(Microsoft.Extensions.DependencyModel.DependencyContext)
  fullName: Rocket.Surgery.Hosting.RocketBooster.For(Microsoft.Extensions.DependencyModel.DependencyContext)
  nameWithType: RocketBooster.For(DependencyContext)
- uid: Rocket.Surgery.Hosting.RocketBooster.For(Rocket.Surgery.Conventions.IConventionFactory)
  name: For(IConventionFactory)
  href: api/Rocket.Surgery.Hosting.RocketBooster.html#Rocket_Surgery_Hosting_RocketBooster_For_Rocket_Surgery_Conventions_IConventionFactory_
  commentId: M:Rocket.Surgery.Hosting.RocketBooster.For(Rocket.Surgery.Conventions.IConventionFactory)
  fullName: Rocket.Surgery.Hosting.RocketBooster.For(Rocket.Surgery.Conventions.IConventionFactory)
  nameWithType: RocketBooster.For(IConventionFactory)
- uid: Rocket.Surgery.Hosting.RocketBooster.For(System.AppDomain)
  name: For(AppDomain)
  href: api/Rocket.Surgery.Hosting.RocketBooster.html#Rocket_Surgery_Hosting_RocketBooster_For_System_AppDomain_
  commentId: M:Rocket.Surgery.Hosting.RocketBooster.For(System.AppDomain)
  fullName: Rocket.Surgery.Hosting.RocketBooster.For(System.AppDomain)
  nameWithType: RocketBooster.For(AppDomain)
- uid: Rocket.Surgery.Hosting.RocketBooster.For(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name: For(IEnumerable<Assembly>)
  href: api/Rocket.Surgery.Hosting.RocketBooster.html#Rocket_Surgery_Hosting_RocketBooster_For_System_Collections_Generic_IEnumerable_System_Reflection_Assembly__
  commentId: M:Rocket.Surgery.Hosting.RocketBooster.For(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name.vb: For(IEnumerable(Of Assembly))
  fullName: Rocket.Surgery.Hosting.RocketBooster.For(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)
  fullName.vb: Rocket.Surgery.Hosting.RocketBooster.For(System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly))
  nameWithType: RocketBooster.For(IEnumerable<Assembly>)
  nameWithType.vb: RocketBooster.For(IEnumerable(Of Assembly))
- uid: Rocket.Surgery.Hosting.RocketBooster.For*
  name: For
  href: api/Rocket.Surgery.Hosting.RocketBooster.html#Rocket_Surgery_Hosting_RocketBooster_For_
  commentId: Overload:Rocket.Surgery.Hosting.RocketBooster.For
  isSpec: "True"
  fullName: Rocket.Surgery.Hosting.RocketBooster.For
  nameWithType: RocketBooster.For
- uid: Rocket.Surgery.Hosting.RocketBooster.ForAppDomain(System.AppDomain)
  name: ForAppDomain(AppDomain)
  href: api/Rocket.Surgery.Hosting.RocketBooster.html#Rocket_Surgery_Hosting_RocketBooster_ForAppDomain_System_AppDomain_
  commentId: M:Rocket.Surgery.Hosting.RocketBooster.ForAppDomain(System.AppDomain)
  fullName: Rocket.Surgery.Hosting.RocketBooster.ForAppDomain(System.AppDomain)
  nameWithType: RocketBooster.ForAppDomain(AppDomain)
- uid: Rocket.Surgery.Hosting.RocketBooster.ForAppDomain*
  name: ForAppDomain
  href: api/Rocket.Surgery.Hosting.RocketBooster.html#Rocket_Surgery_Hosting_RocketBooster_ForAppDomain_
  commentId: Overload:Rocket.Surgery.Hosting.RocketBooster.ForAppDomain
  isSpec: "True"
  fullName: Rocket.Surgery.Hosting.RocketBooster.ForAppDomain
  nameWithType: RocketBooster.ForAppDomain
- uid: Rocket.Surgery.Hosting.RocketBooster.ForAssemblies(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name: ForAssemblies(IEnumerable<Assembly>)
  href: api/Rocket.Surgery.Hosting.RocketBooster.html#Rocket_Surgery_Hosting_RocketBooster_ForAssemblies_System_Collections_Generic_IEnumerable_System_Reflection_Assembly__
  commentId: M:Rocket.Surgery.Hosting.RocketBooster.ForAssemblies(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name.vb: ForAssemblies(IEnumerable(Of Assembly))
  fullName: Rocket.Surgery.Hosting.RocketBooster.ForAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)
  fullName.vb: Rocket.Surgery.Hosting.RocketBooster.ForAssemblies(System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly))
  nameWithType: RocketBooster.ForAssemblies(IEnumerable<Assembly>)
  nameWithType.vb: RocketBooster.ForAssemblies(IEnumerable(Of Assembly))
- uid: Rocket.Surgery.Hosting.RocketBooster.ForAssemblies*
  name: ForAssemblies
  href: api/Rocket.Surgery.Hosting.RocketBooster.html#Rocket_Surgery_Hosting_RocketBooster_ForAssemblies_
  commentId: Overload:Rocket.Surgery.Hosting.RocketBooster.ForAssemblies
  isSpec: "True"
  fullName: Rocket.Surgery.Hosting.RocketBooster.ForAssemblies
  nameWithType: RocketBooster.ForAssemblies
- uid: Rocket.Surgery.Hosting.RocketBooster.ForConventions(Rocket.Surgery.Conventions.IConventionFactory)
  name: ForConventions(IConventionFactory)
  href: api/Rocket.Surgery.Hosting.RocketBooster.html#Rocket_Surgery_Hosting_RocketBooster_ForConventions_Rocket_Surgery_Conventions_IConventionFactory_
  commentId: M:Rocket.Surgery.Hosting.RocketBooster.ForConventions(Rocket.Surgery.Conventions.IConventionFactory)
  fullName: Rocket.Surgery.Hosting.RocketBooster.ForConventions(Rocket.Surgery.Conventions.IConventionFactory)
  nameWithType: RocketBooster.ForConventions(IConventionFactory)
- uid: Rocket.Surgery.Hosting.RocketBooster.ForConventions*
  name: ForConventions
  href: api/Rocket.Surgery.Hosting.RocketBooster.html#Rocket_Surgery_Hosting_RocketBooster_ForConventions_
  commentId: Overload:Rocket.Surgery.Hosting.RocketBooster.ForConventions
  isSpec: "True"
  fullName: Rocket.Surgery.Hosting.RocketBooster.ForConventions
  nameWithType: RocketBooster.ForConventions
- uid: Rocket.Surgery.Hosting.RocketBooster.ForDependencyContext(Microsoft.Extensions.DependencyModel.DependencyContext)
  name: ForDependencyContext(DependencyContext)
  href: api/Rocket.Surgery.Hosting.RocketBooster.html#Rocket_Surgery_Hosting_RocketBooster_ForDependencyContext_Microsoft_Extensions_DependencyModel_DependencyContext_
  commentId: M:Rocket.Surgery.Hosting.RocketBooster.ForDependencyContext(Microsoft.Extensions.DependencyModel.DependencyContext)
  fullName: Rocket.Surgery.Hosting.RocketBooster.ForDependencyContext(Microsoft.Extensions.DependencyModel.DependencyContext)
  nameWithType: RocketBooster.ForDependencyContext(DependencyContext)
- uid: Rocket.Surgery.Hosting.RocketBooster.ForDependencyContext*
  name: ForDependencyContext
  href: api/Rocket.Surgery.Hosting.RocketBooster.html#Rocket_Surgery_Hosting_RocketBooster_ForDependencyContext_
  commentId: Overload:Rocket.Surgery.Hosting.RocketBooster.ForDependencyContext
  isSpec: "True"
  fullName: Rocket.Surgery.Hosting.RocketBooster.ForDependencyContext
  nameWithType: RocketBooster.ForDependencyContext
- uid: Rocket.Surgery.WebAssembly.Hosting
  name: Rocket.Surgery.WebAssembly.Hosting
  href: api/Rocket.Surgery.WebAssembly.Hosting.html
  commentId: N:Rocket.Surgery.WebAssembly.Hosting
  fullName: Rocket.Surgery.WebAssembly.Hosting
  nameWithType: Rocket.Surgery.WebAssembly.Hosting
- uid: Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingAsyncConvention
  name: IWebAssemblyHostingAsyncConvention
  href: api/Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingAsyncConvention.html
  commentId: T:Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingAsyncConvention
  fullName: Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingAsyncConvention
  nameWithType: IWebAssemblyHostingAsyncConvention
- uid: Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder,System.Threading.CancellationToken)
  name: Register(IConventionContext, WebAssemblyHostBuilder, CancellationToken)
  href: api/Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingAsyncConvention.html#Rocket_Surgery_WebAssembly_Hosting_IWebAssemblyHostingAsyncConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Microsoft_AspNetCore_Components_WebAssembly_Hosting_WebAssemblyHostBuilder_System_Threading_CancellationToken_
  commentId: M:Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder,System.Threading.CancellationToken)
  fullName: Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingAsyncConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder, System.Threading.CancellationToken)
  nameWithType: IWebAssemblyHostingAsyncConvention.Register(IConventionContext, WebAssemblyHostBuilder, CancellationToken)
- uid: Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingAsyncConvention.Register*
  name: Register
  href: api/Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingAsyncConvention.html#Rocket_Surgery_WebAssembly_Hosting_IWebAssemblyHostingAsyncConvention_Register_
  commentId: Overload:Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingAsyncConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingAsyncConvention.Register
  nameWithType: IWebAssemblyHostingAsyncConvention.Register
- uid: Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingConvention
  name: IWebAssemblyHostingConvention
  href: api/Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingConvention.html
  commentId: T:Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingConvention
  fullName: Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingConvention
  nameWithType: IWebAssemblyHostingConvention
- uid: Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder)
  name: Register(IConventionContext, WebAssemblyHostBuilder)
  href: api/Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingConvention.html#Rocket_Surgery_WebAssembly_Hosting_IWebAssemblyHostingConvention_Register_Rocket_Surgery_Conventions_IConventionContext_Microsoft_AspNetCore_Components_WebAssembly_Hosting_WebAssemblyHostBuilder_
  commentId: M:Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingConvention.Register(Rocket.Surgery.Conventions.IConventionContext,Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder)
  fullName: Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingConvention.Register(Rocket.Surgery.Conventions.IConventionContext, Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder)
  nameWithType: IWebAssemblyHostingConvention.Register(IConventionContext, WebAssemblyHostBuilder)
- uid: Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingConvention.Register*
  name: Register
  href: api/Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingConvention.html#Rocket_Surgery_WebAssembly_Hosting_IWebAssemblyHostingConvention_Register_
  commentId: Overload:Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingConvention.Register
  isSpec: "True"
  fullName: Rocket.Surgery.WebAssembly.Hosting.IWebAssemblyHostingConvention.Register
  nameWithType: IWebAssemblyHostingConvention.Register
- uid: Rocket.Surgery.WebAssembly.Hosting.RocketBooster
  name: RocketBooster
  href: api/Rocket.Surgery.WebAssembly.Hosting.RocketBooster.html
  commentId: T:Rocket.Surgery.WebAssembly.Hosting.RocketBooster
  fullName: Rocket.Surgery.WebAssembly.Hosting.RocketBooster
  nameWithType: RocketBooster
- uid: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.For(Rocket.Surgery.Conventions.IConventionFactory)
  name: For(IConventionFactory)
  href: api/Rocket.Surgery.WebAssembly.Hosting.RocketBooster.html#Rocket_Surgery_WebAssembly_Hosting_RocketBooster_For_Rocket_Surgery_Conventions_IConventionFactory_
  commentId: M:Rocket.Surgery.WebAssembly.Hosting.RocketBooster.For(Rocket.Surgery.Conventions.IConventionFactory)
  fullName: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.For(Rocket.Surgery.Conventions.IConventionFactory)
  nameWithType: RocketBooster.For(IConventionFactory)
- uid: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.For(System.AppDomain)
  name: For(AppDomain)
  href: api/Rocket.Surgery.WebAssembly.Hosting.RocketBooster.html#Rocket_Surgery_WebAssembly_Hosting_RocketBooster_For_System_AppDomain_
  commentId: M:Rocket.Surgery.WebAssembly.Hosting.RocketBooster.For(System.AppDomain)
  fullName: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.For(System.AppDomain)
  nameWithType: RocketBooster.For(AppDomain)
- uid: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.For(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name: For(IEnumerable<Assembly>)
  href: api/Rocket.Surgery.WebAssembly.Hosting.RocketBooster.html#Rocket_Surgery_WebAssembly_Hosting_RocketBooster_For_System_Collections_Generic_IEnumerable_System_Reflection_Assembly__
  commentId: M:Rocket.Surgery.WebAssembly.Hosting.RocketBooster.For(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name.vb: For(IEnumerable(Of Assembly))
  fullName: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.For(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)
  fullName.vb: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.For(System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly))
  nameWithType: RocketBooster.For(IEnumerable<Assembly>)
  nameWithType.vb: RocketBooster.For(IEnumerable(Of Assembly))
- uid: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.For*
  name: For
  href: api/Rocket.Surgery.WebAssembly.Hosting.RocketBooster.html#Rocket_Surgery_WebAssembly_Hosting_RocketBooster_For_
  commentId: Overload:Rocket.Surgery.WebAssembly.Hosting.RocketBooster.For
  isSpec: "True"
  fullName: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.For
  nameWithType: RocketBooster.For
- uid: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForAppDomain(System.AppDomain)
  name: ForAppDomain(AppDomain)
  href: api/Rocket.Surgery.WebAssembly.Hosting.RocketBooster.html#Rocket_Surgery_WebAssembly_Hosting_RocketBooster_ForAppDomain_System_AppDomain_
  commentId: M:Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForAppDomain(System.AppDomain)
  fullName: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForAppDomain(System.AppDomain)
  nameWithType: RocketBooster.ForAppDomain(AppDomain)
- uid: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForAppDomain*
  name: ForAppDomain
  href: api/Rocket.Surgery.WebAssembly.Hosting.RocketBooster.html#Rocket_Surgery_WebAssembly_Hosting_RocketBooster_ForAppDomain_
  commentId: Overload:Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForAppDomain
  isSpec: "True"
  fullName: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForAppDomain
  nameWithType: RocketBooster.ForAppDomain
- uid: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForAssemblies(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name: ForAssemblies(IEnumerable<Assembly>)
  href: api/Rocket.Surgery.WebAssembly.Hosting.RocketBooster.html#Rocket_Surgery_WebAssembly_Hosting_RocketBooster_ForAssemblies_System_Collections_Generic_IEnumerable_System_Reflection_Assembly__
  commentId: M:Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForAssemblies(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  name.vb: ForAssemblies(IEnumerable(Of Assembly))
  fullName: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)
  fullName.vb: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForAssemblies(System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly))
  nameWithType: RocketBooster.ForAssemblies(IEnumerable<Assembly>)
  nameWithType.vb: RocketBooster.ForAssemblies(IEnumerable(Of Assembly))
- uid: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForAssemblies*
  name: ForAssemblies
  href: api/Rocket.Surgery.WebAssembly.Hosting.RocketBooster.html#Rocket_Surgery_WebAssembly_Hosting_RocketBooster_ForAssemblies_
  commentId: Overload:Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForAssemblies
  isSpec: "True"
  fullName: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForAssemblies
  nameWithType: RocketBooster.ForAssemblies
- uid: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForConventions(Rocket.Surgery.Conventions.IConventionFactory)
  name: ForConventions(IConventionFactory)
  href: api/Rocket.Surgery.WebAssembly.Hosting.RocketBooster.html#Rocket_Surgery_WebAssembly_Hosting_RocketBooster_ForConventions_Rocket_Surgery_Conventions_IConventionFactory_
  commentId: M:Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForConventions(Rocket.Surgery.Conventions.IConventionFactory)
  fullName: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForConventions(Rocket.Surgery.Conventions.IConventionFactory)
  nameWithType: RocketBooster.ForConventions(IConventionFactory)
- uid: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForConventions*
  name: ForConventions
  href: api/Rocket.Surgery.WebAssembly.Hosting.RocketBooster.html#Rocket_Surgery_WebAssembly_Hosting_RocketBooster_ForConventions_
  commentId: Overload:Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForConventions
  isSpec: "True"
  fullName: Rocket.Surgery.WebAssembly.Hosting.RocketBooster.ForConventions
  nameWithType: RocketBooster.ForConventions
- uid: Rocket.Surgery.WebAssembly.Hosting.WebAssemblyHostingAsyncConvention
  name: WebAssemblyHostingAsyncConvention
  href: api/Rocket.Surgery.WebAssembly.Hosting.WebAssemblyHostingAsyncConvention.html
  commentId: T:Rocket.Surgery.WebAssembly.Hosting.WebAssemblyHostingAsyncConvention
  fullName: Rocket.Surgery.WebAssembly.Hosting.WebAssemblyHostingAsyncConvention
  nameWithType: WebAssemblyHostingAsyncConvention
- uid: Rocket.Surgery.WebAssembly.Hosting.WebAssemblyHostingConvention
  name: WebAssemblyHostingConvention
  href: api/Rocket.Surgery.WebAssembly.Hosting.WebAssemblyHostingConvention.html
  commentId: T:Rocket.Surgery.WebAssembly.Hosting.WebAssemblyHostingConvention
  fullName: Rocket.Surgery.WebAssembly.Hosting.WebAssemblyHostingConvention
  nameWithType: WebAssemblyHostingConvention
