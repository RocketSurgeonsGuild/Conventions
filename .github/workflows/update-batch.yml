name: Batch Updater

on:
  workflow_call:
    # inputs:
    secrets:
      RSG_BOT_TOKEN:
        required: true
  pull_request_target:
    types:
      - labeled
      - opened
      - reopened
      - closed

jobs:
  update:
    runs-on: ubuntu-latest
    if: |
      (github.event.action == 'opened' || github.event.action == 'reopened') &&
      (github.event.pull_request.user.login == 'dependabot[bot]' || github.event.pull_request.user.login == 'dependabot-preview[bot]') &&
      (
           startsWith(github.event.pull_request.title, 'Bump Rocket.Surgery')
        || startsWith(github.event.pull_request.title, 'Bump Microsoft')
        || startsWith(github.event.pull_request.title, 'Bump Nuke')
        || startsWith(github.event.pull_request.title, 'Bump Rocket.Surgery.Nuke')
        || startsWith(github.event.pull_request.title, 'Bump AutoMapper')
        || startsWith(github.event.pull_request.title, 'Bump Bogus')
        || startsWith(github.event.pull_request.title, 'Bump coverlet')
        || startsWith(github.event.pull_request.title, 'Bump MediatR')
        || startsWith(github.event.pull_request.title, 'Bump FakeItEasy')
        || startsWith(github.event.pull_request.title, 'Bump FluentAssertions')
        || startsWith(github.event.pull_request.title, 'Bump xunit')
      )
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"

      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"

      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"

      - uses: actions/checkout@v2.4.0
        with:
          ref: master

      - run: dotnet tool install -g nukeeper

      - name: Run nukeeper
        run: |
          $title = '${{ github.event.pull_request.title }}'
          $prefix = '';
          if ($title.StartsWith('Bump Rocket.Surgery'))
          {
            $prefix = ($title.Split(' ')[1].Split('.') | select -First 3) -join '.'
          }
          else if ($title.StartsWith('Bump Microsoft'))
          {
            $prefix = ($title.Split(' ')[1].Split('.') | select -First 2) -join '.'
          }
          else if ($title.StartsWith('Bump Nuke') -or $title.StartsWith('Bump Rocket.Surgery.Nuke'))
          {
            $prefix = 'Nuke'
          }
          else
          {
            $prefix = ($title.Split(' ')[1].Split('.') | select -First 1) -join '.'
          }
          if ('${{ steps.prefix.outputs.value }}')
          {
            nukeeper update -m 100 -i "$prefix"
          }
